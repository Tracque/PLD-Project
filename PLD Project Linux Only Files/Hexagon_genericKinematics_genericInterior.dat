codim: 6, face: 1/12, weights: [-1, 0, 0, 0, 0, 0], discriminant: M1
codim: 6, face: 2/12, weights: [1, 2, 2, 2, 2, 2], discriminant: 1
codim: 6, face: 3/12, weights: [0, -1, 0, 0, 0, 0], discriminant: M2
codim: 6, face: 4/12, weights: [2, 1, 2, 2, 2, 2], discriminant: 1
codim: 6, face: 5/12, weights: [0, 0, -1, 0, 0, 0], discriminant: M3
codim: 6, face: 6/12, weights: [2, 2, 1, 2, 2, 2], discriminant: 1
codim: 6, face: 7/12, weights: [0, 0, 0, -1, 0, 0], discriminant: M4
codim: 6, face: 8/12, weights: [2, 2, 2, 1, 2, 2], discriminant: 1
codim: 6, face: 9/12, weights: [0, 0, 0, 0, -1, 0], discriminant: M5
codim: 6, face: 10/12, weights: [2, 2, 2, 2, 1, 2], discriminant: 1
codim: 6, face: 11/12, weights: [0, 0, 0, 0, 0, -1], discriminant: M6
codim: 6, face: 12/12, weights: [2, 2, 2, 2, 2, 1], discriminant: 1
codim: 5, face: 1/36, weights: [0, 1, 1, 1, 1, 1], discriminant: 1
codim: 5, face: 2/36, weights: [-1, -1, 0, 0, 0, 0], discriminant: M1^2 - 2*M1*M2 + M1*m2 - 2*M2^2 - 2*M2*m2 + m2^2
codim: 5, face: 3/36, weights: [-1, 0, -1, 0, 0, 0], discriminant: M1^2 - 2*M1*M3 + M1*s23 - 2*M3^2 - 2*M3*s23 + s23^2
codim: 5, face: 4/36, weights: [-1, 0, 0, -1, 0, 0], discriminant: M1^2 - 2*M1*M4 + M1*s234 - 2*M4^2 - 2*M4*s234 + s234^2
codim: 5, face: 5/36, weights: [-1, 0, 0, 0, -1, 0], discriminant: M1^2 - 2*M1*M5 + M1*s61 - 2*M5^2 - 2*M5*s61 + s61^2
codim: 5, face: 6/36, weights: [-1, 0, 0, 0, 0, -1], discriminant: M1^2 - 2*M1*M6 + M1*m1 - 2*M6^2 - 2*M6*m1 + m1^2
codim: 5, face: 7/36, weights: [1, 1, 2, 2, 2, 2], discriminant: 1
codim: 5, face: 8/36, weights: [1, 2, 1, 2, 2, 2], discriminant: 1
codim: 5, face: 9/36, weights: [1, 2, 2, 1, 2, 2], discriminant: 1
codim: 5, face: 10/36, weights: [1, 2, 2, 2, 1, 2], discriminant: 1
codim: 5, face: 11/36, weights: [1, 2, 2, 2, 2, 1], discriminant: 1
codim: 5, face: 12/36, weights: [1, 0, 1, 1, 1, 1], discriminant: 1
codim: 5, face: 13/36, weights: [0, -1, -1, 0, 0, 0], discriminant: M2^2 - 2*M2*M3 + M2*m3 - 2*M3^2 - 2*M3*m3 + m3^2
codim: 5, face: 14/36, weights: [0, -1, 0, -1, 0, 0], discriminant: M2^2 - 2*M2*M4 + M2*s34 - 2*M4^2 - 2*M4*s34 + s34^2
codim: 5, face: 15/36, weights: [0, -1, 0, 0, -1, 0], discriminant: M2^2 - 2*M2*M5 + M2*s345 - 2*M5^2 - 2*M5*s345 + s345^2
codim: 5, face: 16/36, weights: [0, -1, 0, 0, 0, -1], discriminant: M2^2 - 2*M2*M6 + M2*s12 - 2*M6^2 - 2*M6*s12 + s12^2
codim: 5, face: 17/36, weights: [2, 1, 1, 2, 2, 2], discriminant: 1
codim: 5, face: 18/36, weights: [2, 1, 2, 1, 2, 2], discriminant: 1
codim: 5, face: 19/36, weights: [2, 1, 2, 2, 1, 2], discriminant: 1
codim: 5, face: 20/36, weights: [2, 1, 2, 2, 2, 1], discriminant: 1
codim: 5, face: 21/36, weights: [1, 1, 0, 1, 1, 1], discriminant: 1
codim: 5, face: 22/36, weights: [0, 0, -1, -1, 0, 0], discriminant: M3^2 - 2*M3*M4 + M3*m4 - 2*M4^2 - 2*M4*m4 + m4^2
codim: 5, face: 23/36, weights: [0, 0, -1, 0, -1, 0], discriminant: M3^2 - 2*M3*M5 + M3*s45 - 2*M5^2 - 2*M5*s45 + s45^2
codim: 5, face: 24/36, weights: [0, 0, -1, 0, 0, -1], discriminant: M3^2 - 2*M3*M6 + M3*s123 - 2*M6^2 - 2*M6*s123 + s123^2
codim: 5, face: 25/36, weights: [2, 2, 1, 1, 2, 2], discriminant: 1
codim: 5, face: 26/36, weights: [2, 2, 1, 2, 1, 2], discriminant: 1
codim: 5, face: 27/36, weights: [2, 2, 1, 2, 2, 1], discriminant: 1
codim: 5, face: 28/36, weights: [1, 1, 1, 0, 1, 1], discriminant: 1
codim: 5, face: 29/36, weights: [0, 0, 0, -1, -1, 0], discriminant: M4^2 - 2*M4*M5 + M4*m5 - 2*M5^2 - 2*M5*m5 + m5^2
codim: 5, face: 30/36, weights: [0, 0, 0, -1, 0, -1], discriminant: M4^2 - 2*M4*M6 + M4*s56 - 2*M6^2 - 2*M6*s56 + s56^2
codim: 5, face: 31/36, weights: [2, 2, 2, 1, 1, 2], discriminant: 1
codim: 5, face: 32/36, weights: [2, 2, 2, 1, 2, 1], discriminant: 1
codim: 5, face: 33/36, weights: [1, 1, 1, 1, 0, 1], discriminant: 1
codim: 5, face: 34/36, weights: [0, 0, 0, 0, -1, -1], discriminant: M5^2 - 2*M5*M6 + M5*m6 - 2*M6^2 - 2*M6*m6 + m6^2
codim: 5, face: 35/36, weights: [2, 2, 2, 2, 1, 1], discriminant: 1
codim: 5, face: 36/36, weights: [1, 1, 1, 1, 1, 0], discriminant: 1
codim: 4, face: 1/55, weights: [0, 0, 1, 1, 1, 1], discriminant: m2
codim: 4, face: 2/55, weights: [0, 1, 0, 1, 1, 1], discriminant: s23
codim: 4, face: 3/55, weights: [0, 1, 1, 0, 1, 1], discriminant: s234
codim: 4, face: 4/55, weights: [0, 1, 1, 1, 0, 1], discriminant: s61
codim: 4, face: 5/55, weights: [0, 1, 1, 1, 1, 0], discriminant: m1
codim: 4, face: 6/55, weights: [-1, -1, -1, 0, 0, 0], discriminant: 1/2*M1^2*m3 + M1*M2*M3 - 1/2*M1*M2*m2 - 1/2*M1*M2*m3 + 1/2*M1*M2*s23 + M1*M3^2 - 1/2*M1*M3*m2 + 3/2*M1*M3*m3 + 1/2*M1*M3*s23 + 1/2*M1*m2*m3 + 1/2*M1*m3^2 + 1/2*M1*m3*s23 - M2^2*M3 - 1/2*M2^2*s23 + M2*M3^2 - 3/2*M2*M3*m2 + 1/2*M2*M3*m3 + 3/2*M2*M3*s23 - 1/2*M2*m2*s23 + 1/2*M2*m3*s23 + 1/2*M2*s23^2 + 1/2*M3^2*m2 - 1/2*M3*m2^2 + 1/2*M3*m2*m3 + 1/2*M3*m2*s23 + 1/2*m2*m3*s23
codim: 4, face: 7/55, weights: [-1, -1, 0, -1, 0, 0], discriminant: 1/2*M1^2*s34 + M1*M2*M4 - 1/2*M1*M2*m2 + 1/2*M1*M2*s234 - 1/2*M1*M2*s34 + M1*M4^2 - 1/2*M1*M4*m2 + 1/2*M1*M4*s234 + 3/2*M1*M4*s34 + 1/2*M1*m2*s34 + 1/2*M1*s234*s34 + 1/2*M1*s34^2 - M2^2*M4 - 1/2*M2^2*s234 + M2*M4^2 - 3/2*M2*M4*m2 + 3/2*M2*M4*s234 + 1/2*M2*M4*s34 - 1/2*M2*m2*s234 + 1/2*M2*s234^2 + 1/2*M2*s234*s34 + 1/2*M4^2*m2 - 1/2*M4*m2^2 + 1/2*M4*m2*s234 + 1/2*M4*m2*s34 + 1/2*m2*s234*s34
codim: 4, face: 8/55, weights: [-1, -1, 0, 0, -1, 0], discriminant: 1/2*M1^2*s345 + M1*M2*M5 - 1/2*M1*M2*m2 - 1/2*M1*M2*s345 + 1/2*M1*M2*s61 + M1*M5^2 - 1/2*M1*M5*m2 + 3/2*M1*M5*s345 + 1/2*M1*M5*s61 + 1/2*M1*m2*s345 + 1/2*M1*s345^2 + 1/2*M1*s345*s61 - M2^2*M5 - 1/2*M2^2*s61 + M2*M5^2 - 3/2*M2*M5*m2 + 1/2*M2*M5*s345 + 3/2*M2*M5*s61 - 1/2*M2*m2*s61 + 1/2*M2*s345*s61 + 1/2*M2*s61^2 + 1/2*M5^2*m2 - 1/2*M5*m2^2 + 1/2*M5*m2*s345 + 1/2*M5*m2*s61 + 1/2*m2*s345*s61
codim: 4, face: 9/55, weights: [-1, -1, 0, 0, 0, -1], discriminant: 1/2*M1^2*s12 + M1*M2*M6 + 1/2*M1*M2*m1 - 1/2*M1*M2*m2 - 1/2*M1*M2*s12 + M1*M6^2 + 1/2*M1*M6*m1 - 1/2*M1*M6*m2 + 3/2*M1*M6*s12 + 1/2*M1*m1*s12 + 1/2*M1*m2*s12 + 1/2*M1*s12^2 - M2^2*M6 - 1/2*M2^2*m1 + M2*M6^2 + 3/2*M2*M6*m1 - 3/2*M2*M6*m2 + 1/2*M2*M6*s12 + 1/2*M2*m1^2 - 1/2*M2*m1*m2 + 1/2*M2*m1*s12 + 1/2*M6^2*m2 + 1/2*M6*m1*m2 - 1/2*M6*m2^2 + 1/2*M6*m2*s12 + 1/2*m1*m2*s12
codim: 4, face: 10/55, weights: [-1, 0, -1, -1, 0, 0], discriminant: 1/2*M1^2*m4 + M1*M3*M4 - 1/2*M1*M3*m4 - 1/2*M1*M3*s23 + 1/2*M1*M3*s234 + M1*M4^2 + 3/2*M1*M4*m4 - 1/2*M1*M4*s23 + 1/2*M1*M4*s234 + 1/2*M1*m4^2 + 1/2*M1*m4*s23 + 1/2*M1*m4*s234 - M3^2*M4 - 1/2*M3^2*s234 + M3*M4^2 + 1/2*M3*M4*m4 - 3/2*M3*M4*s23 + 3/2*M3*M4*s234 + 1/2*M3*m4*s234 - 1/2*M3*s23*s234 + 1/2*M3*s234^2 + 1/2*M4^2*s23 + 1/2*M4*m4*s23 - 1/2*M4*s23^2 + 1/2*M4*s23*s234 + 1/2*m4*s23*s234
codim: 4, face: 11/55, weights: [-1, 0, -1, 0, -1, 0], discriminant: 1/2*M1^2*s45 + M1*M3*M5 - 1/2*M1*M3*s23 - 1/2*M1*M3*s45 + 1/2*M1*M3*s61 + M1*M5^2 - 1/2*M1*M5*s23 + 3/2*M1*M5*s45 + 1/2*M1*M5*s61 + 1/2*M1*s23*s45 + 1/2*M1*s45^2 + 1/2*M1*s45*s61 - M3^2*M5 - 1/2*M3^2*s61 + M3*M5^2 - 3/2*M3*M5*s23 + 1/2*M3*M5*s45 + 3/2*M3*M5*s61 - 1/2*M3*s23*s61 + 1/2*M3*s45*s61 + 1/2*M3*s61^2 + 1/2*M5^2*s23 - 1/2*M5*s23^2 + 1/2*M5*s23*s45 + 1/2*M5*s23*s61 + 1/2*s23*s45*s61
codim: 4, face: 12/55, weights: [-1, 0, -1, 0, 0, -1], discriminant: 1/2*M1^2*s123 + M1*M3*M6 + 1/2*M1*M3*m1 - 1/2*M1*M3*s123 - 1/2*M1*M3*s23 + M1*M6^2 + 1/2*M1*M6*m1 + 3/2*M1*M6*s123 - 1/2*M1*M6*s23 + 1/2*M1*m1*s123 + 1/2*M1*s123^2 + 1/2*M1*s123*s23 - M3^2*M6 - 1/2*M3^2*m1 + M3*M6^2 + 3/2*M3*M6*m1 + 1/2*M3*M6*s123 - 3/2*M3*M6*s23 + 1/2*M3*m1^2 + 1/2*M3*m1*s123 - 1/2*M3*m1*s23 + 1/2*M6^2*s23 + 1/2*M6*m1*s23 + 1/2*M6*s123*s23 - 1/2*M6*s23^2 + 1/2*m1*s123*s23
codim: 4, face: 13/55, weights: [-1, 0, 0, -1, -1, 0], discriminant: 1/2*M1^2*m5 + M1*M4*M5 - 1/2*M1*M4*m5 - 1/2*M1*M4*s234 + 1/2*M1*M4*s61 + M1*M5^2 + 3/2*M1*M5*m5 - 1/2*M1*M5*s234 + 1/2*M1*M5*s61 + 1/2*M1*m5^2 + 1/2*M1*m5*s234 + 1/2*M1*m5*s61 - M4^2*M5 - 1/2*M4^2*s61 + M4*M5^2 + 1/2*M4*M5*m5 - 3/2*M4*M5*s234 + 3/2*M4*M5*s61 + 1/2*M4*m5*s61 - 1/2*M4*s234*s61 + 1/2*M4*s61^2 + 1/2*M5^2*s234 + 1/2*M5*m5*s234 - 1/2*M5*s234^2 + 1/2*M5*s234*s61 + 1/2*m5*s234*s61
codim: 4, face: 14/55, weights: [-1, 0, 0, -1, 0, -1], discriminant: 1/2*M1^2*s56 + M1*M4*M6 + 1/2*M1*M4*m1 - 1/2*M1*M4*s234 - 1/2*M1*M4*s56 + M1*M6^2 + 1/2*M1*M6*m1 - 1/2*M1*M6*s234 + 3/2*M1*M6*s56 + 1/2*M1*m1*s56 + 1/2*M1*s234*s56 + 1/2*M1*s56^2 - M4^2*M6 - 1/2*M4^2*m1 + M4*M6^2 + 3/2*M4*M6*m1 - 3/2*M4*M6*s234 + 1/2*M4*M6*s56 + 1/2*M4*m1^2 - 1/2*M4*m1*s234 + 1/2*M4*m1*s56 + 1/2*M6^2*s234 + 1/2*M6*m1*s234 - 1/2*M6*s234^2 + 1/2*M6*s234*s56 + 1/2*m1*s234*s56
codim: 4, face: 15/55, weights: [-1, 0, 0, 0, -1, -1], discriminant: 1/2*M1^2*m6 + M1*M5*M6 + 1/2*M1*M5*m1 - 1/2*M1*M5*m6 - 1/2*M1*M5*s61 + M1*M6^2 + 1/2*M1*M6*m1 + 3/2*M1*M6*m6 - 1/2*M1*M6*s61 + 1/2*M1*m1*m6 + 1/2*M1*m6^2 + 1/2*M1*m6*s61 - M5^2*M6 - 1/2*M5^2*m1 + M5*M6^2 + 3/2*M5*M6*m1 + 1/2*M5*M6*m6 - 3/2*M5*M6*s61 + 1/2*M5*m1^2 + 1/2*M5*m1*m6 - 1/2*M5*m1*s61 + 1/2*M6^2*s61 + 1/2*M6*m1*s61 + 1/2*M6*m6*s61 - 1/2*M6*s61^2 + 1/2*m1*m6*s61
codim: 4, face: 16/55, weights: [1, 1, 1, 2, 2, 2], discriminant: 1
codim: 4, face: 17/55, weights: [1, 1, 2, 1, 2, 2], discriminant: 1
codim: 4, face: 18/55, weights: [1, 1, 2, 2, 1, 2], discriminant: 1
codim: 4, face: 19/55, weights: [1, 1, 2, 2, 2, 1], discriminant: 1
codim: 4, face: 20/55, weights: [1, 2, 1, 1, 2, 2], discriminant: 1
codim: 4, face: 21/55, weights: [1, 2, 1, 2, 1, 2], discriminant: 1
codim: 4, face: 22/55, weights: [1, 2, 1, 2, 2, 1], discriminant: 1
codim: 4, face: 23/55, weights: [1, 2, 2, 1, 1, 2], discriminant: 1
codim: 4, face: 24/55, weights: [1, 2, 2, 1, 2, 1], discriminant: 1
codim: 4, face: 25/55, weights: [1, 2, 2, 2, 1, 1], discriminant: 1
codim: 4, face: 26/55, weights: [1, 0, 0, 1, 1, 1], discriminant: m3
codim: 4, face: 27/55, weights: [1, 0, 1, 0, 1, 1], discriminant: s34
codim: 4, face: 28/55, weights: [1, 0, 1, 1, 0, 1], discriminant: s345
codim: 4, face: 29/55, weights: [1, 0, 1, 1, 1, 0], discriminant: s12
codim: 4, face: 30/55, weights: [0, -1, -1, -1, 0, 0], discriminant: 1/2*M2^2*m4 + M2*M3*M4 - 1/2*M2*M3*m3 - 1/2*M2*M3*m4 + 1/2*M2*M3*s34 + M2*M4^2 - 1/2*M2*M4*m3 + 3/2*M2*M4*m4 + 1/2*M2*M4*s34 + 1/2*M2*m3*m4 + 1/2*M2*m4^2 + 1/2*M2*m4*s34 - M3^2*M4 - 1/2*M3^2*s34 + M3*M4^2 - 3/2*M3*M4*m3 + 1/2*M3*M4*m4 + 3/2*M3*M4*s34 - 1/2*M3*m3*s34 + 1/2*M3*m4*s34 + 1/2*M3*s34^2 + 1/2*M4^2*m3 - 1/2*M4*m3^2 + 1/2*M4*m3*m4 + 1/2*M4*m3*s34 + 1/2*m3*m4*s34
codim: 4, face: 31/55, weights: [0, -1, -1, 0, -1, 0], discriminant: 1/2*M2^2*s45 + M2*M3*M5 - 1/2*M2*M3*m3 + 1/2*M2*M3*s345 - 1/2*M2*M3*s45 + M2*M5^2 - 1/2*M2*M5*m3 + 1/2*M2*M5*s345 + 3/2*M2*M5*s45 + 1/2*M2*m3*s45 + 1/2*M2*s345*s45 + 1/2*M2*s45^2 - M3^2*M5 - 1/2*M3^2*s345 + M3*M5^2 - 3/2*M3*M5*m3 + 3/2*M3*M5*s345 + 1/2*M3*M5*s45 - 1/2*M3*m3*s345 + 1/2*M3*s345^2 + 1/2*M3*s345*s45 + 1/2*M5^2*m3 - 1/2*M5*m3^2 + 1/2*M5*m3*s345 + 1/2*M5*m3*s45 + 1/2*m3*s345*s45
codim: 4, face: 32/55, weights: [0, -1, -1, 0, 0, -1], discriminant: 1/2*M2^2*s123 + M2*M3*M6 - 1/2*M2*M3*m3 + 1/2*M2*M3*s12 - 1/2*M2*M3*s123 + M2*M6^2 - 1/2*M2*M6*m3 + 1/2*M2*M6*s12 + 3/2*M2*M6*s123 + 1/2*M2*m3*s123 + 1/2*M2*s12*s123 + 1/2*M2*s123^2 - M3^2*M6 - 1/2*M3^2*s12 + M3*M6^2 - 3/2*M3*M6*m3 + 3/2*M3*M6*s12 + 1/2*M3*M6*s123 - 1/2*M3*m3*s12 + 1/2*M3*s12^2 + 1/2*M3*s12*s123 + 1/2*M6^2*m3 - 1/2*M6*m3^2 + 1/2*M6*m3*s12 + 1/2*M6*m3*s123 + 1/2*m3*s12*s123
codim: 4, face: 33/55, weights: [0, -1, 0, -1, -1, 0], discriminant: 1/2*M2^2*m5 + M2*M4*M5 - 1/2*M2*M4*m5 - 1/2*M2*M4*s34 + 1/2*M2*M4*s345 + M2*M5^2 + 3/2*M2*M5*m5 - 1/2*M2*M5*s34 + 1/2*M2*M5*s345 + 1/2*M2*m5^2 + 1/2*M2*m5*s34 + 1/2*M2*m5*s345 - M4^2*M5 - 1/2*M4^2*s345 + M4*M5^2 + 1/2*M4*M5*m5 - 3/2*M4*M5*s34 + 3/2*M4*M5*s345 + 1/2*M4*m5*s345 - 1/2*M4*s34*s345 + 1/2*M4*s345^2 + 1/2*M5^2*s34 + 1/2*M5*m5*s34 - 1/2*M5*s34^2 + 1/2*M5*s34*s345 + 1/2*m5*s34*s345
codim: 4, face: 34/55, weights: [0, -1, 0, -1, 0, -1], discriminant: 1/2*M2^2*s56 + M2*M4*M6 + 1/2*M2*M4*s12 - 1/2*M2*M4*s34 - 1/2*M2*M4*s56 + M2*M6^2 + 1/2*M2*M6*s12 - 1/2*M2*M6*s34 + 3/2*M2*M6*s56 + 1/2*M2*s12*s56 + 1/2*M2*s34*s56 + 1/2*M2*s56^2 - M4^2*M6 - 1/2*M4^2*s12 + M4*M6^2 + 3/2*M4*M6*s12 - 3/2*M4*M6*s34 + 1/2*M4*M6*s56 + 1/2*M4*s12^2 - 1/2*M4*s12*s34 + 1/2*M4*s12*s56 + 1/2*M6^2*s34 + 1/2*M6*s12*s34 - 1/2*M6*s34^2 + 1/2*M6*s34*s56 + 1/2*s12*s34*s56
codim: 4, face: 35/55, weights: [0, -1, 0, 0, -1, -1], discriminant: 1/2*M2^2*m6 + M2*M5*M6 - 1/2*M2*M5*m6 + 1/2*M2*M5*s12 - 1/2*M2*M5*s345 + M2*M6^2 + 3/2*M2*M6*m6 + 1/2*M2*M6*s12 - 1/2*M2*M6*s345 + 1/2*M2*m6^2 + 1/2*M2*m6*s12 + 1/2*M2*m6*s345 - M5^2*M6 - 1/2*M5^2*s12 + M5*M6^2 + 1/2*M5*M6*m6 + 3/2*M5*M6*s12 - 3/2*M5*M6*s345 + 1/2*M5*m6*s12 + 1/2*M5*s12^2 - 1/2*M5*s12*s345 + 1/2*M6^2*s345 + 1/2*M6*m6*s345 + 1/2*M6*s12*s345 - 1/2*M6*s345^2 + 1/2*m6*s12*s345
codim: 4, face: 36/55, weights: [2, 1, 1, 1, 2, 2], discriminant: 1
codim: 4, face: 37/55, weights: [2, 1, 1, 2, 1, 2], discriminant: 1
codim: 4, face: 38/55, weights: [2, 1, 1, 2, 2, 1], discriminant: 1
codim: 4, face: 39/55, weights: [2, 1, 2, 1, 1, 2], discriminant: 1
codim: 4, face: 40/55, weights: [2, 1, 2, 1, 2, 1], discriminant: 1
codim: 4, face: 41/55, weights: [2, 1, 2, 2, 1, 1], discriminant: 1
codim: 4, face: 42/55, weights: [1, 1, 0, 0, 1, 1], discriminant: m4
codim: 4, face: 43/55, weights: [1, 1, 0, 1, 0, 1], discriminant: s45
codim: 4, face: 44/55, weights: [1, 1, 0, 1, 1, 0], discriminant: s123
codim: 4, face: 45/55, weights: [0, 0, -1, -1, -1, 0], discriminant: 1/2*M3^2*m5 + M3*M4*M5 - 1/2*M3*M4*m4 - 1/2*M3*M4*m5 + 1/2*M3*M4*s45 + M3*M5^2 - 1/2*M3*M5*m4 + 3/2*M3*M5*m5 + 1/2*M3*M5*s45 + 1/2*M3*m4*m5 + 1/2*M3*m5^2 + 1/2*M3*m5*s45 - M4^2*M5 - 1/2*M4^2*s45 + M4*M5^2 - 3/2*M4*M5*m4 + 1/2*M4*M5*m5 + 3/2*M4*M5*s45 - 1/2*M4*m4*s45 + 1/2*M4*m5*s45 + 1/2*M4*s45^2 + 1/2*M5^2*m4 - 1/2*M5*m4^2 + 1/2*M5*m4*m5 + 1/2*M5*m4*s45 + 1/2*m4*m5*s45
codim: 4, face: 46/55, weights: [0, 0, -1, -1, 0, -1], discriminant: 1/2*M3^2*s56 + M3*M4*M6 - 1/2*M3*M4*m4 + 1/2*M3*M4*s123 - 1/2*M3*M4*s56 + M3*M6^2 - 1/2*M3*M6*m4 + 1/2*M3*M6*s123 + 3/2*M3*M6*s56 + 1/2*M3*m4*s56 + 1/2*M3*s123*s56 + 1/2*M3*s56^2 - M4^2*M6 - 1/2*M4^2*s123 + M4*M6^2 - 3/2*M4*M6*m4 + 3/2*M4*M6*s123 + 1/2*M4*M6*s56 - 1/2*M4*m4*s123 + 1/2*M4*s123^2 + 1/2*M4*s123*s56 + 1/2*M6^2*m4 - 1/2*M6*m4^2 + 1/2*M6*m4*s123 + 1/2*M6*m4*s56 + 1/2*m4*s123*s56
codim: 4, face: 47/55, weights: [0, 0, -1, 0, -1, -1], discriminant: 1/2*M3^2*m6 + M3*M5*M6 - 1/2*M3*M5*m6 + 1/2*M3*M5*s123 - 1/2*M3*M5*s45 + M3*M6^2 + 3/2*M3*M6*m6 + 1/2*M3*M6*s123 - 1/2*M3*M6*s45 + 1/2*M3*m6^2 + 1/2*M3*m6*s123 + 1/2*M3*m6*s45 - M5^2*M6 - 1/2*M5^2*s123 + M5*M6^2 + 1/2*M5*M6*m6 + 3/2*M5*M6*s123 - 3/2*M5*M6*s45 + 1/2*M5*m6*s123 + 1/2*M5*s123^2 - 1/2*M5*s123*s45 + 1/2*M6^2*s45 + 1/2*M6*m6*s45 + 1/2*M6*s123*s45 - 1/2*M6*s45^2 + 1/2*m6*s123*s45
codim: 4, face: 48/55, weights: [2, 2, 1, 1, 1, 2], discriminant: 1
codim: 4, face: 49/55, weights: [2, 2, 1, 1, 2, 1], discriminant: 1
codim: 4, face: 50/55, weights: [2, 2, 1, 2, 1, 1], discriminant: 1
codim: 4, face: 51/55, weights: [1, 1, 1, 0, 0, 1], discriminant: m5
codim: 4, face: 52/55, weights: [1, 1, 1, 0, 1, 0], discriminant: s56
codim: 4, face: 53/55, weights: [0, 0, 0, -1, -1, -1], discriminant: 1/2*M4^2*m6 + M4*M5*M6 - 1/2*M4*M5*m5 - 1/2*M4*M5*m6 + 1/2*M4*M5*s56 + M4*M6^2 - 1/2*M4*M6*m5 + 3/2*M4*M6*m6 + 1/2*M4*M6*s56 + 1/2*M4*m5*m6 + 1/2*M4*m6^2 + 1/2*M4*m6*s56 - M5^2*M6 - 1/2*M5^2*s56 + M5*M6^2 - 3/2*M5*M6*m5 + 1/2*M5*M6*m6 + 3/2*M5*M6*s56 - 1/2*M5*m5*s56 + 1/2*M5*m6*s56 + 1/2*M5*s56^2 + 1/2*M6^2*m5 - 1/2*M6*m5^2 + 1/2*M6*m5*m6 + 1/2*M6*m5*s56 + 1/2*m5*m6*s56
codim: 4, face: 54/55, weights: [2, 2, 2, 1, 1, 1], discriminant: 1
codim: 4, face: 55/55, weights: [1, 1, 1, 1, 0, 0], discriminant: m6
codim: 3, face: 1/50, weights: [0, 0, 0, 1, 1, 1], discriminant: m2^2 - 2*m2*m3 + m2*s23 - 2*m3^2 - 2*m3*s23 + s23^2
codim: 3, face: 2/50, weights: [0, 0, 1, 0, 1, 1], discriminant: m2^2 - 2*m2*s234 + m2*s34 - 2*s234^2 - 2*s234*s34 + s34^2
codim: 3, face: 3/50, weights: [0, 0, 1, 1, 0, 1], discriminant: m2^2 - 2*m2*s345 + m2*s61 - 2*s345^2 - 2*s345*s61 + s61^2
codim: 3, face: 4/50, weights: [0, 0, 1, 1, 1, 0], discriminant: m1^2 - 2*m1*m2 + m1*s12 - 2*m2^2 - 2*m2*s12 + s12^2
codim: 3, face: 5/50, weights: [0, 1, 0, 0, 1, 1], discriminant: m4^2 - 2*m4*s23 + m4*s234 - 2*s23^2 - 2*s23*s234 + s234^2
codim: 3, face: 6/50, weights: [0, 1, 0, 1, 0, 1], discriminant: s23^2 - 2*s23*s45 + s23*s61 - 2*s45^2 - 2*s45*s61 + s61^2
codim: 3, face: 7/50, weights: [0, 1, 0, 1, 1, 0], discriminant: m1^2 - 2*m1*s123 + m1*s23 - 2*s123^2 - 2*s123*s23 + s23^2
codim: 3, face: 8/50, weights: [0, 1, 1, 0, 0, 1], discriminant: m5^2 - 2*m5*s234 + m5*s61 - 2*s234^2 - 2*s234*s61 + s61^2
codim: 3, face: 9/50, weights: [0, 1, 1, 0, 1, 0], discriminant: m1^2 - 2*m1*s234 + m1*s56 - 2*s234^2 - 2*s234*s56 + s56^2
codim: 3, face: 10/50, weights: [0, 1, 1, 1, 0, 0], discriminant: m1^2 - 2*m1*m6 + m1*s61 - 2*m6^2 - 2*m6*s61 + s61^2
codim: 3, face: 11/50, weights: [-1, -1, -1, -1, 0, 0], discriminant: M1^2*M3^2 - 2*M1^2*M3*M4 + M1^2*M3*m3 + M1^2*M3*m4 + M1^2*M3*s34 + M1^2*M4^2 - M1^2*M4*m3 + M1^2*M4*m4 - M1^2*M4*s34 + 1/4*M1^2*m3^2 + 1/2*M1^2*m3*m4 + 1/2*M1^2*m3*s34 + 1/4*M1^2*m4^2 - 1/2*M1^2*m4*s34 + 1/4*M1^2*s34^2 - 2*M1*M2*M3^2 + 4*M1*M2*M3*M4 - M1*M2*M3*m3 - 2*M1*M2*M3*m4 - M1*M2*M3*s23 + M1*M2*M3*s234 - M1*M2*M3*s34 - 2*M1*M2*M4^2 + M1*M2*M4*m3 - 2*M1*M2*M4*m4 + M1*M2*M4*s23 - M1*M2*M4*s234 + M1*M2*M4*s34 + M1*M2*m2*m4 - 1/2*M1*M2*m3*m4 - 1/2*M1*M2*m3*s23 + 1/2*M1*M2*m3*s234 - 1/2*M1*M2*m4^2 - 1/2*M1*M2*m4*s23 - 1/2*M1*M2*m4*s234 + 1/2*M1*M2*m4*s34 - 1/2*M1*M2*s23*s34 + 1/2*M1*M2*s234*s34 + M1*M3^2*m2 + M1*M3^2*s234 + M1*M3^2*s34 - 2*M1*M3*M4*m2 + M1*M3*M4*m3 - M1*M3*M4*s23 - M1*M3*M4*s234 - M1*M3*M4*s34 + 1/2*M1*M3*m2*m3 + 3/2*M1*M3*m2*m4 + 1/2*M1*M3*m2*s34 + 3/2*M1*M3*m3*s234 + 3/2*M1*M3*m3*s34 + 1/2*M1*M3*m4*s234 + 1/2*M1*M3*m4*s34 + 3/2*M1*M3*s234*s34 + 3/2*M1*M3*s34^2 + M1*M4^2*m2 - M1*M4^2*m3 + M1*M4^2*s23 - 1/2*M1*M4*m2*m3 + 3/2*M1*M4*m2*m4 - 1/2*M1*M4*m2*s34 + 3/2*M1*M4*m3^2 - 1/2*M1*M4*m3*m4 - 3/2*M1*M4*m3*s23 + 3/2*M1*M4*m3*s34 + 1/2*M1*M4*m4*s23 - 3/2*M1*M4*s23*s34 + 1/2*M1*m2*m3*m4 + 1/2*M1*m2*m4^2 - 1/2*M1*m2*m4*s34 + 1/2*M1*m3^2*s234 + 1/2*M1*m3*m4*s234 + M1*m3*m4*s34 + 1/2*M1*m3*s23*s34 + 1/2*M1*m3*s234*s34 - 1/2*M1*m4*s23*s34 + 1/2*M1*s23*s34^2 + M2^2*M3^2 - 2*M2^2*M3*M4 + M2^2*M3*m4 + M2^2*M3*s23 - M2^2*M3*s234 + M2^2*M4^2 + M2^2*M4*m4 - M2^2*M4*s23 + M2^2*M4*s234 + 1/4*M2^2*m4^2 + 1/2*M2^2*m4*s23 + 1/2*M2^2*m4*s234 + 1/4*M2^2*s23^2 - 1/2*M2^2*s23*s234 + 1/4*M2^2*s234^2 + M2*M3^2*m2 - M2*M3^2*s234 - M2*M3^2*s34 - 2*M2*M3*M4*m2 - M2*M3*M4*m3 + M2*M3*M4*s23 + M2*M3*M4*s234 + M2*M3*M4*s34 + 3/2*M2*M3*m2*m4 + 1/2*M2*M3*m2*s23 - 1/2*M2*M3*m2*s234 - 1/2*M2*M3*m4*s234 - 1/2*M2*M3*m4*s34 - 3/2*M2*M3*s23*s234 - 3/2*M2*M3*s23*s34 + 3/2*M2*M3*s234^2 + 3/2*M2*M3*s234*s34 + M2*M4^2*m2 + M2*M4^2*m3 - M2*M4^2*s23 + 3/2*M2*M4*m2*m4 - 1/2*M2*M4*m2*s23 + 1/2*M2*M4*m2*s234 + 1/2*M2*M4*m3*m4 - 3/2*M2*M4*m3*s23 + 3/2*M2*M4*m3*s234 - 1/2*M2*M4*m4*s23 + 3/2*M2*M4*s23^2 - 3/2*M2*M4*s23*s234 + 1/2*M2*m2*m4^2 + 1/2*M2*m2*m4*s23 + 1/2*M2*m2*m4*s234 + 1/2*M2*m3*m4*s234 - 1/2*M2*m3*s23*s234 + 1/2*M2*m3*s234^2 - M2*m4*s23*s234 - 1/2*M2*m4*s23*s34 - 1/2*M2*s23^2*s34 + 1/2*M2*s23*s234*s34 + 1/4*M3^2*m2^2 + 1/2*M3^2*m2*s234 - 1/2*M3^2*m2*s34 + 1/4*M3^2*s234^2 + 1/2*M3^2*s234*s34 + 1/4*M3^2*s34^2 - 1/2*M3*M4*m2^2 - 1/2*M3*M4*m2*m3 + M3*M4*m2*m4 - 1/2*M3*M4*m2*s23 - 1/2*M3*M4*m2*s234 + 1/2*M3*M4*m2*s34 + 1/2*M3*M4*m3*s234 + 1/2*M3*M4*m3*s34 - 1/2*M3*M4*s23*s234 - 1/2*M3*M4*s23*s34 + 1/2*M3*m2^2*m4 + 1/2*M3*m2*m3*s234 + 1/2*M3*m2*m4*s234 - 1/2*M3*m2*m4*s34 - 1/2*M3*m2*s23*s34 + M3*m2*s234*s34 + 1/2*M3*m3*s234^2 + 1/2*M3*m3*s234*s34 + 1/2*M3*s23*s234*s34 + 1/2*M3*s23*s34^2 + 1/4*M4^2*m2^2 + 1/2*M4^2*m2*m3 + 1/2*M4^2*m2*s23 + 1/4*M4^2*m3^2 - 1/2*M4^2*m3*s23 + 1/4*M4^2*s23^2 + 1/2*M4*m2^2*m4 + 1/2*M4*m2*m3*m4 - M4*m2*m3*s23 + 1/2*M4*m2*m3*s234 + 1/2*M4*m2*m4*s23 - 1/2*M4*m2*s23*s34 + 1/2*M4*m3^2*s234 - 1/2*M4*m3*s23*s234 + 1/2*M4*m3*s23*s34 - 1/2*M4*s23^2*s34 + 1/4*m2^2*m4^2 + 1/2*m2*m3*m4*s234 - 1/2*m2*m4*s23*s34 + 1/4*m3^2*s234^2 + 1/2*m3*s23*s234*s34 + 1/4*s23^2*s34^2
codim: 3, face: 12/50, weights: [-1, -1, -1, 0, -1, 0], discriminant: M1^2*M3^2 - 2*M1^2*M3*M5 + M1^2*M3*m3 + M1^2*M3*s345 + M1^2*M3*s45 + M1^2*M5^2 - M1^2*M5*m3 - M1^2*M5*s345 + M1^2*M5*s45 + 1/4*M1^2*m3^2 + 1/2*M1^2*m3*s345 + 1/2*M1^2*m3*s45 + 1/4*M1^2*s345^2 - 1/2*M1^2*s345*s45 + 1/4*M1^2*s45^2 - 2*M1*M2*M3^2 + 4*M1*M2*M3*M5 - M1*M2*M3*m3 - M1*M2*M3*s23 - M1*M2*M3*s345 - 2*M1*M2*M3*s45 + M1*M2*M3*s61 - 2*M1*M2*M5^2 + M1*M2*M5*m3 + M1*M2*M5*s23 + M1*M2*M5*s345 - 2*M1*M2*M5*s45 - M1*M2*M5*s61 + M1*M2*m2*s45 - 1/2*M1*M2*m3*s23 - 1/2*M1*M2*m3*s45 + 1/2*M1*M2*m3*s61 - 1/2*M1*M2*s23*s345 - 1/2*M1*M2*s23*s45 + 1/2*M1*M2*s345*s45 + 1/2*M1*M2*s345*s61 - 1/2*M1*M2*s45^2 - 1/2*M1*M2*s45*s61 + M1*M3^2*m2 + M1*M3^2*s345 + M1*M3^2*s61 - 2*M1*M3*M5*m2 + M1*M3*M5*m3 - M1*M3*M5*s23 - M1*M3*M5*s345 - M1*M3*M5*s61 + 1/2*M1*M3*m2*m3 + 1/2*M1*M3*m2*s345 + 3/2*M1*M3*m2*s45 + 3/2*M1*M3*m3*s345 + 3/2*M1*M3*m3*s61 + 3/2*M1*M3*s345^2 + 1/2*M1*M3*s345*s45 + 3/2*M1*M3*s345*s61 + 1/2*M1*M3*s45*s61 + M1*M5^2*m2 - M1*M5^2*m3 + M1*M5^2*s23 - 1/2*M1*M5*m2*m3 - 1/2*M1*M5*m2*s345 + 3/2*M1*M5*m2*s45 + 3/2*M1*M5*m3^2 - 3/2*M1*M5*m3*s23 + 3/2*M1*M5*m3*s345 - 1/2*M1*M5*m3*s45 - 3/2*M1*M5*s23*s345 + 1/2*M1*M5*s23*s45 + 1/2*M1*m2*m3*s45 - 1/2*M1*m2*s345*s45 + 1/2*M1*m2*s45^2 + 1/2*M1*m3^2*s61 + 1/2*M1*m3*s23*s345 + M1*m3*s345*s45 + 1/2*M1*m3*s345*s61 + 1/2*M1*m3*s45*s61 + 1/2*M1*s23*s345^2 - 1/2*M1*s23*s345*s45 + M2^2*M3^2 - 2*M2^2*M3*M5 + M2^2*M3*s23 + M2^2*M3*s45 - M2^2*M3*s61 + M2^2*M5^2 - M2^2*M5*s23 + M2^2*M5*s45 + M2^2*M5*s61 + 1/4*M2^2*s23^2 + 1/2*M2^2*s23*s45 - 1/2*M2^2*s23*s61 + 1/4*M2^2*s45^2 + 1/2*M2^2*s45*s61 + 1/4*M2^2*s61^2 + M2*M3^2*m2 - M2*M3^2*s345 - M2*M3^2*s61 - 2*M2*M3*M5*m2 - M2*M3*M5*m3 + M2*M3*M5*s23 + M2*M3*M5*s345 + M2*M3*M5*s61 + 1/2*M2*M3*m2*s23 + 3/2*M2*M3*m2*s45 - 1/2*M2*M3*m2*s61 - 3/2*M2*M3*s23*s345 - 3/2*M2*M3*s23*s61 - 1/2*M2*M3*s345*s45 + 3/2*M2*M3*s345*s61 - 1/2*M2*M3*s45*s61 + 3/2*M2*M3*s61^2 + M2*M5^2*m2 + M2*M5^2*m3 - M2*M5^2*s23 - 1/2*M2*M5*m2*s23 + 3/2*M2*M5*m2*s45 + 1/2*M2*M5*m2*s61 - 3/2*M2*M5*m3*s23 + 1/2*M2*M5*m3*s45 + 3/2*M2*M5*m3*s61 + 3/2*M2*M5*s23^2 - 1/2*M2*M5*s23*s45 - 3/2*M2*M5*s23*s61 + 1/2*M2*m2*s23*s45 + 1/2*M2*m2*s45^2 + 1/2*M2*m2*s45*s61 - 1/2*M2*m3*s23*s61 + 1/2*M2*m3*s45*s61 + 1/2*M2*m3*s61^2 - 1/2*M2*s23^2*s345 - 1/2*M2*s23*s345*s45 + 1/2*M2*s23*s345*s61 - M2*s23*s45*s61 + 1/4*M3^2*m2^2 - 1/2*M3^2*m2*s345 + 1/2*M3^2*m2*s61 + 1/4*M3^2*s345^2 + 1/2*M3^2*s345*s61 + 1/4*M3^2*s61^2 - 1/2*M3*M5*m2^2 - 1/2*M3*M5*m2*m3 - 1/2*M3*M5*m2*s23 + 1/2*M3*M5*m2*s345 + M3*M5*m2*s45 - 1/2*M3*M5*m2*s61 + 1/2*M3*M5*m3*s345 + 1/2*M3*M5*m3*s61 - 1/2*M3*M5*s23*s345 - 1/2*M3*M5*s23*s61 + 1/2*M3*m2^2*s45 + 1/2*M3*m2*m3*s61 - 1/2*M3*m2*s23*s345 - 1/2*M3*m2*s345*s45 + M3*m2*s345*s61 + 1/2*M3*m2*s45*s61 + 1/2*M3*m3*s345*s61 + 1/2*M3*m3*s61^2 + 1/2*M3*s23*s345^2 + 1/2*M3*s23*s345*s61 + 1/4*M5^2*m2^2 + 1/2*M5^2*m2*m3 + 1/2*M5^2*m2*s23 + 1/4*M5^2*m3^2 - 1/2*M5^2*m3*s23 + 1/4*M5^2*s23^2 + 1/2*M5*m2^2*s45 - M5*m2*m3*s23 + 1/2*M5*m2*m3*s45 + 1/2*M5*m2*m3*s61 - 1/2*M5*m2*s23*s345 + 1/2*M5*m2*s23*s45 + 1/2*M5*m3^2*s61 + 1/2*M5*m3*s23*s345 - 1/2*M5*m3*s23*s61 - 1/2*M5*s23^2*s345 + 1/4*m2^2*s45^2 + 1/2*m2*m3*s45*s61 - 1/2*m2*s23*s345*s45 + 1/4*m3^2*s61^2 + 1/2*m3*s23*s345*s61 + 1/4*s23^2*s345^2
codim: 3, face: 13/50, weights: [-1, -1, -1, 0, 0, -1], discriminant: M1^2*M3^2 - 2*M1^2*M3*M6 + M1^2*M3*m3 + M1^2*M3*s12 + M1^2*M3*s123 + M1^2*M6^2 - M1^2*M6*m3 - M1^2*M6*s12 + M1^2*M6*s123 + 1/4*M1^2*m3^2 + 1/2*M1^2*m3*s12 + 1/2*M1^2*m3*s123 + 1/4*M1^2*s12^2 - 1/2*M1^2*s12*s123 + 1/4*M1^2*s123^2 - 2*M1*M2*M3^2 + 4*M1*M2*M3*M6 + M1*M2*M3*m1 - M1*M2*M3*m3 - M1*M2*M3*s12 - 2*M1*M2*M3*s123 - M1*M2*M3*s23 - 2*M1*M2*M6^2 - M1*M2*M6*m1 + M1*M2*M6*m3 + M1*M2*M6*s12 - 2*M1*M2*M6*s123 + M1*M2*M6*s23 + 1/2*M1*M2*m1*m3 + 1/2*M1*M2*m1*s12 - 1/2*M1*M2*m1*s123 + M1*M2*m2*s123 - 1/2*M1*M2*m3*s123 - 1/2*M1*M2*m3*s23 + 1/2*M1*M2*s12*s123 - 1/2*M1*M2*s12*s23 - 1/2*M1*M2*s123^2 - 1/2*M1*M2*s123*s23 + M1*M3^2*m1 + M1*M3^2*m2 + M1*M3^2*s12 - M1*M3*M6*m1 - 2*M1*M3*M6*m2 + M1*M3*M6*m3 - M1*M3*M6*s12 - M1*M3*M6*s23 + 3/2*M1*M3*m1*m3 + 3/2*M1*M3*m1*s12 + 1/2*M1*M3*m1*s123 + 1/2*M1*M3*m2*m3 + 1/2*M1*M3*m2*s12 + 3/2*M1*M3*m2*s123 + 3/2*M1*M3*m3*s12 + 3/2*M1*M3*s12^2 + 1/2*M1*M3*s12*s123 + M1*M6^2*m2 - M1*M6^2*m3 + M1*M6^2*s23 - 1/2*M1*M6*m2*m3 - 1/2*M1*M6*m2*s12 + 3/2*M1*M6*m2*s123 + 3/2*M1*M6*m3^2 + 3/2*M1*M6*m3*s12 - 1/2*M1*M6*m3*s123 - 3/2*M1*M6*m3*s23 - 3/2*M1*M6*s12*s23 + 1/2*M1*M6*s123*s23 + 1/2*M1*m1*m3^2 + 1/2*M1*m1*m3*s12 + 1/2*M1*m1*m3*s123 + 1/2*M1*m2*m3*s123 - 1/2*M1*m2*s12*s123 + 1/2*M1*m2*s123^2 + M1*m3*s12*s123 + 1/2*M1*m3*s12*s23 + 1/2*M1*s12^2*s23 - 1/2*M1*s12*s123*s23 + M2^2*M3^2 - 2*M2^2*M3*M6 - M2^2*M3*m1 + M2^2*M3*s123 + M2^2*M3*s23 + M2^2*M6^2 + M2^2*M6*m1 + M2^2*M6*s123 - M2^2*M6*s23 + 1/4*M2^2*m1^2 + 1/2*M2^2*m1*s123 - 1/2*M2^2*m1*s23 + 1/4*M2^2*s123^2 + 1/2*M2^2*s123*s23 + 1/4*M2^2*s23^2 - M2*M3^2*m1 + M2*M3^2*m2 - M2*M3^2*s12 + M2*M3*M6*m1 - 2*M2*M3*M6*m2 - M2*M3*M6*m3 + M2*M3*M6*s12 + M2*M3*M6*s23 + 3/2*M2*M3*m1^2 - 1/2*M2*M3*m1*m2 + 3/2*M2*M3*m1*s12 - 1/2*M2*M3*m1*s123 - 3/2*M2*M3*m1*s23 + 3/2*M2*M3*m2*s123 + 1/2*M2*M3*m2*s23 - 1/2*M2*M3*s12*s123 - 3/2*M2*M3*s12*s23 + M2*M6^2*m2 + M2*M6^2*m3 - M2*M6^2*s23 + 1/2*M2*M6*m1*m2 + 3/2*M2*M6*m1*m3 - 3/2*M2*M6*m1*s23 + 3/2*M2*M6*m2*s123 - 1/2*M2*M6*m2*s23 + 1/2*M2*M6*m3*s123 - 3/2*M2*M6*m3*s23 - 1/2*M2*M6*s123*s23 + 3/2*M2*M6*s23^2 + 1/2*M2*m1^2*m3 + 1/2*M2*m1*m2*s123 + 1/2*M2*m1*m3*s123 - 1/2*M2*m1*m3*s23 + 1/2*M2*m1*s12*s23 - M2*m1*s123*s23 + 1/2*M2*m2*s123^2 + 1/2*M2*m2*s123*s23 - 1/2*M2*s12*s123*s23 - 1/2*M2*s12*s23^2 + 1/4*M3^2*m1^2 + 1/2*M3^2*m1*m2 + 1/2*M3^2*m1*s12 + 1/4*M3^2*m2^2 - 1/2*M3^2*m2*s12 + 1/4*M3^2*s12^2 - 1/2*M3*M6*m1*m2 + 1/2*M3*M6*m1*m3 - 1/2*M3*M6*m1*s23 - 1/2*M3*M6*m2^2 - 1/2*M3*M6*m2*m3 + 1/2*M3*M6*m2*s12 + M3*M6*m2*s123 - 1/2*M3*M6*m2*s23 + 1/2*M3*M6*m3*s12 - 1/2*M3*M6*s12*s23 + 1/2*M3*m1^2*m3 + 1/2*M3*m1*m2*m3 + M3*m1*m2*s12 + 1/2*M3*m1*m2*s123 + 1/2*M3*m1*m3*s12 + 1/2*M3*m1*s12*s23 + 1/2*M3*m2^2*s123 - 1/2*M3*m2*s12*s123 - 1/2*M3*m2*s12*s23 + 1/2*M3*s12^2*s23 + 1/4*M6^2*m2^2 + 1/2*M6^2*m2*m3 + 1/2*M6^2*m2*s23 + 1/4*M6^2*m3^2 - 1/2*M6^2*m3*s23 + 1/4*M6^2*s23^2 + 1/2*M6*m1*m2*m3 + 1/2*M6*m1*m3^2 - 1/2*M6*m1*m3*s23 + 1/2*M6*m2^2*s123 + 1/2*M6*m2*m3*s123 - M6*m2*m3*s23 - 1/2*M6*m2*s12*s23 + 1/2*M6*m2*s123*s23 + 1/2*M6*m3*s12*s23 - 1/2*M6*s12*s23^2 + 1/4*m1^2*m3^2 + 1/2*m1*m2*m3*s123 + 1/2*m1*m3*s12*s23 + 1/4*m2^2*s123^2 - 1/2*m2*s12*s123*s23 + 1/4*s12^2*s23^2
codim: 3, face: 14/50, weights: [-1, -1, 0, -1, -1, 0], discriminant: M1^2*M4^2 - 2*M1^2*M4*M5 + M1^2*M4*m5 + M1^2*M4*s34 + M1^2*M4*s345 + M1^2*M5^2 + M1^2*M5*m5 - M1^2*M5*s34 - M1^2*M5*s345 + 1/4*M1^2*m5^2 + 1/2*M1^2*m5*s34 - 1/2*M1^2*m5*s345 + 1/4*M1^2*s34^2 + 1/2*M1^2*s34*s345 + 1/4*M1^2*s345^2 - 2*M1*M2*M4^2 + 4*M1*M2*M4*M5 - 2*M1*M2*M4*m5 - M1*M2*M4*s234 - M1*M2*M4*s34 - M1*M2*M4*s345 + M1*M2*M4*s61 - 2*M1*M2*M5^2 - 2*M1*M2*M5*m5 + M1*M2*M5*s234 + M1*M2*M5*s34 + M1*M2*M5*s345 - M1*M2*M5*s61 + M1*M2*m2*m5 - 1/2*M1*M2*m5^2 - 1/2*M1*M2*m5*s234 - 1/2*M1*M2*m5*s34 + 1/2*M1*M2*m5*s345 - 1/2*M1*M2*m5*s61 - 1/2*M1*M2*s234*s34 - 1/2*M1*M2*s234*s345 + 1/2*M1*M2*s34*s61 + 1/2*M1*M2*s345*s61 + M1*M4^2*m2 + M1*M4^2*s345 + M1*M4^2*s61 - 2*M1*M4*M5*m2 - M1*M4*M5*s234 + M1*M4*M5*s34 - M1*M4*M5*s345 - M1*M4*M5*s61 + 3/2*M1*M4*m2*m5 + 1/2*M1*M4*m2*s34 + 1/2*M1*M4*m2*s345 + 1/2*M1*M4*m5*s345 + 1/2*M1*M4*m5*s61 + 3/2*M1*M4*s34*s345 + 3/2*M1*M4*s34*s61 + 3/2*M1*M4*s345^2 + 3/2*M1*M4*s345*s61 + M1*M5^2*m2 + M1*M5^2*s234 - M1*M5^2*s34 + 3/2*M1*M5*m2*m5 - 1/2*M1*M5*m2*s34 - 1/2*M1*M5*m2*s345 + 1/2*M1*M5*m5*s234 - 1/2*M1*M5*m5*s34 - 3/2*M1*M5*s234*s34 - 3/2*M1*M5*s234*s345 + 3/2*M1*M5*s34^2 + 3/2*M1*M5*s34*s345 + 1/2*M1*m2*m5^2 + 1/2*M1*m2*m5*s34 - 1/2*M1*m2*m5*s345 - 1/2*M1*m5*s234*s345 + M1*m5*s34*s345 + 1/2*M1*m5*s34*s61 + 1/2*M1*s234*s34*s345 + 1/2*M1*s234*s345^2 + 1/2*M1*s34^2*s61 + 1/2*M1*s34*s345*s61 + M2^2*M4^2 - 2*M2^2*M4*M5 + M2^2*M4*m5 + M2^2*M4*s234 - M2^2*M4*s61 + M2^2*M5^2 + M2^2*M5*m5 - M2^2*M5*s234 + M2^2*M5*s61 + 1/4*M2^2*m5^2 + 1/2*M2^2*m5*s234 + 1/2*M2^2*m5*s61 + 1/4*M2^2*s234^2 - 1/2*M2^2*s234*s61 + 1/4*M2^2*s61^2 + M2*M4^2*m2 - M2*M4^2*s345 - M2*M4^2*s61 - 2*M2*M4*M5*m2 + M2*M4*M5*s234 - M2*M4*M5*s34 + M2*M4*M5*s345 + M2*M4*M5*s61 + 3/2*M2*M4*m2*m5 + 1/2*M2*M4*m2*s234 - 1/2*M2*M4*m2*s61 - 1/2*M2*M4*m5*s345 - 1/2*M2*M4*m5*s61 - 3/2*M2*M4*s234*s345 - 3/2*M2*M4*s234*s61 + 3/2*M2*M4*s345*s61 + 3/2*M2*M4*s61^2 + M2*M5^2*m2 - M2*M5^2*s234 + M2*M5^2*s34 + 3/2*M2*M5*m2*m5 - 1/2*M2*M5*m2*s234 + 1/2*M2*M5*m2*s61 - 1/2*M2*M5*m5*s234 + 1/2*M2*M5*m5*s34 + 3/2*M2*M5*s234^2 - 3/2*M2*M5*s234*s34 - 3/2*M2*M5*s234*s61 + 3/2*M2*M5*s34*s61 + 1/2*M2*m2*m5^2 + 1/2*M2*m2*m5*s234 + 1/2*M2*m2*m5*s61 - 1/2*M2*m5*s234*s345 - M2*m5*s234*s61 + 1/2*M2*m5*s34*s61 - 1/2*M2*s234^2*s345 - 1/2*M2*s234*s34*s61 + 1/2*M2*s234*s345*s61 + 1/2*M2*s34*s61^2 + 1/4*M4^2*m2^2 - 1/2*M4^2*m2*s345 + 1/2*M4^2*m2*s61 + 1/4*M4^2*s345^2 + 1/2*M4^2*s345*s61 + 1/4*M4^2*s61^2 - 1/2*M4*M5*m2^2 + M4*M5*m2*m5 - 1/2*M4*M5*m2*s234 - 1/2*M4*M5*m2*s34 + 1/2*M4*M5*m2*s345 - 1/2*M4*M5*m2*s61 - 1/2*M4*M5*s234*s345 - 1/2*M4*M5*s234*s61 + 1/2*M4*M5*s34*s345 + 1/2*M4*M5*s34*s61 + 1/2*M4*m2^2*m5 - 1/2*M4*m2*m5*s345 + 1/2*M4*m2*m5*s61 - 1/2*M4*m2*s234*s345 + 1/2*M4*m2*s34*s61 + M4*m2*s345*s61 + 1/2*M4*s234*s345^2 + 1/2*M4*s234*s345*s61 + 1/2*M4*s34*s345*s61 + 1/2*M4*s34*s61^2 + 1/4*M5^2*m2^2 + 1/2*M5^2*m2*s234 + 1/2*M5^2*m2*s34 + 1/4*M5^2*s234^2 - 1/2*M5^2*s234*s34 + 1/4*M5^2*s34^2 + 1/2*M5*m2^2*m5 + 1/2*M5*m2*m5*s234 + 1/2*M5*m2*m5*s34 - M5*m2*s234*s34 - 1/2*M5*m2*s234*s345 + 1/2*M5*m2*s34*s61 - 1/2*M5*s234^2*s345 + 1/2*M5*s234*s34*s345 - 1/2*M5*s234*s34*s61 + 1/2*M5*s34^2*s61 + 1/4*m2^2*m5^2 - 1/2*m2*m5*s234*s345 + 1/2*m2*m5*s34*s61 + 1/4*s234^2*s345^2 + 1/2*s234*s34*s345*s61 + 1/4*s34^2*s61^2
codim: 3, face: 15/50, weights: [-1, -1, 0, -1, 0, -1], discriminant: M1^2*M4^2 - 2*M1^2*M4*M6 + M1^2*M4*s12 + M1^2*M4*s34 + M1^2*M4*s56 + M1^2*M6^2 - M1^2*M6*s12 - M1^2*M6*s34 + M1^2*M6*s56 + 1/4*M1^2*s12^2 + 1/2*M1^2*s12*s34 - 1/2*M1^2*s12*s56 + 1/4*M1^2*s34^2 + 1/2*M1^2*s34*s56 + 1/4*M1^2*s56^2 - 2*M1*M2*M4^2 + 4*M1*M2*M4*M6 + M1*M2*M4*m1 - M1*M2*M4*s12 - M1*M2*M4*s234 - M1*M2*M4*s34 - 2*M1*M2*M4*s56 - 2*M1*M2*M6^2 - M1*M2*M6*m1 + M1*M2*M6*s12 + M1*M2*M6*s234 + M1*M2*M6*s34 - 2*M1*M2*M6*s56 + 1/2*M1*M2*m1*s12 + 1/2*M1*M2*m1*s34 - 1/2*M1*M2*m1*s56 + M1*M2*m2*s56 - 1/2*M1*M2*s12*s234 + 1/2*M1*M2*s12*s56 - 1/2*M1*M2*s234*s34 - 1/2*M1*M2*s234*s56 - 1/2*M1*M2*s34*s56 - 1/2*M1*M2*s56^2 + M1*M4^2*m1 + M1*M4^2*m2 + M1*M4^2*s12 - M1*M4*M6*m1 - 2*M1*M4*M6*m2 - M1*M4*M6*s12 - M1*M4*M6*s234 + M1*M4*M6*s34 + 3/2*M1*M4*m1*s12 + 3/2*M1*M4*m1*s34 + 1/2*M1*M4*m1*s56 + 1/2*M1*M4*m2*s12 + 1/2*M1*M4*m2*s34 + 3/2*M1*M4*m2*s56 + 3/2*M1*M4*s12^2 + 3/2*M1*M4*s12*s34 + 1/2*M1*M4*s12*s56 + M1*M6^2*m2 + M1*M6^2*s234 - M1*M6^2*s34 - 1/2*M1*M6*m2*s12 - 1/2*M1*M6*m2*s34 + 3/2*M1*M6*m2*s56 - 3/2*M1*M6*s12*s234 + 3/2*M1*M6*s12*s34 - 3/2*M1*M6*s234*s34 + 1/2*M1*M6*s234*s56 + 3/2*M1*M6*s34^2 - 1/2*M1*M6*s34*s56 + 1/2*M1*m1*s12*s34 + 1/2*M1*m1*s34^2 + 1/2*M1*m1*s34*s56 - 1/2*M1*m2*s12*s56 + 1/2*M1*m2*s34*s56 + 1/2*M1*m2*s56^2 + 1/2*M1*s12^2*s234 + 1/2*M1*s12*s234*s34 - 1/2*M1*s12*s234*s56 + M1*s12*s34*s56 + M2^2*M4^2 - 2*M2^2*M4*M6 - M2^2*M4*m1 + M2^2*M4*s234 + M2^2*M4*s56 + M2^2*M6^2 + M2^2*M6*m1 - M2^2*M6*s234 + M2^2*M6*s56 + 1/4*M2^2*m1^2 - 1/2*M2^2*m1*s234 + 1/2*M2^2*m1*s56 + 1/4*M2^2*s234^2 + 1/2*M2^2*s234*s56 + 1/4*M2^2*s56^2 - M2*M4^2*m1 + M2*M4^2*m2 - M2*M4^2*s12 + M2*M4*M6*m1 - 2*M2*M4*M6*m2 + M2*M4*M6*s12 + M2*M4*M6*s234 - M2*M4*M6*s34 + 3/2*M2*M4*m1^2 - 1/2*M2*M4*m1*m2 + 3/2*M2*M4*m1*s12 - 3/2*M2*M4*m1*s234 - 1/2*M2*M4*m1*s56 + 1/2*M2*M4*m2*s234 + 3/2*M2*M4*m2*s56 - 3/2*M2*M4*s12*s234 - 1/2*M2*M4*s12*s56 + M2*M6^2*m2 - M2*M6^2*s234 + M2*M6^2*s34 + 1/2*M2*M6*m1*m2 - 3/2*M2*M6*m1*s234 + 3/2*M2*M6*m1*s34 - 1/2*M2*M6*m2*s234 + 3/2*M2*M6*m2*s56 + 3/2*M2*M6*s234^2 - 3/2*M2*M6*s234*s34 - 1/2*M2*M6*s234*s56 + 1/2*M2*M6*s34*s56 + 1/2*M2*m1^2*s34 + 1/2*M2*m1*m2*s56 + 1/2*M2*m1*s12*s234 - 1/2*M2*m1*s234*s34 - M2*m1*s234*s56 + 1/2*M2*m1*s34*s56 + 1/2*M2*m2*s234*s56 + 1/2*M2*m2*s56^2 - 1/2*M2*s12*s234^2 - 1/2*M2*s12*s234*s56 + 1/4*M4^2*m1^2 + 1/2*M4^2*m1*m2 + 1/2*M4^2*m1*s12 + 1/4*M4^2*m2^2 - 1/2*M4^2*m2*s12 + 1/4*M4^2*s12^2 - 1/2*M4*M6*m1*m2 - 1/2*M4*M6*m1*s234 + 1/2*M4*M6*m1*s34 - 1/2*M4*M6*m2^2 + 1/2*M4*M6*m2*s12 - 1/2*M4*M6*m2*s234 - 1/2*M4*M6*m2*s34 + M4*M6*m2*s56 - 1/2*M4*M6*s12*s234 + 1/2*M4*M6*s12*s34 + 1/2*M4*m1^2*s34 + M4*m1*m2*s12 + 1/2*M4*m1*m2*s34 + 1/2*M4*m1*m2*s56 + 1/2*M4*m1*s12*s234 + 1/2*M4*m1*s12*s34 + 1/2*M4*m2^2*s56 - 1/2*M4*m2*s12*s234 - 1/2*M4*m2*s12*s56 + 1/2*M4*s12^2*s234 + 1/4*M6^2*m2^2 + 1/2*M6^2*m2*s234 + 1/2*M6^2*m2*s34 + 1/4*M6^2*s234^2 - 1/2*M6^2*s234*s34 + 1/4*M6^2*s34^2 + 1/2*M6*m1*m2*s34 - 1/2*M6*m1*s234*s34 + 1/2*M6*m1*s34^2 + 1/2*M6*m2^2*s56 - 1/2*M6*m2*s12*s234 - M6*m2*s234*s34 + 1/2*M6*m2*s234*s56 + 1/2*M6*m2*s34*s56 - 1/2*M6*s12*s234^2 + 1/2*M6*s12*s234*s34 + 1/4*m1^2*s34^2 + 1/2*m1*m2*s34*s56 + 1/2*m1*s12*s234*s34 + 1/4*m2^2*s56^2 - 1/2*m2*s12*s234*s56 + 1/4*s12^2*s234^2
codim: 3, face: 16/50, weights: [-1, -1, 0, 0, -1, -1], discriminant: M1^2*M5^2 - 2*M1^2*M5*M6 + M1^2*M5*m6 + M1^2*M5*s12 + M1^2*M5*s345 + M1^2*M6^2 + M1^2*M6*m6 - M1^2*M6*s12 - M1^2*M6*s345 + 1/4*M1^2*m6^2 - 1/2*M1^2*m6*s12 + 1/2*M1^2*m6*s345 + 1/4*M1^2*s12^2 + 1/2*M1^2*s12*s345 + 1/4*M1^2*s345^2 - 2*M1*M2*M5^2 + 4*M1*M2*M5*M6 + M1*M2*M5*m1 - 2*M1*M2*M5*m6 - M1*M2*M5*s12 - M1*M2*M5*s345 - M1*M2*M5*s61 - 2*M1*M2*M6^2 - M1*M2*M6*m1 - 2*M1*M2*M6*m6 + M1*M2*M6*s12 + M1*M2*M6*s345 + M1*M2*M6*s61 - 1/2*M1*M2*m1*m6 + 1/2*M1*M2*m1*s12 + 1/2*M1*M2*m1*s345 + M1*M2*m2*m6 - 1/2*M1*M2*m6^2 + 1/2*M1*M2*m6*s12 - 1/2*M1*M2*m6*s345 - 1/2*M1*M2*m6*s61 - 1/2*M1*M2*s12*s61 - 1/2*M1*M2*s345*s61 + M1*M5^2*m1 + M1*M5^2*m2 + M1*M5^2*s12 - M1*M5*M6*m1 - 2*M1*M5*M6*m2 - M1*M5*M6*s12 + M1*M5*M6*s345 - M1*M5*M6*s61 + 1/2*M1*M5*m1*m6 + 3/2*M1*M5*m1*s12 + 3/2*M1*M5*m1*s345 + 3/2*M1*M5*m2*m6 + 1/2*M1*M5*m2*s12 + 1/2*M1*M5*m2*s345 + 1/2*M1*M5*m6*s12 + 3/2*M1*M5*s12^2 + 3/2*M1*M5*s12*s345 + M1*M6^2*m2 - M1*M6^2*s345 + M1*M6^2*s61 + 3/2*M1*M6*m2*m6 - 1/2*M1*M6*m2*s12 - 1/2*M1*M6*m2*s345 - 1/2*M1*M6*m6*s345 + 1/2*M1*M6*m6*s61 + 3/2*M1*M6*s12*s345 - 3/2*M1*M6*s12*s61 + 3/2*M1*M6*s345^2 - 3/2*M1*M6*s345*s61 + 1/2*M1*m1*m6*s345 + 1/2*M1*m1*s12*s345 + 1/2*M1*m1*s345^2 + 1/2*M1*m2*m6^2 - 1/2*M1*m2*m6*s12 + 1/2*M1*m2*m6*s345 + M1*m6*s12*s345 - 1/2*M1*m6*s12*s61 + 1/2*M1*s12^2*s61 + 1/2*M1*s12*s345*s61 + M2^2*M5^2 - 2*M2^2*M5*M6 - M2^2*M5*m1 + M2^2*M5*m6 + M2^2*M5*s61 + M2^2*M6^2 + M2^2*M6*m1 + M2^2*M6*m6 - M2^2*M6*s61 + 1/4*M2^2*m1^2 + 1/2*M2^2*m1*m6 - 1/2*M2^2*m1*s61 + 1/4*M2^2*m6^2 + 1/2*M2^2*m6*s61 + 1/4*M2^2*s61^2 - M2*M5^2*m1 + M2*M5^2*m2 - M2*M5^2*s12 + M2*M5*M6*m1 - 2*M2*M5*M6*m2 + M2*M5*M6*s12 - M2*M5*M6*s345 + M2*M5*M6*s61 + 3/2*M2*M5*m1^2 - 1/2*M2*M5*m1*m2 - 1/2*M2*M5*m1*m6 + 3/2*M2*M5*m1*s12 - 3/2*M2*M5*m1*s61 + 3/2*M2*M5*m2*m6 + 1/2*M2*M5*m2*s61 - 1/2*M2*M5*m6*s12 - 3/2*M2*M5*s12*s61 + M2*M6^2*m2 + M2*M6^2*s345 - M2*M6^2*s61 + 1/2*M2*M6*m1*m2 + 3/2*M2*M6*m1*s345 - 3/2*M2*M6*m1*s61 + 3/2*M2*M6*m2*m6 - 1/2*M2*M6*m2*s61 + 1/2*M2*M6*m6*s345 - 1/2*M2*M6*m6*s61 - 3/2*M2*M6*s345*s61 + 3/2*M2*M6*s61^2 + 1/2*M2*m1^2*s345 + 1/2*M2*m1*m2*m6 + 1/2*M2*m1*m6*s345 - M2*m1*m6*s61 + 1/2*M2*m1*s12*s61 - 1/2*M2*m1*s345*s61 + 1/2*M2*m2*m6^2 + 1/2*M2*m2*m6*s61 - 1/2*M2*m6*s12*s61 - 1/2*M2*s12*s61^2 + 1/4*M5^2*m1^2 + 1/2*M5^2*m1*m2 + 1/2*M5^2*m1*s12 + 1/4*M5^2*m2^2 - 1/2*M5^2*m2*s12 + 1/4*M5^2*s12^2 - 1/2*M5*M6*m1*m2 + 1/2*M5*M6*m1*s345 - 1/2*M5*M6*m1*s61 - 1/2*M5*M6*m2^2 + M5*M6*m2*m6 + 1/2*M5*M6*m2*s12 - 1/2*M5*M6*m2*s345 - 1/2*M5*M6*m2*s61 + 1/2*M5*M6*s12*s345 - 1/2*M5*M6*s12*s61 + 1/2*M5*m1^2*s345 + 1/2*M5*m1*m2*m6 + M5*m1*m2*s12 + 1/2*M5*m1*m2*s345 + 1/2*M5*m1*s12*s345 + 1/2*M5*m1*s12*s61 + 1/2*M5*m2^2*m6 - 1/2*M5*m2*m6*s12 - 1/2*M5*m2*s12*s61 + 1/2*M5*s12^2*s61 + 1/4*M6^2*m2^2 + 1/2*M6^2*m2*s345 + 1/2*M6^2*m2*s61 + 1/4*M6^2*s345^2 - 1/2*M6^2*s345*s61 + 1/4*M6^2*s61^2 + 1/2*M6*m1*m2*s345 + 1/2*M6*m1*s345^2 - 1/2*M6*m1*s345*s61 + 1/2*M6*m2^2*m6 + 1/2*M6*m2*m6*s345 + 1/2*M6*m2*m6*s61 - 1/2*M6*m2*s12*s61 - M6*m2*s345*s61 + 1/2*M6*s12*s345*s61 - 1/2*M6*s12*s61^2 + 1/4*m1^2*s345^2 + 1/2*m1*m2*m6*s345 + 1/2*m1*s12*s345*s61 + 1/4*m2^2*m6^2 - 1/2*m2*m6*s12*s61 + 1/4*s12^2*s61^2
codim: 3, face: 17/50, weights: [-1, 0, -1, -1, -1, 0], discriminant: M1^2*M4^2 - 2*M1^2*M4*M5 + M1^2*M4*m4 + M1^2*M4*m5 + M1^2*M4*s45 + M1^2*M5^2 - M1^2*M5*m4 + M1^2*M5*m5 - M1^2*M5*s45 + 1/4*M1^2*m4^2 + 1/2*M1^2*m4*m5 + 1/2*M1^2*m4*s45 + 1/4*M1^2*m5^2 - 1/2*M1^2*m5*s45 + 1/4*M1^2*s45^2 - 2*M1*M3*M4^2 + 4*M1*M3*M4*M5 - M1*M3*M4*m4 - 2*M1*M3*M4*m5 - M1*M3*M4*s234 - M1*M3*M4*s45 + M1*M3*M4*s61 - 2*M1*M3*M5^2 + M1*M3*M5*m4 - 2*M1*M3*M5*m5 + M1*M3*M5*s234 + M1*M3*M5*s45 - M1*M3*M5*s61 - 1/2*M1*M3*m4*m5 - 1/2*M1*M3*m4*s234 + 1/2*M1*M3*m4*s61 - 1/2*M1*M3*m5^2 + M1*M3*m5*s23 - 1/2*M1*M3*m5*s234 + 1/2*M1*M3*m5*s45 - 1/2*M1*M3*m5*s61 - 1/2*M1*M3*s234*s45 + 1/2*M1*M3*s45*s61 + M1*M4^2*s23 + M1*M4^2*s45 + M1*M4^2*s61 + M1*M4*M5*m4 - 2*M1*M4*M5*s23 - M1*M4*M5*s234 - M1*M4*M5*s45 - M1*M4*M5*s61 + 1/2*M1*M4*m4*s23 + 3/2*M1*M4*m4*s45 + 3/2*M1*M4*m4*s61 + 3/2*M1*M4*m5*s23 + 1/2*M1*M4*m5*s45 + 1/2*M1*M4*m5*s61 + 1/2*M1*M4*s23*s45 + 3/2*M1*M4*s45^2 + 3/2*M1*M4*s45*s61 - M1*M5^2*m4 + M1*M5^2*s23 + M1*M5^2*s234 + 3/2*M1*M5*m4^2 - 1/2*M1*M5*m4*m5 - 1/2*M1*M5*m4*s23 - 3/2*M1*M5*m4*s234 + 3/2*M1*M5*m4*s45 + 3/2*M1*M5*m5*s23 + 1/2*M1*M5*m5*s234 - 1/2*M1*M5*s23*s45 - 3/2*M1*M5*s234*s45 + 1/2*M1*m4^2*s61 + 1/2*M1*m4*m5*s23 + M1*m4*m5*s45 + 1/2*M1*m4*m5*s61 + 1/2*M1*m4*s234*s45 + 1/2*M1*m4*s45*s61 + 1/2*M1*m5^2*s23 - 1/2*M1*m5*s23*s45 - 1/2*M1*m5*s234*s45 + 1/2*M1*s234*s45^2 + M3^2*M4^2 - 2*M3^2*M4*M5 + M3^2*M4*m5 + M3^2*M4*s234 - M3^2*M4*s61 + M3^2*M5^2 + M3^2*M5*m5 - M3^2*M5*s234 + M3^2*M5*s61 + 1/4*M3^2*m5^2 + 1/2*M3^2*m5*s234 + 1/2*M3^2*m5*s61 + 1/4*M3^2*s234^2 - 1/2*M3^2*s234*s61 + 1/4*M3^2*s61^2 + M3*M4^2*s23 - M3*M4^2*s45 - M3*M4^2*s61 - M3*M4*M5*m4 - 2*M3*M4*M5*s23 + M3*M4*M5*s234 + M3*M4*M5*s45 + M3*M4*M5*s61 + 3/2*M3*M4*m5*s23 - 1/2*M3*M4*m5*s45 - 1/2*M3*M4*m5*s61 + 1/2*M3*M4*s23*s234 - 1/2*M3*M4*s23*s61 - 3/2*M3*M4*s234*s45 - 3/2*M3*M4*s234*s61 + 3/2*M3*M4*s45*s61 + 3/2*M3*M4*s61^2 + M3*M5^2*m4 + M3*M5^2*s23 - M3*M5^2*s234 + 1/2*M3*M5*m4*m5 - 3/2*M3*M5*m4*s234 + 3/2*M3*M5*m4*s61 + 3/2*M3*M5*m5*s23 - 1/2*M3*M5*m5*s234 - 1/2*M3*M5*s23*s234 + 1/2*M3*M5*s23*s61 + 3/2*M3*M5*s234^2 - 3/2*M3*M5*s234*s61 + 1/2*M3*m4*m5*s61 - 1/2*M3*m4*s234*s61 + 1/2*M3*m4*s61^2 + 1/2*M3*m5^2*s23 + 1/2*M3*m5*s23*s234 + 1/2*M3*m5*s23*s61 - 1/2*M3*m5*s234*s45 - M3*m5*s234*s61 - 1/2*M3*s234^2*s45 + 1/2*M3*s234*s45*s61 + 1/4*M4^2*s23^2 - 1/2*M4^2*s23*s45 + 1/2*M4^2*s23*s61 + 1/4*M4^2*s45^2 + 1/2*M4^2*s45*s61 + 1/4*M4^2*s61^2 - 1/2*M4*M5*m4*s23 + 1/2*M4*M5*m4*s45 + 1/2*M4*M5*m4*s61 + M4*M5*m5*s23 - 1/2*M4*M5*s23^2 - 1/2*M4*M5*s23*s234 + 1/2*M4*M5*s23*s45 - 1/2*M4*M5*s23*s61 - 1/2*M4*M5*s234*s45 - 1/2*M4*M5*s234*s61 + 1/2*M4*m4*s23*s61 + 1/2*M4*m4*s45*s61 + 1/2*M4*m4*s61^2 + 1/2*M4*m5*s23^2 - 1/2*M4*m5*s23*s45 + 1/2*M4*m5*s23*s61 - 1/2*M4*s23*s234*s45 + M4*s23*s45*s61 + 1/2*M4*s234*s45^2 + 1/2*M4*s234*s45*s61 + 1/4*M5^2*m4^2 + 1/2*M5^2*m4*s23 - 1/2*M5^2*m4*s234 + 1/4*M5^2*s23^2 + 1/2*M5^2*s23*s234 + 1/4*M5^2*s234^2 + 1/2*M5*m4^2*s61 + 1/2*M5*m4*m5*s23 - M5*m4*s23*s234 + 1/2*M5*m4*s23*s61 + 1/2*M5*m4*s234*s45 - 1/2*M5*m4*s234*s61 + 1/2*M5*m5*s23^2 + 1/2*M5*m5*s23*s234 - 1/2*M5*s23*s234*s45 - 1/2*M5*s234^2*s45 + 1/4*m4^2*s61^2 + 1/2*m4*m5*s23*s61 + 1/2*m4*s234*s45*s61 + 1/4*m5^2*s23^2 - 1/2*m5*s23*s234*s45 + 1/4*s234^2*s45^2
codim: 3, face: 18/50, weights: [-1, 0, -1, -1, 0, -1], discriminant: M1^2*M4^2 - 2*M1^2*M4*M6 + M1^2*M4*m4 + M1^2*M4*s123 + M1^2*M4*s56 + M1^2*M6^2 - M1^2*M6*m4 - M1^2*M6*s123 + M1^2*M6*s56 + 1/4*M1^2*m4^2 + 1/2*M1^2*m4*s123 + 1/2*M1^2*m4*s56 + 1/4*M1^2*s123^2 - 1/2*M1^2*s123*s56 + 1/4*M1^2*s56^2 - 2*M1*M3*M4^2 + 4*M1*M3*M4*M6 + M1*M3*M4*m1 - M1*M3*M4*m4 - M1*M3*M4*s123 - M1*M3*M4*s234 - 2*M1*M3*M4*s56 - 2*M1*M3*M6^2 - M1*M3*M6*m1 + M1*M3*M6*m4 + M1*M3*M6*s123 + M1*M3*M6*s234 - 2*M1*M3*M6*s56 + 1/2*M1*M3*m1*m4 + 1/2*M1*M3*m1*s123 - 1/2*M1*M3*m1*s56 - 1/2*M1*M3*m4*s234 - 1/2*M1*M3*m4*s56 - 1/2*M1*M3*s123*s234 + 1/2*M1*M3*s123*s56 + M1*M3*s23*s56 - 1/2*M1*M3*s234*s56 - 1/2*M1*M3*s56^2 + M1*M4^2*m1 + M1*M4^2*s123 + M1*M4^2*s23 - M1*M4*M6*m1 + M1*M4*M6*m4 - M1*M4*M6*s123 - 2*M1*M4*M6*s23 - M1*M4*M6*s234 + 3/2*M1*M4*m1*m4 + 3/2*M1*M4*m1*s123 + 1/2*M1*M4*m1*s56 + 3/2*M1*M4*m4*s123 + 1/2*M1*M4*m4*s23 + 3/2*M1*M4*s123^2 + 1/2*M1*M4*s123*s23 + 1/2*M1*M4*s123*s56 + 3/2*M1*M4*s23*s56 - M1*M6^2*m4 + M1*M6^2*s23 + M1*M6^2*s234 + 3/2*M1*M6*m4^2 + 3/2*M1*M6*m4*s123 - 1/2*M1*M6*m4*s23 - 3/2*M1*M6*m4*s234 - 1/2*M1*M6*m4*s56 - 1/2*M1*M6*s123*s23 - 3/2*M1*M6*s123*s234 + 3/2*M1*M6*s23*s56 + 1/2*M1*M6*s234*s56 + 1/2*M1*m1*m4^2 + 1/2*M1*m1*m4*s123 + 1/2*M1*m1*m4*s56 + 1/2*M1*m4*s123*s234 + M1*m4*s123*s56 + 1/2*M1*m4*s23*s56 + 1/2*M1*s123^2*s234 - 1/2*M1*s123*s23*s56 - 1/2*M1*s123*s234*s56 + 1/2*M1*s23*s56^2 + M3^2*M4^2 - 2*M3^2*M4*M6 - M3^2*M4*m1 + M3^2*M4*s234 + M3^2*M4*s56 + M3^2*M6^2 + M3^2*M6*m1 - M3^2*M6*s234 + M3^2*M6*s56 + 1/4*M3^2*m1^2 - 1/2*M3^2*m1*s234 + 1/2*M3^2*m1*s56 + 1/4*M3^2*s234^2 + 1/2*M3^2*s234*s56 + 1/4*M3^2*s56^2 - M3*M4^2*m1 - M3*M4^2*s123 + M3*M4^2*s23 + M3*M4*M6*m1 - M3*M4*M6*m4 + M3*M4*M6*s123 - 2*M3*M4*M6*s23 + M3*M4*M6*s234 + 3/2*M3*M4*m1^2 + 3/2*M3*M4*m1*s123 - 1/2*M3*M4*m1*s23 - 3/2*M3*M4*m1*s234 - 1/2*M3*M4*m1*s56 - 3/2*M3*M4*s123*s234 - 1/2*M3*M4*s123*s56 + 1/2*M3*M4*s23*s234 + 3/2*M3*M4*s23*s56 + M3*M6^2*m4 + M3*M6^2*s23 - M3*M6^2*s234 + 3/2*M3*M6*m1*m4 + 1/2*M3*M6*m1*s23 - 3/2*M3*M6*m1*s234 - 3/2*M3*M6*m4*s234 + 1/2*M3*M6*m4*s56 - 1/2*M3*M6*s23*s234 + 3/2*M3*M6*s23*s56 + 3/2*M3*M6*s234^2 - 1/2*M3*M6*s234*s56 + 1/2*M3*m1^2*m4 - 1/2*M3*m1*m4*s234 + 1/2*M3*m1*m4*s56 + 1/2*M3*m1*s123*s234 + 1/2*M3*m1*s23*s56 - M3*m1*s234*s56 - 1/2*M3*s123*s234^2 - 1/2*M3*s123*s234*s56 + 1/2*M3*s23*s234*s56 + 1/2*M3*s23*s56^2 + 1/4*M4^2*m1^2 + 1/2*M4^2*m1*s123 + 1/2*M4^2*m1*s23 + 1/4*M4^2*s123^2 - 1/2*M4^2*s123*s23 + 1/4*M4^2*s23^2 + 1/2*M4*M6*m1*m4 - 1/2*M4*M6*m1*s23 - 1/2*M4*M6*m1*s234 + 1/2*M4*M6*m4*s123 - 1/2*M4*M6*m4*s23 + 1/2*M4*M6*s123*s23 - 1/2*M4*M6*s123*s234 - 1/2*M4*M6*s23^2 - 1/2*M4*M6*s23*s234 + M4*M6*s23*s56 + 1/2*M4*m1^2*m4 + 1/2*M4*m1*m4*s123 + 1/2*M4*m1*m4*s23 + M4*m1*s123*s23 + 1/2*M4*m1*s123*s234 + 1/2*M4*m1*s23*s56 + 1/2*M4*s123^2*s234 - 1/2*M4*s123*s23*s234 - 1/2*M4*s123*s23*s56 + 1/2*M4*s23^2*s56 + 1/4*M6^2*m4^2 + 1/2*M6^2*m4*s23 - 1/2*M6^2*m4*s234 + 1/4*M6^2*s23^2 + 1/2*M6^2*s23*s234 + 1/4*M6^2*s234^2 + 1/2*M6*m1*m4^2 + 1/2*M6*m1*m4*s23 - 1/2*M6*m1*m4*s234 + 1/2*M6*m4*s123*s234 - M6*m4*s23*s234 + 1/2*M6*m4*s23*s56 - 1/2*M6*s123*s23*s234 - 1/2*M6*s123*s234^2 + 1/2*M6*s23^2*s56 + 1/2*M6*s23*s234*s56 + 1/4*m1^2*m4^2 + 1/2*m1*m4*s123*s234 + 1/2*m1*m4*s23*s56 + 1/4*s123^2*s234^2 - 1/2*s123*s23*s234*s56 + 1/4*s23^2*s56^2
codim: 3, face: 19/50, weights: [-1, 0, -1, 0, -1, -1], discriminant: M1^2*M5^2 - 2*M1^2*M5*M6 + M1^2*M5*m6 + M1^2*M5*s123 + M1^2*M5*s45 + M1^2*M6^2 + M1^2*M6*m6 - M1^2*M6*s123 - M1^2*M6*s45 + 1/4*M1^2*m6^2 - 1/2*M1^2*m6*s123 + 1/2*M1^2*m6*s45 + 1/4*M1^2*s123^2 + 1/2*M1^2*s123*s45 + 1/4*M1^2*s45^2 - 2*M1*M3*M5^2 + 4*M1*M3*M5*M6 + M1*M3*M5*m1 - 2*M1*M3*M5*m6 - M1*M3*M5*s123 - M1*M3*M5*s45 - M1*M3*M5*s61 - 2*M1*M3*M6^2 - M1*M3*M6*m1 - 2*M1*M3*M6*m6 + M1*M3*M6*s123 + M1*M3*M6*s45 + M1*M3*M6*s61 - 1/2*M1*M3*m1*m6 + 1/2*M1*M3*m1*s123 + 1/2*M1*M3*m1*s45 - 1/2*M1*M3*m6^2 + 1/2*M1*M3*m6*s123 + M1*M3*m6*s23 - 1/2*M1*M3*m6*s45 - 1/2*M1*M3*m6*s61 - 1/2*M1*M3*s123*s61 - 1/2*M1*M3*s45*s61 + M1*M5^2*m1 + M1*M5^2*s123 + M1*M5^2*s23 - M1*M5*M6*m1 - M1*M5*M6*s123 - 2*M1*M5*M6*s23 + M1*M5*M6*s45 - M1*M5*M6*s61 + 1/2*M1*M5*m1*m6 + 3/2*M1*M5*m1*s123 + 3/2*M1*M5*m1*s45 + 1/2*M1*M5*m6*s123 + 3/2*M1*M5*m6*s23 + 3/2*M1*M5*s123^2 + 1/2*M1*M5*s123*s23 + 3/2*M1*M5*s123*s45 + 1/2*M1*M5*s23*s45 + M1*M6^2*s23 - M1*M6^2*s45 + M1*M6^2*s61 + 3/2*M1*M6*m6*s23 - 1/2*M1*M6*m6*s45 + 1/2*M1*M6*m6*s61 - 1/2*M1*M6*s123*s23 + 3/2*M1*M6*s123*s45 - 3/2*M1*M6*s123*s61 - 1/2*M1*M6*s23*s45 + 3/2*M1*M6*s45^2 - 3/2*M1*M6*s45*s61 + 1/2*M1*m1*m6*s45 + 1/2*M1*m1*s123*s45 + 1/2*M1*m1*s45^2 + 1/2*M1*m6^2*s23 - 1/2*M1*m6*s123*s23 + M1*m6*s123*s45 - 1/2*M1*m6*s123*s61 + 1/2*M1*m6*s23*s45 + 1/2*M1*s123^2*s61 + 1/2*M1*s123*s45*s61 + M3^2*M5^2 - 2*M3^2*M5*M6 - M3^2*M5*m1 + M3^2*M5*m6 + M3^2*M5*s61 + M3^2*M6^2 + M3^2*M6*m1 + M3^2*M6*m6 - M3^2*M6*s61 + 1/4*M3^2*m1^2 + 1/2*M3^2*m1*m6 - 1/2*M3^2*m1*s61 + 1/4*M3^2*m6^2 + 1/2*M3^2*m6*s61 + 1/4*M3^2*s61^2 - M3*M5^2*m1 - M3*M5^2*s123 + M3*M5^2*s23 + M3*M5*M6*m1 + M3*M5*M6*s123 - 2*M3*M5*M6*s23 - M3*M5*M6*s45 + M3*M5*M6*s61 + 3/2*M3*M5*m1^2 - 1/2*M3*M5*m1*m6 + 3/2*M3*M5*m1*s123 - 1/2*M3*M5*m1*s23 - 3/2*M3*M5*m1*s61 - 1/2*M3*M5*m6*s123 + 3/2*M3*M5*m6*s23 - 3/2*M3*M5*s123*s61 + 1/2*M3*M5*s23*s61 + M3*M6^2*s23 + M3*M6^2*s45 - M3*M6^2*s61 + 1/2*M3*M6*m1*s23 + 3/2*M3*M6*m1*s45 - 3/2*M3*M6*m1*s61 + 3/2*M3*M6*m6*s23 + 1/2*M3*M6*m6*s45 - 1/2*M3*M6*m6*s61 - 1/2*M3*M6*s23*s61 - 3/2*M3*M6*s45*s61 + 3/2*M3*M6*s61^2 + 1/2*M3*m1^2*s45 + 1/2*M3*m1*m6*s23 + 1/2*M3*m1*m6*s45 - M3*m1*m6*s61 + 1/2*M3*m1*s123*s61 - 1/2*M3*m1*s45*s61 + 1/2*M3*m6^2*s23 - 1/2*M3*m6*s123*s61 + 1/2*M3*m6*s23*s61 - 1/2*M3*s123*s61^2 + 1/4*M5^2*m1^2 + 1/2*M5^2*m1*s123 + 1/2*M5^2*m1*s23 + 1/4*M5^2*s123^2 - 1/2*M5^2*s123*s23 + 1/4*M5^2*s23^2 - 1/2*M5*M6*m1*s23 + 1/2*M5*M6*m1*s45 - 1/2*M5*M6*m1*s61 + M5*M6*m6*s23 + 1/2*M5*M6*s123*s23 + 1/2*M5*M6*s123*s45 - 1/2*M5*M6*s123*s61 - 1/2*M5*M6*s23^2 - 1/2*M5*M6*s23*s45 - 1/2*M5*M6*s23*s61 + 1/2*M5*m1^2*s45 + 1/2*M5*m1*m6*s23 + M5*m1*s123*s23 + 1/2*M5*m1*s123*s45 + 1/2*M5*m1*s123*s61 + 1/2*M5*m1*s23*s45 - 1/2*M5*m6*s123*s23 + 1/2*M5*m6*s23^2 + 1/2*M5*s123^2*s61 - 1/2*M5*s123*s23*s61 + 1/4*M6^2*s23^2 + 1/2*M6^2*s23*s45 + 1/2*M6^2*s23*s61 + 1/4*M6^2*s45^2 - 1/2*M6^2*s45*s61 + 1/4*M6^2*s61^2 + 1/2*M6*m1*s23*s45 + 1/2*M6*m1*s45^2 - 1/2*M6*m1*s45*s61 + 1/2*M6*m6*s23^2 + 1/2*M6*m6*s23*s45 + 1/2*M6*m6*s23*s61 - 1/2*M6*s123*s23*s61 + 1/2*M6*s123*s45*s61 - 1/2*M6*s123*s61^2 - M6*s23*s45*s61 + 1/4*m1^2*s45^2 + 1/2*m1*m6*s23*s45 + 1/2*m1*s123*s45*s61 + 1/4*m6^2*s23^2 - 1/2*m6*s123*s23*s61 + 1/4*s123^2*s61^2
codim: 3, face: 20/50, weights: [-1, 0, 0, -1, -1, -1], discriminant: M1^2*M5^2 - 2*M1^2*M5*M6 + M1^2*M5*m5 + M1^2*M5*m6 + M1^2*M5*s56 + M1^2*M6^2 - M1^2*M6*m5 + M1^2*M6*m6 - M1^2*M6*s56 + 1/4*M1^2*m5^2 + 1/2*M1^2*m5*m6 + 1/2*M1^2*m5*s56 + 1/4*M1^2*m6^2 - 1/2*M1^2*m6*s56 + 1/4*M1^2*s56^2 - 2*M1*M4*M5^2 + 4*M1*M4*M5*M6 + M1*M4*M5*m1 - M1*M4*M5*m5 - 2*M1*M4*M5*m6 - M1*M4*M5*s56 - M1*M4*M5*s61 - 2*M1*M4*M6^2 - M1*M4*M6*m1 + M1*M4*M6*m5 - 2*M1*M4*M6*m6 + M1*M4*M6*s56 + M1*M4*M6*s61 + 1/2*M1*M4*m1*m5 - 1/2*M1*M4*m1*m6 + 1/2*M1*M4*m1*s56 - 1/2*M1*M4*m5*m6 - 1/2*M1*M4*m5*s61 - 1/2*M1*M4*m6^2 + M1*M4*m6*s234 + 1/2*M1*M4*m6*s56 - 1/2*M1*M4*m6*s61 - 1/2*M1*M4*s56*s61 + M1*M5^2*m1 + M1*M5^2*s234 + M1*M5^2*s56 - M1*M5*M6*m1 + M1*M5*M6*m5 - 2*M1*M5*M6*s234 - M1*M5*M6*s56 - M1*M5*M6*s61 + 3/2*M1*M5*m1*m5 + 1/2*M1*M5*m1*m6 + 3/2*M1*M5*m1*s56 + 1/2*M1*M5*m5*s234 + 3/2*M1*M5*m5*s56 + 3/2*M1*M5*m6*s234 + 1/2*M1*M5*m6*s56 + 1/2*M1*M5*s234*s56 + 3/2*M1*M5*s56^2 - M1*M6^2*m5 + M1*M6^2*s234 + M1*M6^2*s61 + 3/2*M1*M6*m5^2 - 1/2*M1*M6*m5*m6 - 1/2*M1*M6*m5*s234 + 3/2*M1*M6*m5*s56 - 3/2*M1*M6*m5*s61 + 3/2*M1*M6*m6*s234 + 1/2*M1*M6*m6*s61 - 1/2*M1*M6*s234*s56 - 3/2*M1*M6*s56*s61 + 1/2*M1*m1*m5^2 + 1/2*M1*m1*m5*m6 + 1/2*M1*m1*m5*s56 + 1/2*M1*m5*m6*s234 + M1*m5*m6*s56 + 1/2*M1*m5*s56*s61 + 1/2*M1*m6^2*s234 - 1/2*M1*m6*s234*s56 - 1/2*M1*m6*s56*s61 + 1/2*M1*s56^2*s61 + M4^2*M5^2 - 2*M4^2*M5*M6 - M4^2*M5*m1 + M4^2*M5*m6 + M4^2*M5*s61 + M4^2*M6^2 + M4^2*M6*m1 + M4^2*M6*m6 - M4^2*M6*s61 + 1/4*M4^2*m1^2 + 1/2*M4^2*m1*m6 - 1/2*M4^2*m1*s61 + 1/4*M4^2*m6^2 + 1/2*M4^2*m6*s61 + 1/4*M4^2*s61^2 - M4*M5^2*m1 + M4*M5^2*s234 - M4*M5^2*s56 + M4*M5*M6*m1 - M4*M5*M6*m5 - 2*M4*M5*M6*s234 + M4*M5*M6*s56 + M4*M5*M6*s61 + 3/2*M4*M5*m1^2 - 1/2*M4*M5*m1*m6 - 1/2*M4*M5*m1*s234 + 3/2*M4*M5*m1*s56 - 3/2*M4*M5*m1*s61 + 3/2*M4*M5*m6*s234 - 1/2*M4*M5*m6*s56 + 1/2*M4*M5*s234*s61 - 3/2*M4*M5*s56*s61 + M4*M6^2*m5 + M4*M6^2*s234 - M4*M6^2*s61 + 3/2*M4*M6*m1*m5 + 1/2*M4*M6*m1*s234 - 3/2*M4*M6*m1*s61 + 1/2*M4*M6*m5*m6 - 3/2*M4*M6*m5*s61 + 3/2*M4*M6*m6*s234 - 1/2*M4*M6*m6*s61 - 1/2*M4*M6*s234*s61 + 3/2*M4*M6*s61^2 + 1/2*M4*m1^2*m5 + 1/2*M4*m1*m5*m6 - 1/2*M4*m1*m5*s61 + 1/2*M4*m1*m6*s234 - M4*m1*m6*s61 + 1/2*M4*m1*s56*s61 + 1/2*M4*m6^2*s234 + 1/2*M4*m6*s234*s61 - 1/2*M4*m6*s56*s61 - 1/2*M4*s56*s61^2 + 1/4*M5^2*m1^2 + 1/2*M5^2*m1*s234 + 1/2*M5^2*m1*s56 + 1/4*M5^2*s234^2 - 1/2*M5^2*s234*s56 + 1/4*M5^2*s56^2 + 1/2*M5*M6*m1*m5 - 1/2*M5*M6*m1*s234 - 1/2*M5*M6*m1*s61 - 1/2*M5*M6*m5*s234 + 1/2*M5*M6*m5*s56 + M5*M6*m6*s234 - 1/2*M5*M6*s234^2 + 1/2*M5*M6*s234*s56 - 1/2*M5*M6*s234*s61 - 1/2*M5*M6*s56*s61 + 1/2*M5*m1^2*m5 + 1/2*M5*m1*m5*s234 + 1/2*M5*m1*m5*s56 + 1/2*M5*m1*m6*s234 + M5*m1*s234*s56 + 1/2*M5*m1*s56*s61 + 1/2*M5*m6*s234^2 - 1/2*M5*m6*s234*s56 - 1/2*M5*s234*s56*s61 + 1/2*M5*s56^2*s61 + 1/4*M6^2*m5^2 + 1/2*M6^2*m5*s234 - 1/2*M6^2*m5*s61 + 1/4*M6^2*s234^2 + 1/2*M6^2*s234*s61 + 1/4*M6^2*s61^2 + 1/2*M6*m1*m5^2 + 1/2*M6*m1*m5*s234 - 1/2*M6*m1*m5*s61 + 1/2*M6*m5*m6*s234 - M6*m5*s234*s61 + 1/2*M6*m5*s56*s61 + 1/2*M6*m6*s234^2 + 1/2*M6*m6*s234*s61 - 1/2*M6*s234*s56*s61 - 1/2*M6*s56*s61^2 + 1/4*m1^2*m5^2 + 1/2*m1*m5*m6*s234 + 1/2*m1*m5*s56*s61 + 1/4*m6^2*s234^2 - 1/2*m6*s234*s56*s61 + 1/4*s56^2*s61^2
codim: 3, face: 21/50, weights: [1, 1, 1, 1, 2, 2], discriminant: 1
codim: 3, face: 22/50, weights: [1, 1, 1, 2, 1, 2], discriminant: 1
codim: 3, face: 23/50, weights: [1, 1, 1, 2, 2, 1], discriminant: 1
codim: 3, face: 24/50, weights: [1, 1, 2, 1, 1, 2], discriminant: 1
codim: 3, face: 25/50, weights: [1, 1, 2, 1, 2, 1], discriminant: 1
codim: 3, face: 26/50, weights: [1, 1, 2, 2, 1, 1], discriminant: 1
codim: 3, face: 27/50, weights: [1, 2, 1, 1, 1, 2], discriminant: 1
codim: 3, face: 28/50, weights: [1, 2, 1, 1, 2, 1], discriminant: 1
codim: 3, face: 29/50, weights: [1, 2, 1, 2, 1, 1], discriminant: 1
codim: 3, face: 30/50, weights: [1, 2, 2, 1, 1, 1], discriminant: 1
codim: 3, face: 31/50, weights: [1, 0, 0, 0, 1, 1], discriminant: m3^2 - 2*m3*m4 + m3*s34 - 2*m4^2 - 2*m4*s34 + s34^2
codim: 3, face: 32/50, weights: [1, 0, 0, 1, 0, 1], discriminant: m3^2 - 2*m3*s345 + m3*s45 - 2*s345^2 - 2*s345*s45 + s45^2
codim: 3, face: 33/50, weights: [1, 0, 0, 1, 1, 0], discriminant: m3^2 - 2*m3*s12 + m3*s123 - 2*s12^2 - 2*s12*s123 + s123^2
codim: 3, face: 34/50, weights: [1, 0, 1, 0, 0, 1], discriminant: m5^2 - 2*m5*s34 + m5*s345 - 2*s34^2 - 2*s34*s345 + s345^2
codim: 3, face: 35/50, weights: [1, 0, 1, 0, 1, 0], discriminant: s12^2 - 2*s12*s34 + s12*s56 - 2*s34^2 - 2*s34*s56 + s56^2
codim: 3, face: 36/50, weights: [1, 0, 1, 1, 0, 0], discriminant: m6^2 - 2*m6*s12 + m6*s345 - 2*s12^2 - 2*s12*s345 + s345^2
codim: 3, face: 37/50, weights: [0, -1, -1, -1, -1, 0], discriminant: M2^2*M4^2 - 2*M2^2*M4*M5 + M2^2*M4*m4 + M2^2*M4*m5 + M2^2*M4*s45 + M2^2*M5^2 - M2^2*M5*m4 + M2^2*M5*m5 - M2^2*M5*s45 + 1/4*M2^2*m4^2 + 1/2*M2^2*m4*m5 + 1/2*M2^2*m4*s45 + 1/4*M2^2*m5^2 - 1/2*M2^2*m5*s45 + 1/4*M2^2*s45^2 - 2*M2*M3*M4^2 + 4*M2*M3*M4*M5 - M2*M3*M4*m4 - 2*M2*M3*M4*m5 - M2*M3*M4*s34 + M2*M3*M4*s345 - M2*M3*M4*s45 - 2*M2*M3*M5^2 + M2*M3*M5*m4 - 2*M2*M3*M5*m5 + M2*M3*M5*s34 - M2*M3*M5*s345 + M2*M3*M5*s45 + M2*M3*m3*m5 - 1/2*M2*M3*m4*m5 - 1/2*M2*M3*m4*s34 + 1/2*M2*M3*m4*s345 - 1/2*M2*M3*m5^2 - 1/2*M2*M3*m5*s34 - 1/2*M2*M3*m5*s345 + 1/2*M2*M3*m5*s45 - 1/2*M2*M3*s34*s45 + 1/2*M2*M3*s345*s45 + M2*M4^2*m3 + M2*M4^2*s345 + M2*M4^2*s45 - 2*M2*M4*M5*m3 + M2*M4*M5*m4 - M2*M4*M5*s34 - M2*M4*M5*s345 - M2*M4*M5*s45 + 1/2*M2*M4*m3*m4 + 3/2*M2*M4*m3*m5 + 1/2*M2*M4*m3*s45 + 3/2*M2*M4*m4*s345 + 3/2*M2*M4*m4*s45 + 1/2*M2*M4*m5*s345 + 1/2*M2*M4*m5*s45 + 3/2*M2*M4*s345*s45 + 3/2*M2*M4*s45^2 + M2*M5^2*m3 - M2*M5^2*m4 + M2*M5^2*s34 - 1/2*M2*M5*m3*m4 + 3/2*M2*M5*m3*m5 - 1/2*M2*M5*m3*s45 + 3/2*M2*M5*m4^2 - 1/2*M2*M5*m4*m5 - 3/2*M2*M5*m4*s34 + 3/2*M2*M5*m4*s45 + 1/2*M2*M5*m5*s34 - 3/2*M2*M5*s34*s45 + 1/2*M2*m3*m4*m5 + 1/2*M2*m3*m5^2 - 1/2*M2*m3*m5*s45 + 1/2*M2*m4^2*s345 + 1/2*M2*m4*m5*s345 + M2*m4*m5*s45 + 1/2*M2*m4*s34*s45 + 1/2*M2*m4*s345*s45 - 1/2*M2*m5*s34*s45 + 1/2*M2*s34*s45^2 + M3^2*M4^2 - 2*M3^2*M4*M5 + M3^2*M4*m5 + M3^2*M4*s34 - M3^2*M4*s345 + M3^2*M5^2 + M3^2*M5*m5 - M3^2*M5*s34 + M3^2*M5*s345 + 1/4*M3^2*m5^2 + 1/2*M3^2*m5*s34 + 1/2*M3^2*m5*s345 + 1/4*M3^2*s34^2 - 1/2*M3^2*s34*s345 + 1/4*M3^2*s345^2 + M3*M4^2*m3 - M3*M4^2*s345 - M3*M4^2*s45 - 2*M3*M4*M5*m3 - M3*M4*M5*m4 + M3*M4*M5*s34 + M3*M4*M5*s345 + M3*M4*M5*s45 + 3/2*M3*M4*m3*m5 + 1/2*M3*M4*m3*s34 - 1/2*M3*M4*m3*s345 - 1/2*M3*M4*m5*s345 - 1/2*M3*M4*m5*s45 - 3/2*M3*M4*s34*s345 - 3/2*M3*M4*s34*s45 + 3/2*M3*M4*s345^2 + 3/2*M3*M4*s345*s45 + M3*M5^2*m3 + M3*M5^2*m4 - M3*M5^2*s34 + 3/2*M3*M5*m3*m5 - 1/2*M3*M5*m3*s34 + 1/2*M3*M5*m3*s345 + 1/2*M3*M5*m4*m5 - 3/2*M3*M5*m4*s34 + 3/2*M3*M5*m4*s345 - 1/2*M3*M5*m5*s34 + 3/2*M3*M5*s34^2 - 3/2*M3*M5*s34*s345 + 1/2*M3*m3*m5^2 + 1/2*M3*m3*m5*s34 + 1/2*M3*m3*m5*s345 + 1/2*M3*m4*m5*s345 - 1/2*M3*m4*s34*s345 + 1/2*M3*m4*s345^2 - M3*m5*s34*s345 - 1/2*M3*m5*s34*s45 - 1/2*M3*s34^2*s45 + 1/2*M3*s34*s345*s45 + 1/4*M4^2*m3^2 + 1/2*M4^2*m3*s345 - 1/2*M4^2*m3*s45 + 1/4*M4^2*s345^2 + 1/2*M4^2*s345*s45 + 1/4*M4^2*s45^2 - 1/2*M4*M5*m3^2 - 1/2*M4*M5*m3*m4 + M4*M5*m3*m5 - 1/2*M4*M5*m3*s34 - 1/2*M4*M5*m3*s345 + 1/2*M4*M5*m3*s45 + 1/2*M4*M5*m4*s345 + 1/2*M4*M5*m4*s45 - 1/2*M4*M5*s34*s345 - 1/2*M4*M5*s34*s45 + 1/2*M4*m3^2*m5 + 1/2*M4*m3*m4*s345 + 1/2*M4*m3*m5*s345 - 1/2*M4*m3*m5*s45 - 1/2*M4*m3*s34*s45 + M4*m3*s345*s45 + 1/2*M4*m4*s345^2 + 1/2*M4*m4*s345*s45 + 1/2*M4*s34*s345*s45 + 1/2*M4*s34*s45^2 + 1/4*M5^2*m3^2 + 1/2*M5^2*m3*m4 + 1/2*M5^2*m3*s34 + 1/4*M5^2*m4^2 - 1/2*M5^2*m4*s34 + 1/4*M5^2*s34^2 + 1/2*M5*m3^2*m5 + 1/2*M5*m3*m4*m5 - M5*m3*m4*s34 + 1/2*M5*m3*m4*s345 + 1/2*M5*m3*m5*s34 - 1/2*M5*m3*s34*s45 + 1/2*M5*m4^2*s345 - 1/2*M5*m4*s34*s345 + 1/2*M5*m4*s34*s45 - 1/2*M5*s34^2*s45 + 1/4*m3^2*m5^2 + 1/2*m3*m4*m5*s345 - 1/2*m3*m5*s34*s45 + 1/4*m4^2*s345^2 + 1/2*m4*s34*s345*s45 + 1/4*s34^2*s45^2
codim: 3, face: 38/50, weights: [0, -1, -1, -1, 0, -1], discriminant: M2^2*M4^2 - 2*M2^2*M4*M6 + M2^2*M4*m4 + M2^2*M4*s123 + M2^2*M4*s56 + M2^2*M6^2 - M2^2*M6*m4 - M2^2*M6*s123 + M2^2*M6*s56 + 1/4*M2^2*m4^2 + 1/2*M2^2*m4*s123 + 1/2*M2^2*m4*s56 + 1/4*M2^2*s123^2 - 1/2*M2^2*s123*s56 + 1/4*M2^2*s56^2 - 2*M2*M3*M4^2 + 4*M2*M3*M4*M6 - M2*M3*M4*m4 + M2*M3*M4*s12 - M2*M3*M4*s123 - M2*M3*M4*s34 - 2*M2*M3*M4*s56 - 2*M2*M3*M6^2 + M2*M3*M6*m4 - M2*M3*M6*s12 + M2*M3*M6*s123 + M2*M3*M6*s34 - 2*M2*M3*M6*s56 + M2*M3*m3*s56 + 1/2*M2*M3*m4*s12 - 1/2*M2*M3*m4*s34 - 1/2*M2*M3*m4*s56 + 1/2*M2*M3*s12*s123 - 1/2*M2*M3*s12*s56 - 1/2*M2*M3*s123*s34 + 1/2*M2*M3*s123*s56 - 1/2*M2*M3*s34*s56 - 1/2*M2*M3*s56^2 + M2*M4^2*m3 + M2*M4^2*s12 + M2*M4^2*s123 - 2*M2*M4*M6*m3 + M2*M4*M6*m4 - M2*M4*M6*s12 - M2*M4*M6*s123 - M2*M4*M6*s34 + 1/2*M2*M4*m3*m4 + 1/2*M2*M4*m3*s123 + 3/2*M2*M4*m3*s56 + 3/2*M2*M4*m4*s12 + 3/2*M2*M4*m4*s123 + 3/2*M2*M4*s12*s123 + 1/2*M2*M4*s12*s56 + 3/2*M2*M4*s123^2 + 1/2*M2*M4*s123*s56 + M2*M6^2*m3 - M2*M6^2*m4 + M2*M6^2*s34 - 1/2*M2*M6*m3*m4 - 1/2*M2*M6*m3*s123 + 3/2*M2*M6*m3*s56 + 3/2*M2*M6*m4^2 + 3/2*M2*M6*m4*s123 - 3/2*M2*M6*m4*s34 - 1/2*M2*M6*m4*s56 - 3/2*M2*M6*s123*s34 + 1/2*M2*M6*s34*s56 + 1/2*M2*m3*m4*s56 - 1/2*M2*m3*s123*s56 + 1/2*M2*m3*s56^2 + 1/2*M2*m4^2*s12 + 1/2*M2*m4*s12*s123 + 1/2*M2*m4*s12*s56 + 1/2*M2*m4*s123*s34 + M2*m4*s123*s56 + 1/2*M2*s123^2*s34 - 1/2*M2*s123*s34*s56 + M3^2*M4^2 - 2*M3^2*M4*M6 - M3^2*M4*s12 + M3^2*M4*s34 + M3^2*M4*s56 + M3^2*M6^2 + M3^2*M6*s12 - M3^2*M6*s34 + M3^2*M6*s56 + 1/4*M3^2*s12^2 - 1/2*M3^2*s12*s34 + 1/2*M3^2*s12*s56 + 1/4*M3^2*s34^2 + 1/2*M3^2*s34*s56 + 1/4*M3^2*s56^2 + M3*M4^2*m3 - M3*M4^2*s12 - M3*M4^2*s123 - 2*M3*M4*M6*m3 - M3*M4*M6*m4 + M3*M4*M6*s12 + M3*M4*M6*s123 + M3*M4*M6*s34 - 1/2*M3*M4*m3*s12 + 1/2*M3*M4*m3*s34 + 3/2*M3*M4*m3*s56 + 3/2*M3*M4*s12^2 + 3/2*M3*M4*s12*s123 - 3/2*M3*M4*s12*s34 - 1/2*M3*M4*s12*s56 - 3/2*M3*M4*s123*s34 - 1/2*M3*M4*s123*s56 + M3*M6^2*m3 + M3*M6^2*m4 - M3*M6^2*s34 + 1/2*M3*M6*m3*s12 - 1/2*M3*M6*m3*s34 + 3/2*M3*M6*m3*s56 + 3/2*M3*M6*m4*s12 - 3/2*M3*M6*m4*s34 + 1/2*M3*M6*m4*s56 - 3/2*M3*M6*s12*s34 + 3/2*M3*M6*s34^2 - 1/2*M3*M6*s34*s56 + 1/2*M3*m3*s12*s56 + 1/2*M3*m3*s34*s56 + 1/2*M3*m3*s56^2 + 1/2*M3*m4*s12^2 - 1/2*M3*m4*s12*s34 + 1/2*M3*m4*s12*s56 + 1/2*M3*s12*s123*s34 - M3*s12*s34*s56 - 1/2*M3*s123*s34^2 - 1/2*M3*s123*s34*s56 + 1/4*M4^2*m3^2 + 1/2*M4^2*m3*s12 - 1/2*M4^2*m3*s123 + 1/4*M4^2*s12^2 + 1/2*M4^2*s12*s123 + 1/4*M4^2*s123^2 - 1/2*M4*M6*m3^2 - 1/2*M4*M6*m3*m4 - 1/2*M4*M6*m3*s12 + 1/2*M4*M6*m3*s123 - 1/2*M4*M6*m3*s34 + M4*M6*m3*s56 + 1/2*M4*M6*m4*s12 + 1/2*M4*M6*m4*s123 - 1/2*M4*M6*s12*s34 - 1/2*M4*M6*s123*s34 + 1/2*M4*m3^2*s56 + 1/2*M4*m3*m4*s12 + M4*m3*s12*s123 + 1/2*M4*m3*s12*s56 - 1/2*M4*m3*s123*s34 - 1/2*M4*m3*s123*s56 + 1/2*M4*m4*s12^2 + 1/2*M4*m4*s12*s123 + 1/2*M4*s12*s123*s34 + 1/2*M4*s123^2*s34 + 1/4*M6^2*m3^2 + 1/2*M6^2*m3*m4 + 1/2*M6^2*m3*s34 + 1/4*M6^2*m4^2 - 1/2*M6^2*m4*s34 + 1/4*M6^2*s34^2 + 1/2*M6*m3^2*s56 + 1/2*M6*m3*m4*s12 - M6*m3*m4*s34 + 1/2*M6*m3*m4*s56 - 1/2*M6*m3*s123*s34 + 1/2*M6*m3*s34*s56 + 1/2*M6*m4^2*s12 - 1/2*M6*m4*s12*s34 + 1/2*M6*m4*s123*s34 - 1/2*M6*s123*s34^2 + 1/4*m3^2*s56^2 + 1/2*m3*m4*s12*s56 - 1/2*m3*s123*s34*s56 + 1/4*m4^2*s12^2 + 1/2*m4*s12*s123*s34 + 1/4*s123^2*s34^2
codim: 3, face: 39/50, weights: [0, -1, -1, 0, -1, -1], discriminant: M2^2*M5^2 - 2*M2^2*M5*M6 + M2^2*M5*m6 + M2^2*M5*s123 + M2^2*M5*s45 + M2^2*M6^2 + M2^2*M6*m6 - M2^2*M6*s123 - M2^2*M6*s45 + 1/4*M2^2*m6^2 - 1/2*M2^2*m6*s123 + 1/2*M2^2*m6*s45 + 1/4*M2^2*s123^2 + 1/2*M2^2*s123*s45 + 1/4*M2^2*s45^2 - 2*M2*M3*M5^2 + 4*M2*M3*M5*M6 - 2*M2*M3*M5*m6 + M2*M3*M5*s12 - M2*M3*M5*s123 - M2*M3*M5*s345 - M2*M3*M5*s45 - 2*M2*M3*M6^2 - 2*M2*M3*M6*m6 - M2*M3*M6*s12 + M2*M3*M6*s123 + M2*M3*M6*s345 + M2*M3*M6*s45 + M2*M3*m3*m6 - 1/2*M2*M3*m6^2 - 1/2*M2*M3*m6*s12 + 1/2*M2*M3*m6*s123 - 1/2*M2*M3*m6*s345 - 1/2*M2*M3*m6*s45 + 1/2*M2*M3*s12*s123 + 1/2*M2*M3*s12*s45 - 1/2*M2*M3*s123*s345 - 1/2*M2*M3*s345*s45 + M2*M5^2*m3 + M2*M5^2*s12 + M2*M5^2*s123 - 2*M2*M5*M6*m3 - M2*M5*M6*s12 - M2*M5*M6*s123 - M2*M5*M6*s345 + M2*M5*M6*s45 + 3/2*M2*M5*m3*m6 + 1/2*M2*M5*m3*s123 + 1/2*M2*M5*m3*s45 + 1/2*M2*M5*m6*s12 + 1/2*M2*M5*m6*s123 + 3/2*M2*M5*s12*s123 + 3/2*M2*M5*s12*s45 + 3/2*M2*M5*s123^2 + 3/2*M2*M5*s123*s45 + M2*M6^2*m3 + M2*M6^2*s345 - M2*M6^2*s45 + 3/2*M2*M6*m3*m6 - 1/2*M2*M6*m3*s123 - 1/2*M2*M6*m3*s45 + 1/2*M2*M6*m6*s345 - 1/2*M2*M6*m6*s45 - 3/2*M2*M6*s123*s345 + 3/2*M2*M6*s123*s45 - 3/2*M2*M6*s345*s45 + 3/2*M2*M6*s45^2 + 1/2*M2*m3*m6^2 - 1/2*M2*m3*m6*s123 + 1/2*M2*m3*m6*s45 + 1/2*M2*m6*s12*s45 - 1/2*M2*m6*s123*s345 + M2*m6*s123*s45 + 1/2*M2*s12*s123*s45 + 1/2*M2*s12*s45^2 + 1/2*M2*s123^2*s345 + 1/2*M2*s123*s345*s45 + M3^2*M5^2 - 2*M3^2*M5*M6 + M3^2*M5*m6 - M3^2*M5*s12 + M3^2*M5*s345 + M3^2*M6^2 + M3^2*M6*m6 + M3^2*M6*s12 - M3^2*M6*s345 + 1/4*M3^2*m6^2 + 1/2*M3^2*m6*s12 + 1/2*M3^2*m6*s345 + 1/4*M3^2*s12^2 - 1/2*M3^2*s12*s345 + 1/4*M3^2*s345^2 + M3*M5^2*m3 - M3*M5^2*s12 - M3*M5^2*s123 - 2*M3*M5*M6*m3 + M3*M5*M6*s12 + M3*M5*M6*s123 + M3*M5*M6*s345 - M3*M5*M6*s45 + 3/2*M3*M5*m3*m6 - 1/2*M3*M5*m3*s12 + 1/2*M3*M5*m3*s345 - 1/2*M3*M5*m6*s12 - 1/2*M3*M5*m6*s123 + 3/2*M3*M5*s12^2 + 3/2*M3*M5*s12*s123 - 3/2*M3*M5*s12*s345 - 3/2*M3*M5*s123*s345 + M3*M6^2*m3 - M3*M6^2*s345 + M3*M6^2*s45 + 3/2*M3*M6*m3*m6 + 1/2*M3*M6*m3*s12 - 1/2*M3*M6*m3*s345 - 1/2*M3*M6*m6*s345 + 1/2*M3*M6*m6*s45 - 3/2*M3*M6*s12*s345 + 3/2*M3*M6*s12*s45 + 3/2*M3*M6*s345^2 - 3/2*M3*M6*s345*s45 + 1/2*M3*m3*m6^2 + 1/2*M3*m3*m6*s12 + 1/2*M3*m3*m6*s345 - M3*m6*s12*s345 + 1/2*M3*m6*s12*s45 - 1/2*M3*m6*s123*s345 + 1/2*M3*s12^2*s45 + 1/2*M3*s12*s123*s345 - 1/2*M3*s12*s345*s45 - 1/2*M3*s123*s345^2 + 1/4*M5^2*m3^2 + 1/2*M5^2*m3*s12 - 1/2*M5^2*m3*s123 + 1/4*M5^2*s12^2 + 1/2*M5^2*s12*s123 + 1/4*M5^2*s123^2 - 1/2*M5*M6*m3^2 + M5*M6*m3*m6 - 1/2*M5*M6*m3*s12 + 1/2*M5*M6*m3*s123 - 1/2*M5*M6*m3*s345 - 1/2*M5*M6*m3*s45 - 1/2*M5*M6*s12*s345 + 1/2*M5*M6*s12*s45 - 1/2*M5*M6*s123*s345 + 1/2*M5*M6*s123*s45 + 1/2*M5*m3^2*m6 + 1/2*M5*m3*m6*s12 - 1/2*M5*m3*m6*s123 + M5*m3*s12*s123 + 1/2*M5*m3*s12*s45 - 1/2*M5*m3*s123*s345 + 1/2*M5*s12^2*s45 + 1/2*M5*s12*s123*s345 + 1/2*M5*s12*s123*s45 + 1/2*M5*s123^2*s345 + 1/4*M6^2*m3^2 + 1/2*M6^2*m3*s345 + 1/2*M6^2*m3*s45 + 1/4*M6^2*s345^2 - 1/2*M6^2*s345*s45 + 1/4*M6^2*s45^2 + 1/2*M6*m3^2*m6 + 1/2*M6*m3*m6*s345 + 1/2*M6*m3*m6*s45 + 1/2*M6*m3*s12*s45 - 1/2*M6*m3*s123*s345 - M6*m3*s345*s45 - 1/2*M6*s12*s345*s45 + 1/2*M6*s12*s45^2 - 1/2*M6*s123*s345^2 + 1/2*M6*s123*s345*s45 + 1/4*m3^2*m6^2 + 1/2*m3*m6*s12*s45 - 1/2*m3*m6*s123*s345 + 1/4*s12^2*s45^2 + 1/2*s12*s123*s345*s45 + 1/4*s123^2*s345^2
codim: 3, face: 40/50, weights: [0, -1, 0, -1, -1, -1], discriminant: M2^2*M5^2 - 2*M2^2*M5*M6 + M2^2*M5*m5 + M2^2*M5*m6 + M2^2*M5*s56 + M2^2*M6^2 - M2^2*M6*m5 + M2^2*M6*m6 - M2^2*M6*s56 + 1/4*M2^2*m5^2 + 1/2*M2^2*m5*m6 + 1/2*M2^2*m5*s56 + 1/4*M2^2*m6^2 - 1/2*M2^2*m6*s56 + 1/4*M2^2*s56^2 - 2*M2*M4*M5^2 + 4*M2*M4*M5*M6 - M2*M4*M5*m5 - 2*M2*M4*M5*m6 + M2*M4*M5*s12 - M2*M4*M5*s345 - M2*M4*M5*s56 - 2*M2*M4*M6^2 + M2*M4*M6*m5 - 2*M2*M4*M6*m6 - M2*M4*M6*s12 + M2*M4*M6*s345 + M2*M4*M6*s56 - 1/2*M2*M4*m5*m6 + 1/2*M2*M4*m5*s12 - 1/2*M2*M4*m5*s345 - 1/2*M2*M4*m6^2 - 1/2*M2*M4*m6*s12 + M2*M4*m6*s34 - 1/2*M2*M4*m6*s345 + 1/2*M2*M4*m6*s56 + 1/2*M2*M4*s12*s56 - 1/2*M2*M4*s345*s56 + M2*M5^2*s12 + M2*M5^2*s34 + M2*M5^2*s56 + M2*M5*M6*m5 - M2*M5*M6*s12 - 2*M2*M5*M6*s34 - M2*M5*M6*s345 - M2*M5*M6*s56 + 3/2*M2*M5*m5*s12 + 1/2*M2*M5*m5*s34 + 3/2*M2*M5*m5*s56 + 1/2*M2*M5*m6*s12 + 3/2*M2*M5*m6*s34 + 1/2*M2*M5*m6*s56 + 3/2*M2*M5*s12*s56 + 1/2*M2*M5*s34*s56 + 3/2*M2*M5*s56^2 - M2*M6^2*m5 + M2*M6^2*s34 + M2*M6^2*s345 + 3/2*M2*M6*m5^2 - 1/2*M2*M6*m5*m6 - 1/2*M2*M6*m5*s34 - 3/2*M2*M6*m5*s345 + 3/2*M2*M6*m5*s56 + 3/2*M2*M6*m6*s34 + 1/2*M2*M6*m6*s345 - 1/2*M2*M6*s34*s56 - 3/2*M2*M6*s345*s56 + 1/2*M2*m5^2*s12 + 1/2*M2*m5*m6*s12 + 1/2*M2*m5*m6*s34 + M2*m5*m6*s56 + 1/2*M2*m5*s12*s56 + 1/2*M2*m5*s345*s56 + 1/2*M2*m6^2*s34 - 1/2*M2*m6*s34*s56 - 1/2*M2*m6*s345*s56 + 1/2*M2*s345*s56^2 + M4^2*M5^2 - 2*M4^2*M5*M6 + M4^2*M5*m6 - M4^2*M5*s12 + M4^2*M5*s345 + M4^2*M6^2 + M4^2*M6*m6 + M4^2*M6*s12 - M4^2*M6*s345 + 1/4*M4^2*m6^2 + 1/2*M4^2*m6*s12 + 1/2*M4^2*m6*s345 + 1/4*M4^2*s12^2 - 1/2*M4^2*s12*s345 + 1/4*M4^2*s345^2 - M4*M5^2*s12 + M4*M5^2*s34 - M4*M5^2*s56 - M4*M5*M6*m5 + M4*M5*M6*s12 - 2*M4*M5*M6*s34 + M4*M5*M6*s345 + M4*M5*M6*s56 - 1/2*M4*M5*m6*s12 + 3/2*M4*M5*m6*s34 - 1/2*M4*M5*m6*s56 + 3/2*M4*M5*s12^2 - 1/2*M4*M5*s12*s34 - 3/2*M4*M5*s12*s345 + 3/2*M4*M5*s12*s56 + 1/2*M4*M5*s34*s345 - 3/2*M4*M5*s345*s56 + M4*M6^2*m5 + M4*M6^2*s34 - M4*M6^2*s345 + 1/2*M4*M6*m5*m6 + 3/2*M4*M6*m5*s12 - 3/2*M4*M6*m5*s345 + 3/2*M4*M6*m6*s34 - 1/2*M4*M6*m6*s345 + 1/2*M4*M6*s12*s34 - 3/2*M4*M6*s12*s345 - 1/2*M4*M6*s34*s345 + 3/2*M4*M6*s345^2 + 1/2*M4*m5*m6*s12 + 1/2*M4*m5*s12^2 - 1/2*M4*m5*s12*s345 + 1/2*M4*m6^2*s34 + 1/2*M4*m6*s12*s34 - M4*m6*s12*s345 + 1/2*M4*m6*s34*s345 - 1/2*M4*m6*s345*s56 + 1/2*M4*s12*s345*s56 - 1/2*M4*s345^2*s56 + 1/4*M5^2*s12^2 + 1/2*M5^2*s12*s34 + 1/2*M5^2*s12*s56 + 1/4*M5^2*s34^2 - 1/2*M5^2*s34*s56 + 1/4*M5^2*s56^2 + 1/2*M5*M6*m5*s12 - 1/2*M5*M6*m5*s34 + 1/2*M5*M6*m5*s56 + M5*M6*m6*s34 - 1/2*M5*M6*s12*s34 - 1/2*M5*M6*s12*s345 - 1/2*M5*M6*s34^2 - 1/2*M5*M6*s34*s345 + 1/2*M5*M6*s34*s56 - 1/2*M5*M6*s345*s56 + 1/2*M5*m5*s12^2 + 1/2*M5*m5*s12*s34 + 1/2*M5*m5*s12*s56 + 1/2*M5*m6*s12*s34 + 1/2*M5*m6*s34^2 - 1/2*M5*m6*s34*s56 + M5*s12*s34*s56 + 1/2*M5*s12*s345*s56 - 1/2*M5*s34*s345*s56 + 1/2*M5*s345*s56^2 + 1/4*M6^2*m5^2 + 1/2*M6^2*m5*s34 - 1/2*M6^2*m5*s345 + 1/4*M6^2*s34^2 + 1/2*M6^2*s34*s345 + 1/4*M6^2*s345^2 + 1/2*M6*m5^2*s12 + 1/2*M6*m5*m6*s34 + 1/2*M6*m5*s12*s34 - 1/2*M6*m5*s12*s345 - M6*m5*s34*s345 + 1/2*M6*m5*s345*s56 + 1/2*M6*m6*s34^2 + 1/2*M6*m6*s34*s345 - 1/2*M6*s34*s345*s56 - 1/2*M6*s345^2*s56 + 1/4*m5^2*s12^2 + 1/2*m5*m6*s12*s34 + 1/2*m5*s12*s345*s56 + 1/4*m6^2*s34^2 - 1/2*m6*s34*s345*s56 + 1/4*s345^2*s56^2
codim: 3, face: 41/50, weights: [2, 1, 1, 1, 1, 2], discriminant: 1
codim: 3, face: 42/50, weights: [2, 1, 1, 1, 2, 1], discriminant: 1
codim: 3, face: 43/50, weights: [2, 1, 1, 2, 1, 1], discriminant: 1
codim: 3, face: 44/50, weights: [2, 1, 2, 1, 1, 1], discriminant: 1
codim: 3, face: 45/50, weights: [1, 1, 0, 0, 0, 1], discriminant: m4^2 - 2*m4*m5 + m4*s45 - 2*m5^2 - 2*m5*s45 + s45^2
codim: 3, face: 46/50, weights: [1, 1, 0, 0, 1, 0], discriminant: m4^2 - 2*m4*s123 + m4*s56 - 2*s123^2 - 2*s123*s56 + s56^2
codim: 3, face: 47/50, weights: [1, 1, 0, 1, 0, 0], discriminant: m6^2 - 2*m6*s123 + m6*s45 - 2*s123^2 - 2*s123*s45 + s45^2
codim: 3, face: 48/50, weights: [0, 0, -1, -1, -1, -1], discriminant: M3^2*M5^2 - 2*M3^2*M5*M6 + M3^2*M5*m5 + M3^2*M5*m6 + M3^2*M5*s56 + M3^2*M6^2 - M3^2*M6*m5 + M3^2*M6*m6 - M3^2*M6*s56 + 1/4*M3^2*m5^2 + 1/2*M3^2*m5*m6 + 1/2*M3^2*m5*s56 + 1/4*M3^2*m6^2 - 1/2*M3^2*m6*s56 + 1/4*M3^2*s56^2 - 2*M3*M4*M5^2 + 4*M3*M4*M5*M6 - M3*M4*M5*m5 - 2*M3*M4*M5*m6 + M3*M4*M5*s123 - M3*M4*M5*s45 - M3*M4*M5*s56 - 2*M3*M4*M6^2 + M3*M4*M6*m5 - 2*M3*M4*M6*m6 - M3*M4*M6*s123 + M3*M4*M6*s45 + M3*M4*M6*s56 + M3*M4*m4*m6 - 1/2*M3*M4*m5*m6 + 1/2*M3*M4*m5*s123 - 1/2*M3*M4*m5*s45 - 1/2*M3*M4*m6^2 - 1/2*M3*M4*m6*s123 - 1/2*M3*M4*m6*s45 + 1/2*M3*M4*m6*s56 + 1/2*M3*M4*s123*s56 - 1/2*M3*M4*s45*s56 + M3*M5^2*m4 + M3*M5^2*s123 + M3*M5^2*s56 - 2*M3*M5*M6*m4 + M3*M5*M6*m5 - M3*M5*M6*s123 - M3*M5*M6*s45 - M3*M5*M6*s56 + 1/2*M3*M5*m4*m5 + 3/2*M3*M5*m4*m6 + 1/2*M3*M5*m4*s56 + 3/2*M3*M5*m5*s123 + 3/2*M3*M5*m5*s56 + 1/2*M3*M5*m6*s123 + 1/2*M3*M5*m6*s56 + 3/2*M3*M5*s123*s56 + 3/2*M3*M5*s56^2 + M3*M6^2*m4 - M3*M6^2*m5 + M3*M6^2*s45 - 1/2*M3*M6*m4*m5 + 3/2*M3*M6*m4*m6 - 1/2*M3*M6*m4*s56 + 3/2*M3*M6*m5^2 - 1/2*M3*M6*m5*m6 - 3/2*M3*M6*m5*s45 + 3/2*M3*M6*m5*s56 + 1/2*M3*M6*m6*s45 - 3/2*M3*M6*s45*s56 + 1/2*M3*m4*m5*m6 + 1/2*M3*m4*m6^2 - 1/2*M3*m4*m6*s56 + 1/2*M3*m5^2*s123 + 1/2*M3*m5*m6*s123 + M3*m5*m6*s56 + 1/2*M3*m5*s123*s56 + 1/2*M3*m5*s45*s56 - 1/2*M3*m6*s45*s56 + 1/2*M3*s45*s56^2 + M4^2*M5^2 - 2*M4^2*M5*M6 + M4^2*M5*m6 - M4^2*M5*s123 + M4^2*M5*s45 + M4^2*M6^2 + M4^2*M6*m6 + M4^2*M6*s123 - M4^2*M6*s45 + 1/4*M4^2*m6^2 + 1/2*M4^2*m6*s123 + 1/2*M4^2*m6*s45 + 1/4*M4^2*s123^2 - 1/2*M4^2*s123*s45 + 1/4*M4^2*s45^2 + M4*M5^2*m4 - M4*M5^2*s123 - M4*M5^2*s56 - 2*M4*M5*M6*m4 - M4*M5*M6*m5 + M4*M5*M6*s123 + M4*M5*M6*s45 + M4*M5*M6*s56 + 3/2*M4*M5*m4*m6 - 1/2*M4*M5*m4*s123 + 1/2*M4*M5*m4*s45 - 1/2*M4*M5*m6*s123 - 1/2*M4*M5*m6*s56 + 3/2*M4*M5*s123^2 - 3/2*M4*M5*s123*s45 + 3/2*M4*M5*s123*s56 - 3/2*M4*M5*s45*s56 + M4*M6^2*m4 + M4*M6^2*m5 - M4*M6^2*s45 + 3/2*M4*M6*m4*m6 + 1/2*M4*M6*m4*s123 - 1/2*M4*M6*m4*s45 + 1/2*M4*M6*m5*m6 + 3/2*M4*M6*m5*s123 - 3/2*M4*M6*m5*s45 - 1/2*M4*M6*m6*s45 - 3/2*M4*M6*s123*s45 + 3/2*M4*M6*s45^2 + 1/2*M4*m4*m6^2 + 1/2*M4*m4*m6*s123 + 1/2*M4*m4*m6*s45 + 1/2*M4*m5*m6*s123 + 1/2*M4*m5*s123^2 - 1/2*M4*m5*s123*s45 - M4*m6*s123*s45 - 1/2*M4*m6*s45*s56 + 1/2*M4*s123*s45*s56 - 1/2*M4*s45^2*s56 + 1/4*M5^2*m4^2 + 1/2*M5^2*m4*s123 - 1/2*M5^2*m4*s56 + 1/4*M5^2*s123^2 + 1/2*M5^2*s123*s56 + 1/4*M5^2*s56^2 - 1/2*M5*M6*m4^2 - 1/2*M5*M6*m4*m5 + M5*M6*m4*m6 - 1/2*M5*M6*m4*s123 - 1/2*M5*M6*m4*s45 + 1/2*M5*M6*m4*s56 + 1/2*M5*M6*m5*s123 + 1/2*M5*M6*m5*s56 - 1/2*M5*M6*s123*s45 - 1/2*M5*M6*s45*s56 + 1/2*M5*m4^2*m6 + 1/2*M5*m4*m5*s123 + 1/2*M5*m4*m6*s123 - 1/2*M5*m4*m6*s56 + M5*m4*s123*s56 - 1/2*M5*m4*s45*s56 + 1/2*M5*m5*s123^2 + 1/2*M5*m5*s123*s56 + 1/2*M5*s123*s45*s56 + 1/2*M5*s45*s56^2 + 1/4*M6^2*m4^2 + 1/2*M6^2*m4*m5 + 1/2*M6^2*m4*s45 + 1/4*M6^2*m5^2 - 1/2*M6^2*m5*s45 + 1/4*M6^2*s45^2 + 1/2*M6*m4^2*m6 + 1/2*M6*m4*m5*m6 + 1/2*M6*m4*m5*s123 - M6*m4*m5*s45 + 1/2*M6*m4*m6*s45 - 1/2*M6*m4*s45*s56 + 1/2*M6*m5^2*s123 - 1/2*M6*m5*s123*s45 + 1/2*M6*m5*s45*s56 - 1/2*M6*s45^2*s56 + 1/4*m4^2*m6^2 + 1/2*m4*m5*m6*s123 - 1/2*m4*m6*s45*s56 + 1/4*m5^2*s123^2 + 1/2*m5*s123*s45*s56 + 1/4*s45^2*s56^2
codim: 3, face: 49/50, weights: [2, 2, 1, 1, 1, 1], discriminant: 1
codim: 3, face: 50/50, weights: [1, 1, 1, 0, 0, 0], discriminant: m5^2 - 2*m5*m6 + m5*s56 - 2*m6^2 - 2*m6*s56 + s56^2
codim: 2, face: 1/27, weights: [0, 0, 0, 0, 1, 1], discriminant: M1*M3^2 + M1*M3*m3 + M1*M3*m4 + M1*M3*s34 + 1/4*M1*m3^2 + 1/2*M1*m3*m4 + 1/2*M1*m3*s34 + 1/4*M1*m4^2 - 1/2*M1*m4*s34 + 1/4*M1*s34^2 + 1/2*M2^2*m4 + 1/2*M2*M3*m4 - 1/2*M2*M3*s23 + 1/2*M2*M3*s234 + 1/2*M2*m2*m4 + 1/4*M2*m3*m4 - 1/4*M2*m3*s23 + 1/4*M2*m3*s234 + 1/4*M2*m4^2 - 1/4*M2*m4*s23 - 1/4*M2*m4*s234 - 1/4*M2*m4*s34 - 1/4*M2*s23*s34 + 1/4*M2*s234*s34 + 1/2*M3^2*s234 + 1/4*M3*m2*m4 - 1/4*M3*m2*s23 + 1/4*M3*m2*s234 + 1/2*M3*m3*s234 + 1/4*M3*m4*s234 - 1/4*M3*m4*s34 + 1/4*M3*s23*s234 + 1/4*M3*s23*s34 - 1/4*M3*s234^2 + 1/4*M3*s234*s34 + 1/8*m2^2*m4 + 1/8*m2*m3*m4 - 1/8*m2*m3*s23 + 1/8*m2*m3*s234 + 1/8*m2*m4^2 - 1/8*m2*m4*s23 - 1/8*m2*m4*s234 - 1/8*m2*m4*s34 - 1/8*m2*s23*s34 + 1/8*m2*s234*s34 + 1/8*m3^2*s234 + 1/8*m3*m4*s234 - 1/8*m3*m4*s34 + 1/8*m3*s23*s234 + 1/8*m3*s23*s34 - 1/8*m3*s234^2 + 1/8*m3*s234*s34 + 1/8*m4*s23*s234 - 1/8*m4*s23*s34 + 1/8*s23^2*s34 - 1/8*s23*s234*s34 + 1/8*s23*s34^2
codim: 2, face: 2/27, weights: [0, 0, 0, 1, 0, 1], discriminant: M1*M3^2 + M1*M3*m3 + M1*M3*s345 + M1*M3*s45 + 1/4*M1*m3^2 + 1/2*M1*m3*s345 + 1/2*M1*m3*s45 + 1/4*M1*s345^2 - 1/2*M1*s345*s45 + 1/4*M1*s45^2 + 1/2*M2^2*s45 - 1/2*M2*M3*s23 + 1/2*M2*M3*s45 + 1/2*M2*M3*s61 + 1/2*M2*m2*s45 - 1/4*M2*m3*s23 + 1/4*M2*m3*s45 + 1/4*M2*m3*s61 - 1/4*M2*s23*s345 - 1/4*M2*s23*s45 - 1/4*M2*s345*s45 + 1/4*M2*s345*s61 + 1/4*M2*s45^2 - 1/4*M2*s45*s61 + 1/2*M3^2*s61 - 1/4*M3*m2*s23 + 1/4*M3*m2*s45 + 1/4*M3*m2*s61 + 1/2*M3*m3*s61 + 1/4*M3*s23*s345 + 1/4*M3*s23*s61 - 1/4*M3*s345*s45 + 1/4*M3*s345*s61 + 1/4*M3*s45*s61 - 1/4*M3*s61^2 + 1/8*m2^2*s45 - 1/8*m2*m3*s23 + 1/8*m2*m3*s45 + 1/8*m2*m3*s61 - 1/8*m2*s23*s345 - 1/8*m2*s23*s45 - 1/8*m2*s345*s45 + 1/8*m2*s345*s61 + 1/8*m2*s45^2 - 1/8*m2*s45*s61 + 1/8*m3^2*s61 + 1/8*m3*s23*s345 + 1/8*m3*s23*s61 - 1/8*m3*s345*s45 + 1/8*m3*s345*s61 + 1/8*m3*s45*s61 - 1/8*m3*s61^2 + 1/8*s23^2*s345 + 1/8*s23*s345^2 - 1/8*s23*s345*s45 - 1/8*s23*s345*s61 + 1/8*s23*s45*s61
codim: 2, face: 3/27, weights: [0, 0, 0, 1, 1, 0], discriminant: M1*M3^2 + M1*M3*m3 + M1*M3*s12 + M1*M3*s123 + 1/4*M1*m3^2 + 1/2*M1*m3*s12 + 1/2*M1*m3*s123 + 1/4*M1*s12^2 - 1/2*M1*s12*s123 + 1/4*M1*s123^2 + 1/2*M2^2*s123 + 1/2*M2*M3*m1 + 1/2*M2*M3*s123 - 1/2*M2*M3*s23 + 1/4*M2*m1*m3 + 1/4*M2*m1*s12 - 1/4*M2*m1*s123 + 1/2*M2*m2*s123 + 1/4*M2*m3*s123 - 1/4*M2*m3*s23 - 1/4*M2*s12*s123 - 1/4*M2*s12*s23 + 1/4*M2*s123^2 - 1/4*M2*s123*s23 + 1/2*M3^2*m1 - 1/4*M3*m1^2 + 1/4*M3*m1*m2 + 1/2*M3*m1*m3 + 1/4*M3*m1*s12 + 1/4*M3*m1*s123 + 1/4*M3*m1*s23 + 1/4*M3*m2*s123 - 1/4*M3*m2*s23 - 1/4*M3*s12*s123 + 1/4*M3*s12*s23 - 1/8*m1^2*m3 + 1/8*m1*m2*m3 + 1/8*m1*m2*s12 - 1/8*m1*m2*s123 + 1/8*m1*m3^2 + 1/8*m1*m3*s12 + 1/8*m1*m3*s123 + 1/8*m1*m3*s23 - 1/8*m1*s12*s23 + 1/8*m1*s123*s23 + 1/8*m2^2*s123 + 1/8*m2*m3*s123 - 1/8*m2*m3*s23 - 1/8*m2*s12*s123 - 1/8*m2*s12*s23 + 1/8*m2*s123^2 - 1/8*m2*s123*s23 - 1/8*m3*s12*s123 + 1/8*m3*s12*s23 + 1/8*s12^2*s23 - 1/8*s12*s123*s23 + 1/8*s12*s23^2
codim: 2, face: 4/27, weights: [0, 0, 1, 0, 0, 1], discriminant: M1*M4^2 + M1*M4*m5 + M1*M4*s34 + M1*M4*s345 + 1/4*M1*m5^2 + 1/2*M1*m5*s34 - 1/2*M1*m5*s345 + 1/4*M1*s34^2 + 1/2*M1*s34*s345 + 1/4*M1*s345^2 + 1/2*M2^2*m5 + 1/2*M2*M4*m5 - 1/2*M2*M4*s234 + 1/2*M2*M4*s61 + 1/2*M2*m2*m5 + 1/4*M2*m5^2 - 1/4*M2*m5*s234 + 1/4*M2*m5*s34 - 1/4*M2*m5*s345 - 1/4*M2*m5*s61 - 1/4*M2*s234*s34 - 1/4*M2*s234*s345 + 1/4*M2*s34*s61 + 1/4*M2*s345*s61 + 1/2*M4^2*s61 + 1/4*M4*m2*m5 - 1/4*M4*m2*s234 + 1/4*M4*m2*s61 - 1/4*M4*m5*s345 + 1/4*M4*m5*s61 + 1/4*M4*s234*s345 + 1/4*M4*s234*s61 + 1/2*M4*s34*s61 + 1/4*M4*s345*s61 - 1/4*M4*s61^2 + 1/8*m2^2*m5 + 1/8*m2*m5^2 - 1/8*m2*m5*s234 + 1/8*m2*m5*s34 - 1/8*m2*m5*s345 - 1/8*m2*m5*s61 - 1/8*m2*s234*s34 - 1/8*m2*s234*s345 + 1/8*m2*s34*s61 + 1/8*m2*s345*s61 - 1/8*m5*s234*s345 + 1/8*m5*s234*s61 - 1/8*m5*s34*s345 + 1/8*m5*s34*s61 + 1/8*s234^2*s345 + 1/8*s234*s34*s345 + 1/8*s234*s34*s61 + 1/8*s234*s345^2 - 1/8*s234*s345*s61 + 1/8*s34^2*s61 + 1/8*s34*s345*s61 - 1/8*s34*s61^2
codim: 2, face: 5/27, weights: [0, 0, 1, 0, 1, 0], discriminant: M1*M4^2 + M1*M4*s12 + M1*M4*s34 + M1*M4*s56 + 1/4*M1*s12^2 + 1/2*M1*s12*s34 - 1/2*M1*s12*s56 + 1/4*M1*s34^2 + 1/2*M1*s34*s56 + 1/4*M1*s56^2 + 1/2*M2^2*s56 + 1/2*M2*M4*m1 - 1/2*M2*M4*s234 + 1/2*M2*M4*s56 + 1/4*M2*m1*s12 + 1/4*M2*m1*s34 - 1/4*M2*m1*s56 + 1/2*M2*m2*s56 - 1/4*M2*s12*s234 - 1/4*M2*s12*s56 - 1/4*M2*s234*s34 - 1/4*M2*s234*s56 + 1/4*M2*s34*s56 + 1/4*M2*s56^2 + 1/2*M4^2*m1 - 1/4*M4*m1^2 + 1/4*M4*m1*m2 + 1/4*M4*m1*s12 + 1/4*M4*m1*s234 + 1/2*M4*m1*s34 + 1/4*M4*m1*s56 - 1/4*M4*m2*s234 + 1/4*M4*m2*s56 + 1/4*M4*s12*s234 - 1/4*M4*s12*s56 - 1/8*m1^2*s34 + 1/8*m1*m2*s12 + 1/8*m1*m2*s34 - 1/8*m1*m2*s56 - 1/8*m1*s12*s234 + 1/8*m1*s12*s34 + 1/8*m1*s234*s34 + 1/8*m1*s234*s56 + 1/8*m1*s34^2 + 1/8*m1*s34*s56 + 1/8*m2^2*s56 - 1/8*m2*s12*s234 - 1/8*m2*s12*s56 - 1/8*m2*s234*s34 - 1/8*m2*s234*s56 + 1/8*m2*s34*s56 + 1/8*m2*s56^2 + 1/8*s12^2*s234 + 1/8*s12*s234^2 + 1/8*s12*s234*s34 - 1/8*s12*s234*s56 - 1/8*s12*s34*s56
codim: 2, face: 6/27, weights: [0, 0, 1, 1, 0, 0], discriminant: M1*M5^2 + M1*M5*m6 + M1*M5*s12 + M1*M5*s345 + 1/4*M1*m6^2 - 1/2*M1*m6*s12 + 1/2*M1*m6*s345 + 1/4*M1*s12^2 + 1/2*M1*s12*s345 + 1/4*M1*s345^2 + 1/2*M2^2*m6 + 1/2*M2*M5*m1 + 1/2*M2*M5*m6 - 1/2*M2*M5*s61 - 1/4*M2*m1*m6 + 1/4*M2*m1*s12 + 1/4*M2*m1*s345 + 1/2*M2*m2*m6 + 1/4*M2*m6^2 - 1/4*M2*m6*s12 + 1/4*M2*m6*s345 - 1/4*M2*m6*s61 - 1/4*M2*s12*s61 - 1/4*M2*s345*s61 + 1/2*M5^2*m1 - 1/4*M5*m1^2 + 1/4*M5*m1*m2 + 1/4*M5*m1*m6 + 1/4*M5*m1*s12 + 1/2*M5*m1*s345 + 1/4*M5*m1*s61 + 1/4*M5*m2*m6 - 1/4*M5*m2*s61 - 1/4*M5*m6*s12 + 1/4*M5*s12*s61 - 1/8*m1^2*s345 - 1/8*m1*m2*m6 + 1/8*m1*m2*s12 + 1/8*m1*m2*s345 + 1/8*m1*m6*s345 + 1/8*m1*m6*s61 + 1/8*m1*s12*s345 - 1/8*m1*s12*s61 + 1/8*m1*s345^2 + 1/8*m1*s345*s61 + 1/8*m2^2*m6 + 1/8*m2*m6^2 - 1/8*m2*m6*s12 + 1/8*m2*m6*s345 - 1/8*m2*m6*s61 - 1/8*m2*s12*s61 - 1/8*m2*s345*s61 - 1/8*m6*s12*s345 - 1/8*m6*s12*s61 + 1/8*s12^2*s61 + 1/8*s12*s345*s61 + 1/8*s12*s61^2
codim: 2, face: 7/27, weights: [0, 1, 0, 0, 0, 1], discriminant: M1*M4^2 + M1*M4*m4 + M1*M4*m5 + M1*M4*s45 + 1/4*M1*m4^2 + 1/2*M1*m4*m5 + 1/2*M1*m4*s45 + 1/4*M1*m5^2 - 1/2*M1*m5*s45 + 1/4*M1*s45^2 + 1/2*M3^2*m5 + 1/2*M3*M4*m5 - 1/2*M3*M4*s234 + 1/2*M3*M4*s61 + 1/4*M3*m4*m5 - 1/4*M3*m4*s234 + 1/4*M3*m4*s61 + 1/4*M3*m5^2 + 1/2*M3*m5*s23 - 1/4*M3*m5*s234 - 1/4*M3*m5*s45 - 1/4*M3*m5*s61 - 1/4*M3*s234*s45 + 1/4*M3*s45*s61 + 1/2*M4^2*s61 + 1/2*M4*m4*s61 + 1/4*M4*m5*s23 - 1/4*M4*m5*s45 + 1/4*M4*m5*s61 - 1/4*M4*s23*s234 + 1/4*M4*s23*s61 + 1/4*M4*s234*s45 + 1/4*M4*s234*s61 + 1/4*M4*s45*s61 - 1/4*M4*s61^2 + 1/8*m4^2*s61 + 1/8*m4*m5*s23 - 1/8*m4*m5*s45 + 1/8*m4*m5*s61 - 1/8*m4*s23*s234 + 1/8*m4*s23*s61 + 1/8*m4*s234*s45 + 1/8*m4*s234*s61 + 1/8*m4*s45*s61 - 1/8*m4*s61^2 + 1/8*m5^2*s23 + 1/8*m5*s23^2 - 1/8*m5*s23*s234 - 1/8*m5*s23*s45 - 1/8*m5*s23*s61 - 1/8*m5*s234*s45 + 1/8*m5*s234*s61 - 1/8*s23*s234*s45 + 1/8*s23*s45*s61 + 1/8*s234^2*s45 + 1/8*s234*s45^2 - 1/8*s234*s45*s61
codim: 2, face: 8/27, weights: [0, 1, 0, 0, 1, 0], discriminant: M1*M4^2 + M1*M4*m4 + M1*M4*s123 + M1*M4*s56 + 1/4*M1*m4^2 + 1/2*M1*m4*s123 + 1/2*M1*m4*s56 + 1/4*M1*s123^2 - 1/2*M1*s123*s56 + 1/4*M1*s56^2 + 1/2*M3^2*s56 + 1/2*M3*M4*m1 - 1/2*M3*M4*s234 + 1/2*M3*M4*s56 + 1/4*M3*m1*m4 + 1/4*M3*m1*s123 - 1/4*M3*m1*s56 - 1/4*M3*m4*s234 + 1/4*M3*m4*s56 - 1/4*M3*s123*s234 - 1/4*M3*s123*s56 + 1/2*M3*s23*s56 - 1/4*M3*s234*s56 + 1/4*M3*s56^2 + 1/2*M4^2*m1 - 1/4*M4*m1^2 + 1/2*M4*m1*m4 + 1/4*M4*m1*s123 + 1/4*M4*m1*s23 + 1/4*M4*m1*s234 + 1/4*M4*m1*s56 + 1/4*M4*s123*s234 - 1/4*M4*s123*s56 - 1/4*M4*s23*s234 + 1/4*M4*s23*s56 - 1/8*m1^2*m4 + 1/8*m1*m4^2 + 1/8*m1*m4*s123 + 1/8*m1*m4*s23 + 1/8*m1*m4*s234 + 1/8*m1*m4*s56 + 1/8*m1*s123*s23 - 1/8*m1*s123*s234 - 1/8*m1*s23*s56 + 1/8*m1*s234*s56 + 1/8*m4*s123*s234 - 1/8*m4*s123*s56 - 1/8*m4*s23*s234 + 1/8*m4*s23*s56 + 1/8*s123^2*s234 - 1/8*s123*s23*s234 - 1/8*s123*s23*s56 + 1/8*s123*s234^2 - 1/8*s123*s234*s56 + 1/8*s23^2*s56 - 1/8*s23*s234*s56 + 1/8*s23*s56^2
codim: 2, face: 9/27, weights: [0, 1, 0, 1, 0, 0], discriminant: M1*M5^2 + M1*M5*m6 + M1*M5*s123 + M1*M5*s45 + 1/4*M1*m6^2 - 1/2*M1*m6*s123 + 1/2*M1*m6*s45 + 1/4*M1*s123^2 + 1/2*M1*s123*s45 + 1/4*M1*s45^2 + 1/2*M3^2*m6 + 1/2*M3*M5*m1 + 1/2*M3*M5*m6 - 1/2*M3*M5*s61 - 1/4*M3*m1*m6 + 1/4*M3*m1*s123 + 1/4*M3*m1*s45 + 1/4*M3*m6^2 - 1/4*M3*m6*s123 + 1/2*M3*m6*s23 + 1/4*M3*m6*s45 - 1/4*M3*m6*s61 - 1/4*M3*s123*s61 - 1/4*M3*s45*s61 + 1/2*M5^2*m1 - 1/4*M5*m1^2 + 1/4*M5*m1*m6 + 1/4*M5*m1*s123 + 1/4*M5*m1*s23 + 1/2*M5*m1*s45 + 1/4*M5*m1*s61 - 1/4*M5*m6*s123 + 1/4*M5*m6*s23 + 1/4*M5*s123*s61 - 1/4*M5*s23*s61 - 1/8*m1^2*s45 - 1/8*m1*m6*s23 + 1/8*m1*m6*s45 + 1/8*m1*m6*s61 + 1/8*m1*s123*s23 + 1/8*m1*s123*s45 - 1/8*m1*s123*s61 + 1/8*m1*s23*s45 + 1/8*m1*s45^2 + 1/8*m1*s45*s61 + 1/8*m6^2*s23 - 1/8*m6*s123*s23 - 1/8*m6*s123*s45 - 1/8*m6*s123*s61 + 1/8*m6*s23^2 + 1/8*m6*s23*s45 - 1/8*m6*s23*s61 + 1/8*s123^2*s61 - 1/8*s123*s23*s61 + 1/8*s123*s45*s61 + 1/8*s123*s61^2 - 1/8*s23*s45*s61
codim: 2, face: 10/27, weights: [0, 1, 1, 0, 0, 0], discriminant: M1*M5^2 + M1*M5*m5 + M1*M5*m6 + M1*M5*s56 + 1/4*M1*m5^2 + 1/2*M1*m5*m6 + 1/2*M1*m5*s56 + 1/4*M1*m6^2 - 1/2*M1*m6*s56 + 1/4*M1*s56^2 + 1/2*M4^2*m6 + 1/2*M4*M5*m1 + 1/2*M4*M5*m6 - 1/2*M4*M5*s61 + 1/4*M4*m1*m5 - 1/4*M4*m1*m6 + 1/4*M4*m1*s56 + 1/4*M4*m5*m6 - 1/4*M4*m5*s61 + 1/4*M4*m6^2 + 1/2*M4*m6*s234 - 1/4*M4*m6*s56 - 1/4*M4*m6*s61 - 1/4*M4*s56*s61 + 1/2*M5^2*m1 - 1/4*M5*m1^2 + 1/2*M5*m1*m5 + 1/4*M5*m1*m6 + 1/4*M5*m1*s234 + 1/4*M5*m1*s56 + 1/4*M5*m1*s61 + 1/4*M5*m6*s234 - 1/4*M5*m6*s56 - 1/4*M5*s234*s61 + 1/4*M5*s56*s61 - 1/8*m1^2*m5 + 1/8*m1*m5^2 + 1/8*m1*m5*m6 + 1/8*m1*m5*s234 + 1/8*m1*m5*s56 + 1/8*m1*m5*s61 - 1/8*m1*m6*s234 + 1/8*m1*m6*s61 + 1/8*m1*s234*s56 - 1/8*m1*s56*s61 + 1/8*m5*m6*s234 - 1/8*m5*m6*s56 - 1/8*m5*s234*s61 + 1/8*m5*s56*s61 + 1/8*m6^2*s234 + 1/8*m6*s234^2 - 1/8*m6*s234*s56 - 1/8*m6*s234*s61 - 1/8*m6*s56*s61 - 1/8*s234*s56*s61 + 1/8*s56^2*s61 + 1/8*s56*s61^2
codim: 2, face: 11/27, weights: [-1, -1, -1, -1, -1, 0], discriminant: 1
codim: 2, face: 12/27, weights: [-1, -1, -1, -1, 0, -1], discriminant: 1
codim: 2, face: 13/27, weights: [-1, -1, -1, 0, -1, -1], discriminant: 1
codim: 2, face: 14/27, weights: [-1, -1, 0, -1, -1, -1], discriminant: 1
codim: 2, face: 15/27, weights: [-1, 0, -1, -1, -1, -1], discriminant: 1
codim: 2, face: 16/27, weights: [1, 1, 1, 1, 1, 2], discriminant: 1
codim: 2, face: 17/27, weights: [1, 1, 1, 1, 2, 1], discriminant: 1
codim: 2, face: 18/27, weights: [1, 1, 1, 2, 1, 1], discriminant: 1
codim: 2, face: 19/27, weights: [1, 1, 2, 1, 1, 1], discriminant: 1
codim: 2, face: 20/27, weights: [1, 2, 1, 1, 1, 1], discriminant: 1
codim: 2, face: 21/27, weights: [1, 0, 0, 0, 0, 1], discriminant: M2*M4^2 + M2*M4*m4 + M2*M4*m5 + M2*M4*s45 + 1/4*M2*m4^2 + 1/2*M2*m4*m5 + 1/2*M2*m4*s45 + 1/4*M2*m5^2 - 1/2*M2*m5*s45 + 1/4*M2*s45^2 + 1/2*M3^2*m5 + 1/2*M3*M4*m5 - 1/2*M3*M4*s34 + 1/2*M3*M4*s345 + 1/2*M3*m3*m5 + 1/4*M3*m4*m5 - 1/4*M3*m4*s34 + 1/4*M3*m4*s345 + 1/4*M3*m5^2 - 1/4*M3*m5*s34 - 1/4*M3*m5*s345 - 1/4*M3*m5*s45 - 1/4*M3*s34*s45 + 1/4*M3*s345*s45 + 1/2*M4^2*s345 + 1/4*M4*m3*m5 - 1/4*M4*m3*s34 + 1/4*M4*m3*s345 + 1/2*M4*m4*s345 + 1/4*M4*m5*s345 - 1/4*M4*m5*s45 + 1/4*M4*s34*s345 + 1/4*M4*s34*s45 - 1/4*M4*s345^2 + 1/4*M4*s345*s45 + 1/8*m3^2*m5 + 1/8*m3*m4*m5 - 1/8*m3*m4*s34 + 1/8*m3*m4*s345 + 1/8*m3*m5^2 - 1/8*m3*m5*s34 - 1/8*m3*m5*s345 - 1/8*m3*m5*s45 - 1/8*m3*s34*s45 + 1/8*m3*s345*s45 + 1/8*m4^2*s345 + 1/8*m4*m5*s345 - 1/8*m4*m5*s45 + 1/8*m4*s34*s345 + 1/8*m4*s34*s45 - 1/8*m4*s345^2 + 1/8*m4*s345*s45 + 1/8*m5*s34*s345 - 1/8*m5*s34*s45 + 1/8*s34^2*s45 - 1/8*s34*s345*s45 + 1/8*s34*s45^2
codim: 2, face: 22/27, weights: [1, 0, 0, 0, 1, 0], discriminant: M2*M4^2 + M2*M4*m4 + M2*M4*s123 + M2*M4*s56 + 1/4*M2*m4^2 + 1/2*M2*m4*s123 + 1/2*M2*m4*s56 + 1/4*M2*s123^2 - 1/2*M2*s123*s56 + 1/4*M2*s56^2 + 1/2*M3^2*s56 + 1/2*M3*M4*s12 - 1/2*M3*M4*s34 + 1/2*M3*M4*s56 + 1/2*M3*m3*s56 + 1/4*M3*m4*s12 - 1/4*M3*m4*s34 + 1/4*M3*m4*s56 + 1/4*M3*s12*s123 - 1/4*M3*s12*s56 - 1/4*M3*s123*s34 - 1/4*M3*s123*s56 - 1/4*M3*s34*s56 + 1/4*M3*s56^2 + 1/2*M4^2*s12 + 1/4*M4*m3*s12 - 1/4*M4*m3*s34 + 1/4*M4*m3*s56 + 1/2*M4*m4*s12 - 1/4*M4*s12^2 + 1/4*M4*s12*s123 + 1/4*M4*s12*s34 + 1/4*M4*s12*s56 + 1/4*M4*s123*s34 - 1/4*M4*s123*s56 + 1/8*m3^2*s56 + 1/8*m3*m4*s12 - 1/8*m3*m4*s34 + 1/8*m3*m4*s56 + 1/8*m3*s12*s123 - 1/8*m3*s12*s56 - 1/8*m3*s123*s34 - 1/8*m3*s123*s56 - 1/8*m3*s34*s56 + 1/8*m3*s56^2 + 1/8*m4^2*s12 - 1/8*m4*s12^2 + 1/8*m4*s12*s123 + 1/8*m4*s12*s34 + 1/8*m4*s12*s56 + 1/8*m4*s123*s34 - 1/8*m4*s123*s56 - 1/8*s12*s123*s34 + 1/8*s12*s34*s56 + 1/8*s123^2*s34 + 1/8*s123*s34^2 - 1/8*s123*s34*s56
codim: 2, face: 23/27, weights: [1, 0, 0, 1, 0, 0], discriminant: M2*M5^2 + M2*M5*m6 + M2*M5*s123 + M2*M5*s45 + 1/4*M2*m6^2 - 1/2*M2*m6*s123 + 1/2*M2*m6*s45 + 1/4*M2*s123^2 + 1/2*M2*s123*s45 + 1/4*M2*s45^2 + 1/2*M3^2*m6 + 1/2*M3*M5*m6 + 1/2*M3*M5*s12 - 1/2*M3*M5*s345 + 1/2*M3*m3*m6 + 1/4*M3*m6^2 - 1/4*M3*m6*s12 - 1/4*M3*m6*s123 - 1/4*M3*m6*s345 + 1/4*M3*m6*s45 + 1/4*M3*s12*s123 + 1/4*M3*s12*s45 - 1/4*M3*s123*s345 - 1/4*M3*s345*s45 + 1/2*M5^2*s12 + 1/4*M5*m3*m6 + 1/4*M5*m3*s12 - 1/4*M5*m3*s345 + 1/4*M5*m6*s12 - 1/4*M5*m6*s123 - 1/4*M5*s12^2 + 1/4*M5*s12*s123 + 1/4*M5*s12*s345 + 1/2*M5*s12*s45 + 1/4*M5*s123*s345 + 1/8*m3^2*m6 + 1/8*m3*m6^2 - 1/8*m3*m6*s12 - 1/8*m3*m6*s123 - 1/8*m3*m6*s345 + 1/8*m3*m6*s45 + 1/8*m3*s12*s123 + 1/8*m3*s12*s45 - 1/8*m3*s123*s345 - 1/8*m3*s345*s45 + 1/8*m6*s12*s345 + 1/8*m6*s12*s45 - 1/8*m6*s123*s345 - 1/8*m6*s123*s45 - 1/8*s12^2*s45 - 1/8*s12*s123*s345 + 1/8*s12*s123*s45 + 1/8*s12*s345*s45 + 1/8*s12*s45^2 + 1/8*s123^2*s345 + 1/8*s123*s345^2 + 1/8*s123*s345*s45
codim: 2, face: 24/27, weights: [1, 0, 1, 0, 0, 0], discriminant: M2*M5^2 + M2*M5*m5 + M2*M5*m6 + M2*M5*s56 + 1/4*M2*m5^2 + 1/2*M2*m5*m6 + 1/2*M2*m5*s56 + 1/4*M2*m6^2 - 1/2*M2*m6*s56 + 1/4*M2*s56^2 + 1/2*M4^2*m6 + 1/2*M4*M5*m6 + 1/2*M4*M5*s12 - 1/2*M4*M5*s345 + 1/4*M4*m5*m6 + 1/4*M4*m5*s12 - 1/4*M4*m5*s345 + 1/4*M4*m6^2 - 1/4*M4*m6*s12 + 1/2*M4*m6*s34 - 1/4*M4*m6*s345 - 1/4*M4*m6*s56 + 1/4*M4*s12*s56 - 1/4*M4*s345*s56 + 1/2*M5^2*s12 + 1/2*M5*m5*s12 + 1/4*M5*m6*s12 + 1/4*M5*m6*s34 - 1/4*M5*m6*s56 - 1/4*M5*s12^2 + 1/4*M5*s12*s34 + 1/4*M5*s12*s345 + 1/4*M5*s12*s56 - 1/4*M5*s34*s345 + 1/4*M5*s345*s56 + 1/8*m5^2*s12 + 1/8*m5*m6*s12 + 1/8*m5*m6*s34 - 1/8*m5*m6*s56 - 1/8*m5*s12^2 + 1/8*m5*s12*s34 + 1/8*m5*s12*s345 + 1/8*m5*s12*s56 - 1/8*m5*s34*s345 + 1/8*m5*s345*s56 + 1/8*m6^2*s34 - 1/8*m6*s12*s34 + 1/8*m6*s12*s345 + 1/8*m6*s34^2 - 1/8*m6*s34*s345 - 1/8*m6*s34*s56 - 1/8*m6*s345*s56 + 1/8*s12*s34*s56 - 1/8*s12*s345*s56 - 1/8*s34*s345*s56 + 1/8*s345^2*s56 + 1/8*s345*s56^2
codim: 2, face: 25/27, weights: [0, -1, -1, -1, -1, -1], discriminant: 1
codim: 2, face: 26/27, weights: [2, 1, 1, 1, 1, 1], discriminant: 1
codim: 2, face: 27/27, weights: [1, 1, 0, 0, 0, 0], discriminant: M3*M5^2 + M3*M5*m5 + M3*M5*m6 + M3*M5*s56 + 1/4*M3*m5^2 + 1/2*M3*m5*m6 + 1/2*M3*m5*s56 + 1/4*M3*m6^2 - 1/2*M3*m6*s56 + 1/4*M3*s56^2 + 1/2*M4^2*m6 + 1/2*M4*M5*m6 + 1/2*M4*M5*s123 - 1/2*M4*M5*s45 + 1/2*M4*m4*m6 + 1/4*M4*m5*m6 + 1/4*M4*m5*s123 - 1/4*M4*m5*s45 + 1/4*M4*m6^2 - 1/4*M4*m6*s123 - 1/4*M4*m6*s45 - 1/4*M4*m6*s56 + 1/4*M4*s123*s56 - 1/4*M4*s45*s56 + 1/2*M5^2*s123 + 1/4*M5*m4*m6 + 1/4*M5*m4*s123 - 1/4*M5*m4*s45 + 1/2*M5*m5*s123 + 1/4*M5*m6*s123 - 1/4*M5*m6*s56 - 1/4*M5*s123^2 + 1/4*M5*s123*s45 + 1/4*M5*s123*s56 + 1/4*M5*s45*s56 + 1/8*m4^2*m6 + 1/8*m4*m5*m6 + 1/8*m4*m5*s123 - 1/8*m4*m5*s45 + 1/8*m4*m6^2 - 1/8*m4*m6*s123 - 1/8*m4*m6*s45 - 1/8*m4*m6*s56 + 1/8*m4*s123*s56 - 1/8*m4*s45*s56 + 1/8*m5^2*s123 + 1/8*m5*m6*s123 - 1/8*m5*m6*s56 - 1/8*m5*s123^2 + 1/8*m5*s123*s45 + 1/8*m5*s123*s56 + 1/8*m5*s45*s56 + 1/8*m6*s123*s45 - 1/8*m6*s45*s56 - 1/8*s123*s45*s56 + 1/8*s45^2*s56 + 1/8*s45*s56^2
codim: 1, face: 1/8, weights: [0, 0, 0, 0, 0, 1], discriminant: M1^2*m4^2 - 2*M1^2*m4*m5 - 2*M1^2*m4*s45 + M1^2*m5^2 - 2*M1^2*m5*s45 + M1^2*s45^2 - 2*M1*M2*m4^2 + 4*M1*M2*m4*m5 + 4*M1*M2*m4*s45 - 2*M1*M2*m5^2 + 4*M1*M2*m5*s45 - 2*M1*M2*s45^2 + M1*m2*m4^2 - 2*M1*m2*m4*m5 - 2*M1*m2*m4*s45 + M1*m2*m5^2 - 2*M1*m2*m5*s45 + M1*m2*s45^2 - 2*M1*m3^2*m5 + M1*m3*m4*m5 + M1*m3*m4*s234 - 2*M1*m3*m4*s34 + 2*M1*m3*m4*s345 - M1*m3*m4*s61 - M1*m3*m5^2 + 2*M1*m3*m5*s23 - M1*m3*m5*s234 + 2*M1*m3*m5*s34 + 2*M1*m3*m5*s345 + M1*m3*m5*s45 - M1*m3*m5*s61 - M1*m3*s234*s45 + 2*M1*m3*s34*s45 - 2*M1*m3*s345*s45 + M1*m3*s45*s61 - M1*m4^2*s345 + M1*m4^2*s61 - M1*m4*m5*s23 + M1*m4*m5*s345 - M1*m4*m5*s61 + M1*m4*s23*s34 - M1*m4*s23*s345 - M1*m4*s234*s345 - M1*m4*s234*s45 + 2*M1*m4*s34*s345 + M1*m4*s34*s45 - M1*m4*s34*s61 - 2*M1*m4*s345^2 + M1*m4*s345*s45 + 2*M1*m4*s345*s61 - M1*m4*s45*s61 + M1*m5^2*s23 - M1*m5*s23*s34 - M1*m5*s23*s345 - M1*m5*s23*s45 + M1*m5*s234*s345 - M1*m5*s234*s45 - 2*M1*m5*s34*s345 + M1*m5*s34*s45 + M1*m5*s34*s61 - M1*s23*s34*s45 + M1*s23*s345*s45 + 2*M1*s234*s34*s45 - M1*s234*s345*s45 + M1*s234*s45^2 - 2*M1*s34^2*s45 + 2*M1*s34*s345*s45 - M1*s34*s45^2 - M1*s34*s45*s61 + M2^2*m4^2 - 2*M2^2*m4*m5 - 2*M2^2*m4*s45 + M2^2*m5^2 - 2*M2^2*m5*s45 + M2^2*s45^2 + M2*m2*m4^2 - 2*M2*m2*m4*m5 - 2*M2*m2*m4*s45 + M2*m2*m5^2 - 2*M2*m2*m5*s45 + M2*m2*s45^2 - M2*m3*m4*m5 + M2*m3*m4*s234 - M2*m3*m4*s61 + M2*m3*m5^2 + 2*M2*m3*m5*s23 - M2*m3*m5*s234 - M2*m3*m5*s45 - M2*m3*m5*s61 - M2*m3*s234*s45 + M2*m3*s45*s61 + M2*m4^2*s345 - M2*m4^2*s61 + M2*m4*m5*s23 - M2*m4*m5*s345 + M2*m4*m5*s61 - 2*M2*m4*s23*s234 + M2*m4*s23*s34 - M2*m4*s23*s345 + 2*M2*m4*s23*s61 - M2*m4*s234*s345 + M2*m4*s234*s45 + 2*M2*m4*s234*s61 - M2*m4*s34*s45 - M2*m4*s34*s61 - M2*m4*s345*s45 + 2*M2*m4*s345*s61 + M2*m4*s45*s61 - 2*M2*m4*s61^2 - M2*m5^2*s23 - 2*M2*m5*s23^2 + 2*M2*m5*s23*s234 - M2*m5*s23*s34 - M2*m5*s23*s345 + M2*m5*s23*s45 + 2*M2*m5*s23*s61 + M2*m5*s234*s345 + M2*m5*s234*s45 - 2*M2*m5*s234*s61 - M2*m5*s34*s45 + M2*m5*s34*s61 + 2*M2*s23*s234*s45 - M2*s23*s34*s45 + M2*s23*s345*s45 - 2*M2*s23*s45*s61 - 2*M2*s234^2*s45 + 2*M2*s234*s34*s45 - M2*s234*s345*s45 - M2*s234*s45^2 + 2*M2*s234*s45*s61 + M2*s34*s45^2 - M2*s34*s45*s61 + 1/4*m2^2*m4^2 - 1/2*m2^2*m4*m5 - 1/2*m2^2*m4*s45 + 1/4*m2^2*m5^2 - 1/2*m2^2*m5*s45 + 1/4*m2^2*s45^2 - 1/2*m2*m3*m4*m5 + 1/2*m2*m3*m4*s234 - 1/2*m2*m3*m4*s61 + 1/2*m2*m3*m5^2 + m2*m3*m5*s23 - 1/2*m2*m3*m5*s234 - 1/2*m2*m3*m5*s45 - 1/2*m2*m3*m5*s61 - 1/2*m2*m3*s234*s45 + 1/2*m2*m3*s45*s61 + 1/2*m2*m4^2*s345 + 1/2*m2*m4^2*s61 - 1/2*m2*m4*m5*s23 - 1/2*m2*m4*m5*s345 + m2*m4*m5*s45 - 1/2*m2*m4*m5*s61 + 1/2*m2*m4*s23*s34 - 1/2*m2*m4*s23*s345 - 1/2*m2*m4*s234*s345 - 1/2*m2*m4*s234*s45 - 1/2*m2*m4*s34*s45 - 1/2*m2*m4*s34*s61 - 1/2*m2*m4*s345*s45 + m2*m4*s345*s61 - 1/2*m2*m4*s45*s61 + 1/2*m2*m5^2*s23 - 1/2*m2*m5*s23*s34 - 1/2*m2*m5*s23*s345 - 1/2*m2*m5*s23*s45 + 1/2*m2*m5*s234*s345 - 1/2*m2*m5*s234*s45 - 1/2*m2*m5*s34*s45 + 1/2*m2*m5*s34*s61 - 1/2*m2*s23*s34*s45 + 1/2*m2*s23*s345*s45 + m2*s234*s34*s45 - 1/2*m2*s234*s345*s45 + 1/2*m2*s234*s45^2 + 1/2*m2*s34*s45^2 - 1/2*m2*s34*s45*s61 + 1/4*m3^2*m5^2 - 1/2*m3^2*m5*s234 - 1/2*m3^2*m5*s61 + 1/4*m3^2*s234^2 - 1/2*m3^2*s234*s61 + 1/4*m3^2*s61^2 - 1/2*m3*m4*m5*s345 + 1/2*m3*m4*m5*s61 + 1/2*m3*m4*s234*s345 + 1/2*m3*m4*s234*s61 - m3*m4*s34*s61 + 1/2*m3*m4*s345*s61 - 1/2*m3*m4*s61^2 - 1/2*m3*m5^2*s23 + 1/2*m3*m5*s23*s234 + 1/2*m3*m5*s23*s34 + 1/2*m3*m5*s23*s345 + 1/2*m3*m5*s23*s61 + 1/2*m3*m5*s234*s345 + 1/2*m3*m5*s234*s45 - m3*m5*s234*s61 - 1/2*m3*m5*s34*s45 + 1/2*m3*m5*s34*s61 - 1/2*m3*s23*s234*s34 + 1/2*m3*s23*s234*s345 + 1/2*m3*s23*s34*s61 - 1/2*m3*s23*s345*s61 - 1/2*m3*s234^2*s345 - 1/2*m3*s234^2*s45 + 1/2*m3*s234*s34*s45 + 1/2*m3*s234*s34*s61 - m3*s234*s345*s45 + 1/2*m3*s234*s345*s61 + 1/2*m3*s234*s45*s61 + 1/2*m3*s34*s45*s61 - 1/2*m3*s34*s61^2 + 1/4*m4^2*s345^2 - 1/2*m4^2*s345*s61 + 1/4*m4^2*s61^2 + 1/2*m4*m5*s23*s345 - 1/2*m4*m5*s23*s61 - m4*s23*s234*s345 + 1/2*m4*s23*s34*s345 + 1/2*m4*s23*s34*s61 - 1/2*m4*s23*s345^2 + 1/2*m4*s23*s345*s61 - 1/2*m4*s234*s345^2 + 1/2*m4*s234*s345*s45 + 1/2*m4*s234*s345*s61 - 1/2*m4*s234*s45*s61 - 1/2*m4*s34*s345*s45 + 1/2*m4*s34*s345*s61 + 1/2*m4*s34*s45*s61 - 1/2*m4*s34*s61^2 + 1/4*m5^2*s23^2 - 1/2*m5*s23^2*s34 - 1/2*m5*s23^2*s345 + 1/2*m5*s23*s234*s345 - 1/2*m5*s23*s234*s45 - m5*s23*s34*s345 + 1/2*m5*s23*s34*s45 + 1/2*m5*s23*s34*s61 + 1/4*s23^2*s34^2 - 1/2*s23^2*s34*s345 + 1/4*s23^2*s345^2 + 1/2*s23*s234*s34*s345 + 1/2*s23*s234*s34*s45 - 1/2*s23*s234*s345^2 + 1/2*s23*s234*s345*s45 - 1/2*s23*s34^2*s45 - 1/2*s23*s34^2*s61 + 1/2*s23*s34*s345*s45 + 1/2*s23*s34*s345*s61 - s23*s34*s45*s61 + 1/4*s234^2*s345^2 - 1/2*s234^2*s345*s45 + 1/4*s234^2*s45^2 + 1/2*s234*s34*s345*s45 - 1/2*s234*s34*s345*s61 - 1/2*s234*s34*s45^2 + 1/2*s234*s34*s45*s61 + 1/4*s34^2*s45^2 - 1/2*s34^2*s45*s61 + 1/4*s34^2*s61^2
codim: 1, face: 2/8, weights: [0, 0, 0, 0, 1, 0], discriminant: 4*M1^2*m4^2 - 8*M1^2*m4*s123 - 8*M1^2*m4*s56 + 4*M1^2*s123^2 - 8*M1^2*s123*s56 + 4*M1^2*s56^2 - 8*M1*M2*m4^2 + 16*M1*M2*m4*s123 + 16*M1*M2*m4*s56 - 8*M1*M2*s123^2 + 16*M1*M2*s123*s56 - 8*M1*M2*s56^2 - 4*M1*m1*m3*m4 + 4*M1*m1*m3*s123 - 4*M1*m1*m3*s56 + 4*M1*m1*m4^2 + 8*M1*m1*m4*s12 - 4*M1*m1*m4*s123 - 4*M1*m1*m4*s34 - 4*M1*m1*m4*s56 - 4*M1*m1*s123*s34 + 4*M1*m1*s34*s56 + 4*M1*m2*m4^2 - 8*M1*m2*m4*s123 - 8*M1*m2*m4*s56 + 4*M1*m2*s123^2 - 8*M1*m2*s123*s56 + 4*M1*m2*s56^2 - 8*M1*m3^2*s56 + 8*M1*m3*m4*s12 + 4*M1*m3*m4*s234 - 8*M1*m3*m4*s34 + 4*M1*m3*m4*s56 - 8*M1*m3*s12*s123 + 8*M1*m3*s12*s56 - 4*M1*m3*s123*s234 + 8*M1*m3*s123*s34 + 4*M1*m3*s123*s56 + 8*M1*m3*s23*s56 - 4*M1*m3*s234*s56 + 8*M1*m3*s34*s56 - 4*M1*m3*s56^2 - 4*M1*m4^2*s12 - 8*M1*m4*s12^2 + 4*M1*m4*s12*s123 - 4*M1*m4*s12*s23 - 4*M1*m4*s12*s234 + 8*M1*m4*s12*s34 + 4*M1*m4*s12*s56 - 4*M1*m4*s123*s234 + 4*M1*m4*s123*s34 + 4*M1*m4*s23*s34 - 4*M1*m4*s23*s56 + 4*M1*s12*s123*s23 - 4*M1*s12*s123*s234 + 8*M1*s12*s123*s34 - 4*M1*s12*s23*s56 + 4*M1*s12*s234*s56 - 8*M1*s12*s34*s56 + 4*M1*s123^2*s234 - 4*M1*s123^2*s34 - 4*M1*s123*s23*s34 - 4*M1*s123*s23*s56 + 8*M1*s123*s234*s34 - 4*M1*s123*s234*s56 - 8*M1*s123*s34^2 + 4*M1*s123*s34*s56 - 4*M1*s23*s34*s56 + 4*M1*s23*s56^2 + 4*M2^2*m4^2 - 8*M2^2*m4*s123 - 8*M2^2*m4*s56 + 4*M2^2*s123^2 - 8*M2^2*s123*s56 + 4*M2^2*s56^2 - 8*M2*m1^2*m4 - 4*M2*m1*m3*m4 + 4*M2*m1*m3*s123 - 4*M2*m1*m3*s56 - 4*M2*m1*m4^2 + 8*M2*m1*m4*s12 + 4*M2*m1*m4*s123 + 8*M2*m1*m4*s23 + 8*M2*m1*m4*s234 - 4*M2*m1*m4*s34 + 4*M2*m1*m4*s56 - 8*M2*m1*s123*s23 + 8*M2*m1*s123*s234 - 4*M2*m1*s123*s34 + 8*M2*m1*s23*s56 - 8*M2*m1*s234*s56 + 4*M2*m1*s34*s56 + 4*M2*m2*m4^2 - 8*M2*m2*m4*s123 - 8*M2*m2*m4*s56 + 4*M2*m2*s123^2 - 8*M2*m2*s123*s56 + 4*M2*m2*s56^2 + 4*M2*m3*m4*s234 - 4*M2*m3*m4*s56 - 4*M2*m3*s123*s234 - 4*M2*m3*s123*s56 + 8*M2*m3*s23*s56 - 4*M2*m3*s234*s56 + 4*M2*m3*s56^2 + 4*M2*m4^2*s12 - 4*M2*m4*s12*s123 - 4*M2*m4*s12*s23 - 4*M2*m4*s12*s234 - 4*M2*m4*s12*s56 + 4*M2*m4*s123*s234 - 4*M2*m4*s123*s34 - 8*M2*m4*s23*s234 + 4*M2*m4*s23*s34 + 4*M2*m4*s23*s56 + 4*M2*s12*s123*s23 - 4*M2*s12*s123*s234 - 4*M2*s12*s23*s56 + 4*M2*s12*s234*s56 - 4*M2*s123^2*s234 + 4*M2*s123^2*s34 + 8*M2*s123*s23*s234 - 4*M2*s123*s23*s34 + 4*M2*s123*s23*s56 - 8*M2*s123*s234^2 + 8*M2*s123*s234*s34 + 4*M2*s123*s234*s56 - 4*M2*s123*s34*s56 - 8*M2*s23^2*s56 + 8*M2*s23*s234*s56 - 4*M2*s23*s34*s56 - 4*M2*s23*s56^2 + m1^2*m3^2 - 2*m1^2*m3*m4 - 2*m1^2*m3*s34 + m1^2*m4^2 - 2*m1^2*m4*s34 + m1^2*s34^2 - 2*m1*m2*m3*m4 + 2*m1*m2*m3*s123 - 2*m1*m2*m3*s56 + 2*m1*m2*m4^2 + 4*m1*m2*m4*s12 - 2*m1*m2*m4*s123 - 2*m1*m2*m4*s34 - 2*m1*m2*m4*s56 - 2*m1*m2*s123*s34 + 2*m1*m2*s34*s56 - 2*m1*m3^2*s234 - 2*m1*m3^2*s56 + 2*m1*m3*m4*s12 + 2*m1*m3*m4*s234 - 4*m1*m3*m4*s34 + 2*m1*m3*m4*s56 - 2*m1*m3*s12*s23 + 2*m1*m3*s12*s234 + 2*m1*m3*s123*s234 + 2*m1*m3*s123*s34 + 2*m1*m3*s23*s34 + 2*m1*m3*s23*s56 + 2*m1*m3*s234*s34 - 4*m1*m3*s234*s56 + 2*m1*m3*s34*s56 - 2*m1*m4^2*s12 + 2*m1*m4*s12*s23 + 2*m1*m4*s12*s234 + 2*m1*m4*s12*s34 - 2*m1*m4*s123*s234 + 2*m1*m4*s123*s34 + 2*m1*m4*s23*s34 - 2*m1*m4*s23*s56 + 2*m1*s12*s23*s34 - 2*m1*s12*s234*s34 - 4*m1*s123*s23*s34 + 2*m1*s123*s234*s34 - 2*m1*s123*s34^2 - 2*m1*s23*s34^2 + 2*m1*s23*s34*s56 + m2^2*m4^2 - 2*m2^2*m4*s123 - 2*m2^2*m4*s56 + m2^2*s123^2 - 2*m2^2*s123*s56 + m2^2*s56^2 + 2*m2*m3*m4*s234 - 2*m2*m3*m4*s56 - 2*m2*m3*s123*s234 - 2*m2*m3*s123*s56 + 4*m2*m3*s23*s56 - 2*m2*m3*s234*s56 + 2*m2*m3*s56^2 + 2*m2*m4^2*s12 - 2*m2*m4*s12*s123 - 2*m2*m4*s12*s23 - 2*m2*m4*s12*s234 - 2*m2*m4*s12*s56 - 2*m2*m4*s123*s234 - 2*m2*m4*s123*s34 + 4*m2*m4*s123*s56 + 2*m2*m4*s23*s34 - 2*m2*m4*s23*s56 + 2*m2*s12*s123*s23 - 2*m2*s12*s123*s234 - 2*m2*s12*s23*s56 + 2*m2*s12*s234*s56 + 2*m2*s123^2*s234 + 2*m2*s123^2*s34 - 2*m2*s123*s23*s34 - 2*m2*s123*s23*s56 + 4*m2*s123*s234*s34 - 2*m2*s123*s234*s56 - 2*m2*s123*s34*s56 - 2*m2*s23*s34*s56 + 2*m2*s23*s56^2 + m3^2*s234^2 - 2*m3^2*s234*s56 + m3^2*s56^2 + 2*m3*m4*s12*s234 - 2*m3*m4*s12*s56 - 4*m3*s12*s123*s234 + 2*m3*s12*s23*s234 + 2*m3*s12*s23*s56 - 2*m3*s12*s234^2 + 2*m3*s12*s234*s56 - 2*m3*s123*s234^2 + 2*m3*s123*s234*s34 + 2*m3*s123*s234*s56 - 2*m3*s123*s34*s56 - 2*m3*s23*s234*s34 + 2*m3*s23*s234*s56 + 2*m3*s23*s34*s56 - 2*m3*s23*s56^2 + m4^2*s12^2 - 2*m4*s12^2*s23 - 2*m4*s12^2*s234 + 2*m4*s12*s123*s234 - 2*m4*s12*s123*s34 - 4*m4*s12*s23*s234 + 2*m4*s12*s23*s34 + 2*m4*s12*s23*s56 + s12^2*s23^2 - 2*s12^2*s23*s234 + s12^2*s234^2 + 2*s12*s123*s23*s234 + 2*s12*s123*s23*s34 - 2*s12*s123*s234^2 + 2*s12*s123*s234*s34 - 2*s12*s23^2*s34 - 2*s12*s23^2*s56 + 2*s12*s23*s234*s34 + 2*s12*s23*s234*s56 - 4*s12*s23*s34*s56 + s123^2*s234^2 - 2*s123^2*s234*s34 + s123^2*s34^2 + 2*s123*s23*s234*s34 - 2*s123*s23*s234*s56 - 2*s123*s23*s34^2 + 2*s123*s23*s34*s56 + s23^2*s34^2 - 2*s23^2*s34*s56 + s23^2*s56^2
codim: 1, face: 3/8, weights: [0, 0, 0, 1, 0, 0], discriminant: 4*M1^2*m6^2 - 8*M1^2*m6*s123 - 8*M1^2*m6*s45 + 4*M1^2*s123^2 - 8*M1^2*s123*s45 + 4*M1^2*s45^2 - 8*M1*M2*m6^2 + 16*M1*M2*m6*s123 + 16*M1*M2*m6*s45 - 8*M1*M2*s123^2 + 16*M1*M2*s123*s45 - 8*M1*M2*s45^2 - 4*M1*m1*m3*m6 + 4*M1*m1*m3*s123 - 4*M1*m1*m3*s45 + 4*M1*m1*m6*s345 - 4*M1*m1*m6*s45 + 8*M1*m1*s12*s45 - 4*M1*m1*s123*s345 - 4*M1*m1*s123*s45 - 4*M1*m1*s345*s45 + 4*M1*m1*s45^2 + 4*M1*m2*m6^2 - 8*M1*m2*m6*s123 - 8*M1*m2*m6*s45 + 4*M1*m2*s123^2 - 8*M1*m2*s123*s45 + 4*M1*m2*s45^2 - 8*M1*m3^2*m6 - 4*M1*m3*m6^2 + 8*M1*m3*m6*s12 + 4*M1*m3*m6*s123 + 8*M1*m3*m6*s23 + 8*M1*m3*m6*s345 + 4*M1*m3*m6*s45 - 4*M1*m3*m6*s61 - 8*M1*m3*s12*s123 + 8*M1*m3*s12*s45 + 8*M1*m3*s123*s345 - 4*M1*m3*s123*s61 - 8*M1*m3*s345*s45 + 4*M1*m3*s45*s61 + 4*M1*m6^2*s23 - 4*M1*m6*s12*s23 - 8*M1*m6*s12*s345 + 4*M1*m6*s12*s45 + 4*M1*m6*s12*s61 - 4*M1*m6*s123*s23 + 4*M1*m6*s123*s345 - 4*M1*m6*s123*s61 - 4*M1*m6*s23*s345 - 4*M1*m6*s23*s45 - 8*M1*s12^2*s45 + 4*M1*s12*s123*s23 + 8*M1*s12*s123*s345 + 4*M1*s12*s123*s45 - 4*M1*s12*s123*s61 - 4*M1*s12*s23*s45 + 8*M1*s12*s345*s45 - 4*M1*s12*s45^2 - 4*M1*s12*s45*s61 - 4*M1*s123^2*s345 + 4*M1*s123^2*s61 - 4*M1*s123*s23*s345 - 8*M1*s123*s345^2 + 4*M1*s123*s345*s45 + 8*M1*s123*s345*s61 - 4*M1*s123*s45*s61 + 4*M1*s23*s345*s45 + 4*M2^2*m6^2 - 8*M2^2*m6*s123 - 8*M2^2*m6*s45 + 4*M2^2*s123^2 - 8*M2^2*s123*s45 + 4*M2^2*s45^2 - 8*M2*m1^2*s45 - 4*M2*m1*m3*m6 + 4*M2*m1*m3*s123 - 4*M2*m1*m3*s45 + 8*M2*m1*m6*s23 + 4*M2*m1*m6*s345 + 4*M2*m1*m6*s45 - 8*M2*m1*m6*s61 + 8*M2*m1*s12*s45 - 8*M2*m1*s123*s23 - 4*M2*m1*s123*s345 + 4*M2*m1*s123*s45 + 8*M2*m1*s123*s61 + 8*M2*m1*s23*s45 - 4*M2*m1*s345*s45 - 4*M2*m1*s45^2 + 8*M2*m1*s45*s61 + 4*M2*m2*m6^2 - 8*M2*m2*m6*s123 - 8*M2*m2*m6*s45 + 4*M2*m2*s123^2 - 8*M2*m2*s123*s45 + 4*M2*m2*s45^2 + 4*M2*m3*m6^2 - 4*M2*m3*m6*s123 + 8*M2*m3*m6*s23 - 4*M2*m3*m6*s45 - 4*M2*m3*m6*s61 - 4*M2*m3*s123*s61 + 4*M2*m3*s45*s61 - 4*M2*m6^2*s23 - 4*M2*m6*s12*s23 - 4*M2*m6*s12*s45 + 4*M2*m6*s12*s61 + 4*M2*m6*s123*s23 - 4*M2*m6*s123*s345 + 4*M2*m6*s123*s61 - 8*M2*m6*s23^2 - 4*M2*m6*s23*s345 + 4*M2*m6*s23*s45 + 8*M2*m6*s23*s61 + 4*M2*s12*s123*s23 - 4*M2*s12*s123*s45 - 4*M2*s12*s123*s61 - 4*M2*s12*s23*s45 + 4*M2*s12*s45^2 - 4*M2*s12*s45*s61 + 4*M2*s123^2*s345 - 4*M2*s123^2*s61 - 4*M2*s123*s23*s345 + 8*M2*s123*s23*s61 - 4*M2*s123*s345*s45 + 8*M2*s123*s345*s61 + 4*M2*s123*s45*s61 - 8*M2*s123*s61^2 + 4*M2*s23*s345*s45 - 8*M2*s23*s45*s61 + m1^2*m3^2 - 2*m1^2*m3*s345 - 2*m1^2*m3*s45 + m1^2*s345^2 - 2*m1^2*s345*s45 + m1^2*s45^2 - 2*m1*m2*m3*m6 + 2*m1*m2*m3*s123 - 2*m1*m2*m3*s45 + 2*m1*m2*m6*s345 - 2*m1*m2*m6*s45 + 4*m1*m2*s12*s45 - 2*m1*m2*s123*s345 - 2*m1*m2*s123*s45 - 2*m1*m2*s345*s45 + 2*m1*m2*s45^2 - 2*m1*m3^2*m6 - 2*m1*m3^2*s61 + 2*m1*m3*m6*s23 + 2*m1*m3*m6*s345 + 2*m1*m3*m6*s45 - 4*m1*m3*m6*s61 - 2*m1*m3*s12*s23 + 2*m1*m3*s12*s45 + 2*m1*m3*s12*s61 + 2*m1*m3*s123*s345 + 2*m1*m3*s123*s61 + 2*m1*m3*s23*s345 - 4*m1*m3*s345*s45 + 2*m1*m3*s345*s61 + 2*m1*m3*s45*s61 + 2*m1*m6*s23*s345 - 2*m1*m6*s23*s45 + 2*m1*s12*s23*s345 + 2*m1*s12*s23*s45 + 2*m1*s12*s345*s45 - 2*m1*s12*s345*s61 - 2*m1*s12*s45^2 + 2*m1*s12*s45*s61 - 4*m1*s123*s23*s345 - 2*m1*s123*s345^2 + 2*m1*s123*s345*s45 + 2*m1*s123*s345*s61 - 2*m1*s123*s45*s61 - 2*m1*s23*s345^2 + 2*m1*s23*s345*s45 + m2^2*m6^2 - 2*m2^2*m6*s123 - 2*m2^2*m6*s45 + m2^2*s123^2 - 2*m2^2*s123*s45 + m2^2*s45^2 + 2*m2*m3*m6^2 - 2*m2*m3*m6*s123 + 4*m2*m3*m6*s23 - 2*m2*m3*m6*s45 - 2*m2*m3*m6*s61 - 2*m2*m3*s123*s61 + 2*m2*m3*s45*s61 + 2*m2*m6^2*s23 - 2*m2*m6*s12*s23 - 2*m2*m6*s12*s45 + 2*m2*m6*s12*s61 - 2*m2*m6*s123*s23 - 2*m2*m6*s123*s345 + 4*m2*m6*s123*s45 - 2*m2*m6*s123*s61 - 2*m2*m6*s23*s345 - 2*m2*m6*s23*s45 + 2*m2*s12*s123*s23 - 2*m2*s12*s123*s45 - 2*m2*s12*s123*s61 - 2*m2*s12*s23*s45 + 2*m2*s12*s45^2 - 2*m2*s12*s45*s61 + 2*m2*s123^2*s345 + 2*m2*s123^2*s61 - 2*m2*s123*s23*s345 - 2*m2*s123*s345*s45 + 4*m2*s123*s345*s61 - 2*m2*s123*s45*s61 + 2*m2*s23*s345*s45 + m3^2*m6^2 - 2*m3^2*m6*s61 + m3^2*s61^2 - 2*m3*m6^2*s23 + 2*m3*m6*s12*s23 - 2*m3*m6*s12*s45 + 2*m3*m6*s12*s61 - 2*m3*m6*s123*s345 + 2*m3*m6*s123*s61 + 2*m3*m6*s23*s345 + 2*m3*m6*s23*s61 - 4*m3*s12*s123*s61 + 2*m3*s12*s23*s61 + 2*m3*s12*s45*s61 - 2*m3*s12*s61^2 + 2*m3*s123*s345*s61 - 2*m3*s123*s61^2 - 2*m3*s23*s345*s61 + m6^2*s23^2 - 2*m6*s12*s23^2 - 4*m6*s12*s23*s345 + 2*m6*s12*s23*s45 + 2*m6*s12*s23*s61 + 2*m6*s123*s23*s345 - 2*m6*s123*s23*s61 - 2*m6*s23^2*s345 + s12^2*s23^2 - 2*s12^2*s23*s45 - 2*s12^2*s23*s61 + s12^2*s45^2 - 2*s12^2*s45*s61 + s12^2*s61^2 + 2*s12*s123*s23*s345 + 2*s12*s123*s23*s61 - 2*s12*s123*s345*s45 + 2*s12*s123*s345*s61 + 2*s12*s123*s45*s61 - 2*s12*s123*s61^2 - 2*s12*s23^2*s345 + 2*s12*s23*s345*s45 + 2*s12*s23*s345*s61 - 4*s12*s23*s45*s61 + s123^2*s345^2 - 2*s123^2*s345*s61 + s123^2*s61^2 - 2*s123*s23*s345^2 + 2*s123*s23*s345*s61 + s23^2*s345^2
codim: 1, face: 4/8, weights: [0, 0, 1, 0, 0, 0], discriminant: -1/2*M1^2*m5^2 + M1^2*m5*m6 + M1^2*m5*s56 - 1/2*M1^2*m6^2 + M1^2*m6*s56 - 1/2*M1^2*s56^2 + M1*M2*m5^2 - 2*M1*M2*m5*m6 - 2*M1*M2*m5*s56 + M1*M2*m6^2 - 2*M1*M2*m6*s56 + M1*M2*s56^2 - 1/2*M1*m1*m5^2 + 1/2*M1*m1*m5*m6 - M1*m1*m5*s12 + 1/2*M1*m1*m5*s34 + 1/2*M1*m1*m5*s345 + 1/2*M1*m1*m5*s56 + 1/2*M1*m1*m6*s34 - 1/2*M1*m1*m6*s345 - 1/2*M1*m1*s34*s56 + 1/2*M1*m1*s345*s56 - 1/2*M1*m2*m5^2 + M1*m2*m5*m6 + M1*m2*m5*s56 - 1/2*M1*m2*m6^2 + M1*m2*m6*s56 - 1/2*M1*m2*s56^2 + 1/2*M1*m5^2*s12 - 1/2*M1*m5*m6*s12 + 1/2*M1*m5*m6*s234 - 1/2*M1*m5*m6*s34 + M1*m5*s12^2 + 1/2*M1*m5*s12*s234 - M1*m5*s12*s34 - M1*m5*s12*s345 - 1/2*M1*m5*s12*s56 + 1/2*M1*m5*s12*s61 - 1/2*M1*m5*s234*s345 + M1*m5*s34*s345 - 1/2*M1*m5*s34*s61 - 1/2*M1*m5*s345*s56 + 1/2*M1*m5*s56*s61 - 1/2*M1*m6^2*s234 + 1/2*M1*m6^2*s34 + 1/2*M1*m6*s12*s234 - M1*m6*s12*s34 + M1*m6*s12*s345 - 1/2*M1*m6*s12*s61 - M1*m6*s234*s34 + 1/2*M1*m6*s234*s345 + 1/2*M1*m6*s234*s56 + M1*m6*s34^2 - M1*m6*s34*s345 - 1/2*M1*m6*s34*s56 + 1/2*M1*m6*s34*s61 - 1/2*M1*m6*s345*s56 + 1/2*M1*m6*s56*s61 - 1/2*M1*s12*s234*s56 + M1*s12*s34*s56 - M1*s12*s345*s56 + 1/2*M1*s12*s56*s61 + 1/2*M1*s234*s345*s56 - M1*s34*s345*s56 + 1/2*M1*s34*s56*s61 + M1*s345^2*s56 + 1/2*M1*s345*s56^2 - M1*s345*s56*s61 - 1/2*M1*s56^2*s61 - 1/2*M2^2*m5^2 + M2^2*m5*m6 + M2^2*m5*s56 - 1/2*M2^2*m6^2 + M2^2*m6*s56 - 1/2*M2^2*s56^2 + M2*m1^2*m5 + 1/2*M2*m1*m5^2 - 1/2*M2*m1*m5*m6 - M2*m1*m5*s12 - M2*m1*m5*s234 + 1/2*M2*m1*m5*s34 + 1/2*M2*m1*m5*s345 - 1/2*M2*m1*m5*s56 - M2*m1*m5*s61 - M2*m1*m6*s234 + 1/2*M2*m1*m6*s34 - 1/2*M2*m1*m6*s345 + M2*m1*m6*s61 + M2*m1*s234*s56 - 1/2*M2*m1*s34*s56 + 1/2*M2*m1*s345*s56 - M2*m1*s56*s61 - 1/2*M2*m2*m5^2 + M2*m2*m5*m6 + M2*m2*m5*s56 - 1/2*M2*m2*m6^2 + M2*m2*m6*s56 - 1/2*M2*m2*s56^2 - 1/2*M2*m5^2*s12 + 1/2*M2*m5*m6*s12 - 1/2*M2*m5*m6*s234 + 1/2*M2*m5*m6*s34 + 1/2*M2*m5*s12*s234 + 1/2*M2*m5*s12*s56 + 1/2*M2*m5*s12*s61 - 1/2*M2*m5*s234*s345 + M2*m5*s234*s61 - 1/2*M2*m5*s34*s61 + 1/2*M2*m5*s345*s56 - 1/2*M2*m5*s56*s61 + 1/2*M2*m6^2*s234 - 1/2*M2*m6^2*s34 + 1/2*M2*m6*s12*s234 - 1/2*M2*m6*s12*s61 + M2*m6*s234^2 - M2*m6*s234*s34 + 1/2*M2*m6*s234*s345 - 1/2*M2*m6*s234*s56 - M2*m6*s234*s61 + 1/2*M2*m6*s34*s56 + 1/2*M2*m6*s34*s61 + 1/2*M2*m6*s345*s56 - 1/2*M2*m6*s56*s61 - 1/2*M2*s12*s234*s56 + 1/2*M2*s12*s56*s61 + 1/2*M2*s234*s345*s56 - M2*s234*s56*s61 + 1/2*M2*s34*s56*s61 - 1/2*M2*s345*s56^2 - M2*s345*s56*s61 + 1/2*M2*s56^2*s61 + M2*s56*s61^2 - 1/8*m1^2*m5^2 + 1/4*m1^2*m5*s34 + 1/4*m1^2*m5*s345 - 1/8*m1^2*s34^2 + 1/4*m1^2*s34*s345 - 1/8*m1^2*s345^2 - 1/4*m1*m2*m5^2 + 1/4*m1*m2*m5*m6 - 1/2*m1*m2*m5*s12 + 1/4*m1*m2*m5*s34 + 1/4*m1*m2*m5*s345 + 1/4*m1*m2*m5*s56 + 1/4*m1*m2*m6*s34 - 1/4*m1*m2*m6*s345 - 1/4*m1*m2*s34*s56 + 1/4*m1*m2*s345*s56 + 1/4*m1*m5^2*s12 + 1/4*m1*m5*m6*s234 - 1/4*m1*m5*m6*s34 - 1/4*m1*m5*s12*s234 - 1/4*m1*m5*s12*s34 - 1/4*m1*m5*s12*s345 - 1/4*m1*m5*s12*s61 - 1/4*m1*m5*s234*s345 + 1/2*m1*m5*s34*s345 - 1/4*m1*m5*s34*s61 - 1/4*m1*m5*s345*s56 + 1/4*m1*m5*s56*s61 - 1/4*m1*m6*s234*s34 - 1/4*m1*m6*s234*s345 + 1/4*m1*m6*s34^2 - 1/4*m1*m6*s34*s345 + 1/2*m1*m6*s34*s61 + 1/4*m1*s12*s234*s34 - 1/4*m1*s12*s234*s345 - 1/4*m1*s12*s34*s61 + 1/4*m1*s12*s345*s61 - 1/4*m1*s234*s34*s345 + 1/4*m1*s234*s345^2 + 1/2*m1*s234*s345*s56 + 1/4*m1*s34^2*s61 - 1/4*m1*s34*s345*s56 - 1/4*m1*s34*s345*s61 - 1/4*m1*s34*s56*s61 + 1/4*m1*s345^2*s56 - 1/4*m1*s345*s56*s61 - 1/8*m2^2*m5^2 + 1/4*m2^2*m5*m6 + 1/4*m2^2*m5*s56 - 1/8*m2^2*m6^2 + 1/4*m2^2*m6*s56 - 1/8*m2^2*s56^2 - 1/4*m2*m5^2*s12 + 1/4*m2*m5*m6*s12 + 1/4*m2*m5*m6*s234 + 1/4*m2*m5*m6*s34 - 1/2*m2*m5*m6*s56 + 1/4*m2*m5*s12*s234 + 1/4*m2*m5*s12*s56 + 1/4*m2*m5*s12*s61 - 1/4*m2*m5*s234*s345 - 1/4*m2*m5*s34*s61 + 1/4*m2*m5*s345*s56 + 1/4*m2*m5*s56*s61 - 1/4*m2*m6^2*s234 - 1/4*m2*m6^2*s34 + 1/4*m2*m6*s12*s234 - 1/4*m2*m6*s12*s61 - 1/2*m2*m6*s234*s34 + 1/4*m2*m6*s234*s345 + 1/4*m2*m6*s234*s56 + 1/4*m2*m6*s34*s56 + 1/4*m2*m6*s34*s61 + 1/4*m2*m6*s345*s56 + 1/4*m2*m6*s56*s61 - 1/4*m2*s12*s234*s56 + 1/4*m2*s12*s56*s61 + 1/4*m2*s234*s345*s56 + 1/4*m2*s34*s56*s61 - 1/4*m2*s345*s56^2 - 1/2*m2*s345*s56*s61 - 1/4*m2*s56^2*s61 - 1/8*m5^2*s12^2 - 1/4*m5*m6*s12*s234 + 1/4*m5*m6*s12*s34 + 1/4*m5*s12^2*s234 + 1/4*m5*s12^2*s61 - 1/4*m5*s12*s234*s345 + 1/2*m5*s12*s234*s61 - 1/4*m5*s12*s34*s61 + 1/4*m5*s12*s345*s56 - 1/4*m5*s12*s56*s61 - 1/8*m6^2*s234^2 + 1/4*m6^2*s234*s34 - 1/8*m6^2*s34^2 + 1/4*m6*s12*s234^2 - 1/4*m6*s12*s234*s34 + 1/2*m6*s12*s234*s345 - 1/4*m6*s12*s234*s61 - 1/4*m6*s12*s34*s61 + 1/4*m6*s234^2*s345 - 1/4*m6*s234*s34*s345 - 1/4*m6*s234*s34*s61 - 1/4*m6*s234*s345*s56 + 1/4*m6*s234*s56*s61 + 1/4*m6*s34^2*s61 + 1/4*m6*s34*s345*s56 - 1/4*m6*s34*s56*s61 - 1/8*s12^2*s234^2 + 1/4*s12^2*s234*s61 - 1/8*s12^2*s61^2 + 1/4*s12*s234^2*s345 - 1/4*s12*s234*s34*s61 - 1/4*s12*s234*s345*s56 - 1/4*s12*s234*s345*s61 - 1/4*s12*s234*s56*s61 + 1/2*s12*s34*s56*s61 + 1/4*s12*s34*s61^2 - 1/4*s12*s345*s56*s61 + 1/4*s12*s56*s61^2 - 1/8*s234^2*s345^2 + 1/4*s234*s34*s345*s61 + 1/4*s234*s345^2*s56 - 1/4*s234*s345*s56*s61 - 1/8*s34^2*s61^2 - 1/4*s34*s345*s56*s61 + 1/4*s34*s56*s61^2 - 1/8*s345^2*s56^2 + 1/4*s345*s56^2*s61 - 1/8*s56^2*s61^2
codim: 1, face: 5/8, weights: [0, 1, 0, 0, 0, 0], discriminant: 4*M1^2*m5^2 - 8*M1^2*m5*m6 - 8*M1^2*m5*s56 + 4*M1^2*m6^2 - 8*M1^2*m6*s56 + 4*M1^2*s56^2 - 8*M1*M3*m5^2 + 16*M1*M3*m5*m6 + 16*M1*M3*m5*s56 - 8*M1*M3*m6^2 + 16*M1*M3*m6*s56 - 8*M1*M3*s56^2 - 4*M1*m1*m4*m5 - 4*M1*m1*m4*m6 + 4*M1*m1*m4*s56 + 4*M1*m1*m5^2 - 4*M1*m1*m5*m6 + 8*M1*m1*m5*s123 - 4*M1*m1*m5*s45 - 4*M1*m1*m5*s56 + 4*M1*m1*m6*s45 - 4*M1*m1*s45*s56 - 8*M1*m4^2*m6 + 4*M1*m4*m5*m6 + 8*M1*m4*m5*s123 - 8*M1*m4*m5*s45 + 4*M1*m4*m5*s61 - 4*M1*m4*m6^2 + 8*M1*m4*m6*s123 + 8*M1*m4*m6*s234 + 8*M1*m4*m6*s45 + 4*M1*m4*m6*s56 - 4*M1*m4*m6*s61 - 8*M1*m4*s123*s56 + 8*M1*m4*s45*s56 - 4*M1*m4*s56*s61 - 4*M1*m5^2*s123 + 4*M1*m5^2*s23 + 4*M1*m5*m6*s123 - 8*M1*m5*m6*s23 - 4*M1*m5*m6*s234 - 8*M1*m5*s123^2 - 4*M1*m5*s123*s234 + 8*M1*m5*s123*s45 + 4*M1*m5*s123*s56 - 4*M1*m5*s123*s61 - 8*M1*m5*s23*s56 + 4*M1*m5*s234*s45 + 4*M1*m5*s45*s56 - 4*M1*m5*s56*s61 + 4*M1*m6^2*s23 + 4*M1*m6^2*s234 - 4*M1*m6*s123*s234 - 8*M1*m6*s123*s45 + 4*M1*m6*s123*s61 - 8*M1*m6*s23*s56 - 4*M1*m6*s234*s45 - 4*M1*m6*s234*s56 + 4*M1*m6*s45*s56 - 4*M1*m6*s56*s61 + 4*M1*s123*s234*s56 + 8*M1*s123*s45*s56 - 4*M1*s123*s56*s61 + 4*M1*s23*s56^2 - 4*M1*s234*s45*s56 - 8*M1*s45^2*s56 - 4*M1*s45*s56^2 + 8*M1*s45*s56*s61 + 4*M1*s56^2*s61 + 4*M3^2*m5^2 - 8*M3^2*m5*m6 - 8*M3^2*m5*s56 + 4*M3^2*m6^2 - 8*M3^2*m6*s56 + 4*M3^2*s56^2 - 8*M3*m1^2*m5 - 4*M3*m1*m4*m5 - 4*M3*m1*m4*m6 + 4*M3*m1*m4*s56 - 4*M3*m1*m5^2 + 4*M3*m1*m5*m6 + 8*M3*m1*m5*s123 + 8*M3*m1*m5*s234 - 4*M3*m1*m5*s45 + 4*M3*m1*m5*s56 + 8*M3*m1*m5*s61 + 8*M3*m1*m6*s234 + 4*M3*m1*m6*s45 - 8*M3*m1*m6*s61 - 8*M3*m1*s234*s56 - 4*M3*m1*s45*s56 + 8*M3*m1*s56*s61 - 4*M3*m4*m5*m6 + 4*M3*m4*m5*s61 + 4*M3*m4*m6^2 + 8*M3*m4*m6*s234 - 4*M3*m4*m6*s56 - 4*M3*m4*m6*s61 - 4*M3*m4*s56*s61 + 4*M3*m5^2*s123 + 4*M3*m5^2*s23 - 4*M3*m5*m6*s123 - 8*M3*m5*m6*s23 + 4*M3*m5*m6*s234 - 4*M3*m5*s123*s234 - 4*M3*m5*s123*s56 - 4*M3*m5*s123*s61 - 8*M3*m5*s23*s56 + 4*M3*m5*s234*s45 - 8*M3*m5*s234*s61 - 4*M3*m5*s45*s56 + 4*M3*m5*s56*s61 + 4*M3*m6^2*s23 - 4*M3*m6^2*s234 - 4*M3*m6*s123*s234 + 4*M3*m6*s123*s61 - 8*M3*m6*s23*s56 - 8*M3*m6*s234^2 - 4*M3*m6*s234*s45 + 4*M3*m6*s234*s56 + 8*M3*m6*s234*s61 - 4*M3*m6*s45*s56 + 4*M3*m6*s56*s61 + 4*M3*s123*s234*s56 - 4*M3*s123*s56*s61 + 4*M3*s23*s56^2 - 4*M3*s234*s45*s56 + 8*M3*s234*s56*s61 + 4*M3*s45*s56^2 + 8*M3*s45*s56*s61 - 4*M3*s56^2*s61 - 8*M3*s56*s61^2 + m1^2*m4^2 - 2*m1^2*m4*m5 - 2*m1^2*m4*s45 + m1^2*m5^2 - 2*m1^2*m5*s45 + m1^2*s45^2 - 2*m1*m4^2*m6 - 2*m1*m4^2*s61 + 2*m1*m4*m5*m6 + 2*m1*m4*m5*s123 - 2*m1*m4*m5*s23 - 4*m1*m4*m5*s45 + 2*m1*m4*m5*s61 - 2*m1*m4*m6*s23 + 2*m1*m4*m6*s234 + 2*m1*m4*m6*s45 - 4*m1*m4*m6*s61 - 2*m1*m4*s123*s234 + 2*m1*m4*s123*s61 + 2*m1*m4*s23*s56 + 2*m1*m4*s234*s45 + 2*m1*m4*s45*s56 + 2*m1*m4*s45*s61 + 2*m1*m4*s56*s61 - 2*m1*m5^2*s123 + 2*m1*m5^2*s23 - 2*m1*m5*m6*s23 - 2*m1*m5*m6*s234 + 4*m1*m5*s123*s23 + 2*m1*m5*s123*s234 + 2*m1*m5*s123*s45 + 2*m1*m5*s123*s61 - 2*m1*m5*s23*s45 - 2*m1*m5*s23*s56 + 2*m1*m5*s234*s45 + 2*m1*m5*s45*s56 - 2*m1*m5*s56*s61 + 2*m1*m6*s23*s45 + 2*m1*m6*s234*s45 + 2*m1*s123*s234*s45 - 2*m1*s123*s45*s61 - 2*m1*s23*s45*s56 - 2*m1*s234*s45^2 - 4*m1*s234*s45*s56 - 2*m1*s45^2*s56 + 2*m1*s45*s56*s61 + m4^2*m6^2 - 2*m4^2*m6*s61 + m4^2*s61^2 - 2*m4*m5*m6*s123 - 2*m4*m5*m6*s23 + 2*m4*m5*s123*s61 + 2*m4*m5*s23*s61 + 2*m4*m6^2*s23 - 2*m4*m6^2*s234 + 2*m4*m6*s123*s234 + 2*m4*m6*s123*s61 + 4*m4*m6*s23*s234 - 2*m4*m6*s23*s56 - 2*m4*m6*s23*s61 + 2*m4*m6*s234*s45 + 2*m4*m6*s234*s61 - 2*m4*m6*s45*s56 + 2*m4*m6*s56*s61 + 2*m4*s123*s234*s61 - 4*m4*s123*s56*s61 - 2*m4*s123*s61^2 - 2*m4*s23*s56*s61 - 2*m4*s234*s45*s61 + 2*m4*s45*s56*s61 - 2*m4*s56*s61^2 + m5^2*s123^2 + 2*m5^2*s123*s23 + m5^2*s23^2 - 2*m5*m6*s123*s23 + 2*m5*m6*s123*s234 - 2*m5*m6*s23^2 - 2*m5*m6*s23*s234 + 4*m5*m6*s23*s56 - 2*m5*s123^2*s234 - 2*m5*s123^2*s61 - 2*m5*s123*s23*s234 - 2*m5*s123*s23*s56 - 2*m5*s123*s23*s61 + 2*m5*s123*s234*s45 - 4*m5*s123*s234*s61 - 2*m5*s123*s45*s56 + 2*m5*s123*s56*s61 - 2*m5*s23^2*s56 + 2*m5*s23*s234*s45 - 2*m5*s23*s45*s56 - 2*m5*s23*s56*s61 + m6^2*s23^2 + 2*m6^2*s23*s234 + m6^2*s234^2 - 2*m6*s123*s23*s234 + 2*m6*s123*s23*s61 - 2*m6*s123*s234^2 - 4*m6*s123*s234*s45 + 2*m6*s123*s234*s61 - 2*m6*s23^2*s56 - 2*m6*s23*s234*s45 - 2*m6*s23*s234*s56 - 2*m6*s23*s45*s56 - 2*m6*s23*s56*s61 - 2*m6*s234^2*s45 + 2*m6*s234*s45*s56 - 2*m6*s234*s56*s61 + s123^2*s234^2 - 2*s123^2*s234*s61 + s123^2*s61^2 + 2*s123*s23*s234*s56 - 2*s123*s23*s56*s61 - 2*s123*s234^2*s45 + 2*s123*s234*s45*s56 + 2*s123*s234*s45*s61 + 2*s123*s234*s56*s61 + 2*s123*s45*s56*s61 - 2*s123*s56*s61^2 + s23^2*s56^2 - 2*s23*s234*s45*s56 + 2*s23*s45*s56^2 + 4*s23*s45*s56*s61 + 2*s23*s56^2*s61 + s234^2*s45^2 - 2*s234*s45^2*s56 + 2*s234*s45*s56*s61 + s45^2*s56^2 - 2*s45*s56^2*s61 + s56^2*s61^2
codim: 1, face: 6/8, weights: [-1, -1, -1, -1, -1, -1], discriminant: 1
codim: 1, face: 7/8, weights: [1, 1, 1, 1, 1, 1], discriminant: 1
codim: 1, face: 8/8, weights: [1, 0, 0, 0, 0, 0], discriminant: M2^2*m5^2 - 2*M2^2*m5*m6 - 2*M2^2*m5*s56 + M2^2*m6^2 - 2*M2^2*m6*s56 + M2^2*s56^2 - 2*M2*M3*m5^2 + 4*M2*M3*m5*m6 + 4*M2*M3*m5*s56 - 2*M2*M3*m6^2 + 4*M2*M3*m6*s56 - 2*M2*M3*s56^2 + M2*m3*m5^2 - 2*M2*m3*m5*m6 - 2*M2*m3*m5*s56 + M2*m3*m6^2 - 2*M2*m3*m6*s56 + M2*m3*s56^2 - 2*M2*m4^2*m6 + M2*m4*m5*m6 - M2*m4*m5*s12 + 2*M2*m4*m5*s123 + M2*m4*m5*s345 - 2*M2*m4*m5*s45 - M2*m4*m6^2 - M2*m4*m6*s12 + 2*M2*m4*m6*s123 + 2*M2*m4*m6*s34 - M2*m4*m6*s345 + 2*M2*m4*m6*s45 + M2*m4*m6*s56 + M2*m4*s12*s56 - 2*M2*m4*s123*s56 - M2*m4*s345*s56 + 2*M2*m4*s45*s56 + M2*m5^2*s12 - M2*m5^2*s123 - M2*m5*m6*s12 + M2*m5*m6*s123 - M2*m5*m6*s34 + 2*M2*m5*s12*s123 - M2*m5*s12*s45 - M2*m5*s12*s56 - 2*M2*m5*s123^2 - M2*m5*s123*s34 - M2*m5*s123*s345 + 2*M2*m5*s123*s45 + M2*m5*s123*s56 + M2*m5*s34*s45 - M2*m5*s345*s56 + M2*m5*s45*s56 + M2*m6^2*s34 + M2*m6*s12*s45 - M2*m6*s123*s34 + M2*m6*s123*s345 - 2*M2*m6*s123*s45 - M2*m6*s34*s45 - M2*m6*s34*s56 - M2*m6*s345*s56 + M2*m6*s45*s56 - M2*s12*s45*s56 + M2*s123*s34*s56 - M2*s123*s345*s56 + 2*M2*s123*s45*s56 - M2*s34*s45*s56 + 2*M2*s345*s45*s56 + M2*s345*s56^2 - 2*M2*s45^2*s56 - M2*s45*s56^2 + M3^2*m5^2 - 2*M3^2*m5*m6 - 2*M3^2*m5*s56 + M3^2*m6^2 - 2*M3^2*m6*s56 + M3^2*s56^2 + M3*m3*m5^2 - 2*M3*m3*m5*m6 - 2*M3*m3*m5*s56 + M3*m3*m6^2 - 2*M3*m3*m6*s56 + M3*m3*s56^2 - M3*m4*m5*m6 - M3*m4*m5*s12 + M3*m4*m5*s345 + M3*m4*m6^2 - M3*m4*m6*s12 + 2*M3*m4*m6*s34 - M3*m4*m6*s345 - M3*m4*m6*s56 + M3*m4*s12*s56 - M3*m4*s345*s56 - M3*m5^2*s12 + M3*m5^2*s123 + M3*m5*m6*s12 - M3*m5*m6*s123 + M3*m5*m6*s34 - 2*M3*m5*s12^2 + 2*M3*m5*s12*s123 + 2*M3*m5*s12*s34 + 2*M3*m5*s12*s345 - M3*m5*s12*s45 + M3*m5*s12*s56 - M3*m5*s123*s34 - M3*m5*s123*s345 - M3*m5*s123*s56 - 2*M3*m5*s34*s345 + M3*m5*s34*s45 + M3*m5*s345*s56 - M3*m5*s45*s56 - M3*m6^2*s34 + 2*M3*m6*s12*s34 - 2*M3*m6*s12*s345 + M3*m6*s12*s45 - M3*m6*s123*s34 + M3*m6*s123*s345 - 2*M3*m6*s34^2 + 2*M3*m6*s34*s345 - M3*m6*s34*s45 + M3*m6*s34*s56 + M3*m6*s345*s56 - M3*m6*s45*s56 - 2*M3*s12*s34*s56 + 2*M3*s12*s345*s56 - M3*s12*s45*s56 + M3*s123*s34*s56 - M3*s123*s345*s56 + 2*M3*s34*s345*s56 - M3*s34*s45*s56 - 2*M3*s345^2*s56 + 2*M3*s345*s45*s56 - M3*s345*s56^2 + M3*s45*s56^2 + 1/4*m3^2*m5^2 - 1/2*m3^2*m5*m6 - 1/2*m3^2*m5*s56 + 1/4*m3^2*m6^2 - 1/2*m3^2*m6*s56 + 1/4*m3^2*s56^2 - 1/2*m3*m4*m5*m6 - 1/2*m3*m4*m5*s12 + 1/2*m3*m4*m5*s345 + 1/2*m3*m4*m6^2 - 1/2*m3*m4*m6*s12 + m3*m4*m6*s34 - 1/2*m3*m4*m6*s345 - 1/2*m3*m4*m6*s56 + 1/2*m3*m4*s12*s56 - 1/2*m3*m4*s345*s56 + 1/2*m3*m5^2*s12 + 1/2*m3*m5^2*s123 - 1/2*m3*m5*m6*s12 - 1/2*m3*m5*m6*s123 - 1/2*m3*m5*m6*s34 + m3*m5*m6*s56 + m3*m5*s12*s123 - 1/2*m3*m5*s12*s45 - 1/2*m3*m5*s12*s56 - 1/2*m3*m5*s123*s34 - 1/2*m3*m5*s123*s345 - 1/2*m3*m5*s123*s56 + 1/2*m3*m5*s34*s45 - 1/2*m3*m5*s345*s56 - 1/2*m3*m5*s45*s56 + 1/2*m3*m6^2*s34 + 1/2*m3*m6*s12*s45 - 1/2*m3*m6*s123*s34 + 1/2*m3*m6*s123*s345 - 1/2*m3*m6*s34*s45 - 1/2*m3*m6*s34*s56 - 1/2*m3*m6*s345*s56 - 1/2*m3*m6*s45*s56 - 1/2*m3*s12*s45*s56 + 1/2*m3*s123*s34*s56 - 1/2*m3*s123*s345*s56 - 1/2*m3*s34*s45*s56 + m3*s345*s45*s56 + 1/2*m3*s345*s56^2 + 1/2*m3*s45*s56^2 + 1/4*m4^2*m6^2 - 1/2*m4^2*m6*s12 - 1/2*m4^2*m6*s345 + 1/4*m4^2*s12^2 - 1/2*m4^2*s12*s345 + 1/4*m4^2*s345^2 + 1/2*m4*m5*m6*s12 - 1/2*m4*m5*m6*s123 - 1/2*m4*m5*s12^2 + 1/2*m4*m5*s12*s123 + 1/2*m4*m5*s12*s345 - m4*m5*s12*s45 + 1/2*m4*m5*s123*s345 - 1/2*m4*m6^2*s34 + 1/2*m4*m6*s12*s34 - m4*m6*s12*s345 + 1/2*m4*m6*s12*s45 + 1/2*m4*m6*s123*s34 + 1/2*m4*m6*s123*s345 + 1/2*m4*m6*s34*s345 + 1/2*m4*m6*s34*s45 + 1/2*m4*m6*s345*s56 - 1/2*m4*m6*s45*s56 - 1/2*m4*s12^2*s45 - 1/2*m4*s12*s123*s34 + 1/2*m4*s12*s123*s345 + 1/2*m4*s12*s34*s45 + 1/2*m4*s12*s345*s45 + 1/2*m4*s12*s345*s56 + 1/2*m4*s12*s45*s56 + 1/2*m4*s123*s34*s345 - 1/2*m4*s123*s345^2 - m4*s123*s345*s56 - 1/2*m4*s34*s345*s45 - 1/2*m4*s345^2*s56 + 1/2*m4*s345*s45*s56 + 1/4*m5^2*s12^2 - 1/2*m5^2*s12*s123 + 1/4*m5^2*s123^2 - 1/2*m5*m6*s12*s34 + 1/2*m5*m6*s123*s34 - 1/2*m5*s12^2*s45 + 1/2*m5*s12*s123*s34 + 1/2*m5*s12*s123*s345 + 1/2*m5*s12*s123*s45 + 1/2*m5*s12*s34*s45 - 1/2*m5*s12*s345*s56 + 1/2*m5*s12*s45*s56 - 1/2*m5*s123^2*s34 - 1/2*m5*s123^2*s345 - m5*s123*s34*s345 + 1/2*m5*s123*s34*s45 + 1/2*m5*s123*s345*s56 - 1/2*m5*s123*s45*s56 + 1/4*m6^2*s34^2 + 1/2*m6*s12*s34*s45 - 1/2*m6*s123*s34^2 + 1/2*m6*s123*s34*s345 - m6*s123*s34*s45 - 1/2*m6*s34^2*s45 - 1/2*m6*s34*s345*s56 + 1/2*m6*s34*s45*s56 + 1/4*s12^2*s45^2 + 1/2*s12*s123*s34*s45 - 1/2*s12*s123*s345*s45 - 1/2*s12*s34*s45^2 - s12*s34*s45*s56 + 1/2*s12*s345*s45*s56 - 1/2*s12*s45^2*s56 + 1/4*s123^2*s34^2 - 1/2*s123^2*s34*s345 + 1/4*s123^2*s345^2 - 1/2*s123*s34^2*s45 + 1/2*s123*s34*s345*s45 + 1/2*s123*s34*s345*s56 + 1/2*s123*s34*s45*s56 - 1/2*s123*s345^2*s56 + 1/2*s123*s345*s45*s56 + 1/4*s34^2*s45^2 + 1/2*s34*s345*s45*s56 - 1/2*s34*s45^2*s56 + 1/4*s345^2*s56^2 - 1/2*s345*s45*s56^2 + 1/4*s45^2*s56^2
codim: 0, face: 1/1, weights: [0, 0, 0, 0, 0, 0], discriminant: 1